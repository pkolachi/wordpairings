write report ||| kurs examinera form skriftlig rapport
form project develop small system consist hardware accord established development process schedule ||| projektform genomföra utveckling liten system bestående hård mjukvara fastställa utvecklingsprocess tidsplan
document project work form eg requirement specification user manual project report ||| dokumentera projektarbete form t_ex kravspecifikation användarmanual projektrapport
course take final thesis ||| studie projektarbete göra eventuell examensarbete program
software development assembly language testing troubleshooting ||| programutveckling assemblerspråk test felsökning
structure assembler basic code generation ||| strukturera assemblerprogrammering grund kodgenerering
first level system programming ie how computer program boot power on handling different type exception such internal error event interrupt ||| en nivå systemprogrammering dvs. hur dator programmera för start spänningstillslag hantering olik typ undantag så som intern fel händelse avbrott
program device parallel input output time management programming timer ||| programmering krets parallell in utmatning tidshantering programmering räknarkretsar
basics computer communication programming device serial communication ||| grund datorkommunikation programmering krets seriekommunikation
moreover simple time-sharing system assembly language special emphasis use peripheral circuit be implement ||| dessutom implementera enkel tidsdelningssystem assemblerspråk speciell tonvikt användning periferikretsar
examination base write exam approve laboratory exercise ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
base exam result grade give ||| basera tentamensresultatet ge betyg
write simple assembly language program use select architecture' instruction set ||| skriva enkel assemblerprogram användande välja arkitektur instruktionsuppsättning
write simple machine orient c program use programming language' datum type control structure ||| skriva enkel maskinorienterade c-program användande programspråk datatyper styrstrukturer
describe assembler equivalent typical programming structure ||| beskriva motsvarighet assembler typisk programstrukturer
apply tool course develop program ||| utnyttja kurs använda verktyg programutveckling adekvat sätt
contribute construction programming simple embedded system give component ||| medverka konstruktion programmering enkel inbyggd system given komponent
construct system generate various type exceptional event internal exception interrupt restart ||| konstruera system innefatta olik typ undantag intern undantag avbrott återstart
describe illustrate few basic type peripheral use ||| beskriva exemplifiera olik typ digital kringkomponenter användning
schedule teaching comprise lecture demonstration supervise simulation code exercise ||| schemalägga undervisning bestå föreläsning demonstration handleda simulering kodningsövningar
also supervise mandatory laboratory ||| dessutom utföra handleda obligatorisk laboration
course student design progressively bigger bigger building block software c assembler ||| kurs konstruera elev stor stor programblock assembler
theory acquire lecture demonstration ||| teori inhämta föreläsning demonstration
student design block then carry test aid simulator simulation exercise ||| elev konstruera programoch test hjälp simulator simuleringsövningar självstudium
preparation laboratory exercise student finally adapt software order enable hardware verification function ||| laboration anpassa elev program så funktion dessutom verifiera hårdvara
mathematical model be use science engineering describe represent different object system analyze understand predict find best design strategy ||| matematisk modell använda vetenskap ingenjörskonst beskriva representera olik slag objekt system analysera förstå förutsäga hitta god konstruktion strategi
mathematical modelling be therefore basic engineering skill ||| matematisk modellering därför grundläggande ingenjörsfärdighet
carefully select exercise course teach mathematical modelling tool solve real problem ||| noggrann utvälja övningsuppgifter lära kurs ut matematisk modellering verktyg lösa verklig problem
problem take computing traditional engineering discipline as well other area such economy medicine game ||| problem tagen datavetenskap traditionell ingenjörsämnen ekonomi medicin spel
course primarily intend introduction mathematical modelling student limited experience use mathematics engineering come work different area where mathematics be useful ||| kurs främst avse introduktion matematisk modellering student begränsad erfarenhet hur matematik använda olik ingenjörsområden arbeta olik område där matematisk modellering användbar
application orient exercise teach modelling problem solve course then bridge gap theoretical course mathematics relevant application ||| tillämpningsorienterade uppgift lära ut modellering problemlösning fylla då kurs igen lucka teoretisk matematikkurserna relevant tillämpning
most update information course see course home page ||| mycket aktuell information kurs se kurs hemsida
core course be number application orient exercise ||| kurs kärna antal tillämpningsorienterade övningsuppgifter
be formulate exploratory style carefully select develop modelling problem solve skill student ||| uppgift formulera utforskande sätt välja utveckla student förmåga modellera lös problem
exercise organize main model type list add keyword roughly indicate more detailed scope ||| övning gruppera huvudsaklig modelltyper lista nedan lägga nyckelord grov indikera omfång
function equation ||| funktion ekvation
significance different kind mathematical expression how motivate ||| betydelse olik matematisk uttryck hur motivera
how find fit function empirical datum ||| hur finna anpassa funktion experimentell data
curve computer graphic ||| kurvor datorgrafik
optimization model ||| optimeringsmodeller
mathematical programming economics decision support ||| matematisk programmering ekonomi beslutsstöd
dynamic model ||| dynamisk modell
simulation biology physics engineering ||| simulering biologi fysik teknik
probability model ||| probabilistisk modell
stochastic simulation ||| stokastisk simulering
model text language expert system ||| markovmodeller text språk expertsystem
bayesian inference ||| bayesiansk inferens
discrete model ||| diskret modell
graph network model project activity model discrete standard problem boolean logic planning ||| graf nät modellering projekt aktivitet modellering diskret standardproblem satslogik planering
model language ||| modelleringsspråk
optimization rule base expert system ||| annan optimering regelbaserade expertsystem
also discuss different problem solve strategy reflect solution compare different way solve same problem ||| diskutera också olik problemlösningsstrategier reflektera lösning olik sätt lösa problem
course also demonstrate importance building mathematical computer model different kind application ||| kurs visa också betydelse matematisk datormodell olik tillämpning
pass exercise assignment ||| godkänd övningsuppgifter
course end individual summarize report where student be encourage summarize reflect course personal perspective ||| kurs avsluta individuell sammanfatta uppsats där student uppmuntra sammanfatta reflektera kurs personlig sätt
see course home page grade criterion ||| betygskriterier se kurs hemsida
course give student ||| kurs ge student
systematic view different kind mathematical model how use different area application ||| systematisk bild olik slag matematisk modell hur använda olik område
attention not only classical mathematical modelling also model common computer science ||| uppmärksamhet ge inte enbart klassisk matematisk modell också modell vanlig datavetenskapen
ability create use evaluate mathematical model different possibly new area application ||| förmåga skapa använda utvärdera matematisk modell olik eventuell ny tillämpningsområde
improve general ability solve mathematical problem ||| öka allmän förmåga lösa matematisk problem
perspective role mathematical modelling mathematics general professional engineer ||| perspektiv betydelse matematisk modellering matematik allmänhet ingenjör yrkesutövning
note emphasis course be learn new non-trivial skill ||| notera tyngdpunkt kurs ligga lära ny icke-triviala färdighet
progress goal appropriately assess different way course ||| student framåtskridande förhållande mål utvärdera löpande kurs lämplig sätt
course be organize weekly module model type ||| kurs organiserad veckomoduler modelltyp
module define introductory lecture exercise week compulsory follow-up exercise give feedback solve exercise ||| modul defineras inledande föreläsning övningsuppgifter lösa vecka uppföljande obligatorisk föreläsning ge återkoppling lösa uppgift
exercise be do group person ||| övning genomföra grupp person
course also contain introductory final lecture ||| kurs ingå även inledande avsluta föreläsning
emphasis place interactive teaching style lot direct contact student teacher ||| kurs betona interaktiv undervisningsstil mycket kontakt student lärare
be do supervision session where student solve exercise regularly discuss teacher ||| ske handledningstimmar där student lösa uppgift regelbunden diskutera lärare
then receive individual feedback appropriate guidance own problem solve ||| då individuell återkoppling vägledning egen problemlösning
assessment exercise adapt encourage creativity independent problem solve ||| examination uppgift anpassa uppmuntra kreativitet oberoende problemlösning
follow module student ask reflect own alternative solution own problem solve ||| uppföljning modul student reflektera egen alternativ lösning egen problemlösning
main teaching language be swedish support give also so be possible take course interested student ||| huvudsaklig undervisningsspråk svensk viss stöd ge även engelska så möjlig intresserad student ta kurs engelska
compulsory course mathematics software engineering programme equivalent i.e. discrete mathematics linear algebra analysis mathematical statistics ||| obligatorisk matematikkurserna it-programmet motsvarande dvs. diskret matematik linjär algebra analys matematisk statistik
course algorithm datum structure complement course good way be requirement ||| kurs algoritm datastrukturer komplettera kurs bra sätt inte förkunskapskrav
learn common abstract datum type datum structure algorithm ||| lära vanlig abstrakt datatyper datastrukturer algoritm
datum type ||| abstrakt datatyper
simple complexity analysis ||| enkel komplexitetsanalys
common datum structure such array list tree hash table how be use implement datum type such stack queue priority queue dictionary graph ||| vanlig datastrukturer fält lista träd hashtabeller hur använda implementera abstrakt datatyper kö prioritetsköer lexikon graf
standard algorithm datum structure resource demand ||| standardalgoritmer datastrukturer resurskrav
iterator ||| iteratorer
sort algorithm ||| sorteringsalgoritmer
standard library datum structure algorithm ||| standardbibliotek datastrukturer algoritm
understand use basic abstract datum type datum structure include list queue table tree graph ||| förstå använda grundläggande abstrakt datatyper datastrukturer annan lista kö tabell träd graf
understand use algorithm use manipulate query basic datum structure efficient way understand why be correct ||| förstå använda algoritm använda hantera grundläggande datastrukturer effektiv sätt förstå varför korrekt
analyse efficiency algorithm ||| analysera viss algoritm effektivitet
make inform choice different datum structure algorithm different application ||| göra välgrundad val olik datastrukturer algoritm olik tillämpning
implement abstract datum type interface datum structure class object-oriented programming language ||| implementera abstrakt datatyper gränssnitt datastrukturer klass objektorienterat programmeringsspråk
program use object-oriented language preferably ||| programmering objektorienterat språk gärna
basic mathematical concept set function relation graph logarithm proof induction ||| grundläggande matematisk begrepp mängd funktion relation graf logaritm induktionsbevis
aim course be teach fundamental principle object orient approach program development how construct orient program ||| kurs syfte lära ut grundprinciperna objektorienterade synsätt hur konstruera objektorienterade program
orient development method be widely spread take strong position today ||| objektorienterade synsätt ha idag mycket stark ställning när gälla programutveckling
orient program consist collection cooperate object ||| program uppbygga objektorienterade princip bestå antal samverka objekt
object encapsulate datum together method access update datum ||| objekt kapsla in data erbjuda metod avläsa uppdatera
object describe datum type call class ||| objekt beskriva s.k. klass
program be code ||| kurs använda programspråk
fundamental concept object orient programming development ||| grundläggande begrepp objektorienterad programutveckling
concept object class datum encapsulation ||| objekt klass datainkapsling
constructor method field ||| konstruktorer metod instansvariabler klassvariabler
modularisation program ||| modularisering program
standards code style name comment ||| kodningsstandard namnsättning kommentering
program testing ||| testning program
dynamic binding polymorphism ||| arv dynamisk bindning polymorfism
abstract class interface ||| abstrakt klass gränssnitt
graphical user interface ||| grafisk användargränssnitt
event listener ||| händelse lyssnare
model-view-controller architecture program graphical user interface ||| model-view-controller-arkitekturen program grafisk användargränssnitt
exception handling ||| felhantering
stream file ||| ström fil
introduction active object thread ||| aktiv objekt tråd
model orientation ||| orientering modellering
mandatory assignment write exam ||| skriftlig tentamen
independently construct orient program use class construct one's own hand together various standard class ||| självständig konstruera objektorienterade program använda egenhändig konstruerad klass färdig standardklasser
construct event drive program graphical user interface ||| konstruera händelsestyrda program grafisk användargränssnitt
use standard class datum collection stream file ||| använda standardklasser bl.a. datasamlingar ström fil
search information standard class ||| söka information standardklasser
use commonly available code development tool ||| använda vanlig förekommande kodutvecklingsverktyg
describe simple object orient model object orient modelling language ||| beskriva enkel objektorienterade modell objektorienterat modelleringsspråk
object orient methodology be now commonly use development variety system ||| objektorienterad metodik använda numera allmän utveckling många olik typ system
uml be use modelling code ||| kurs använda programmeringsspråk uml modelleringsspråk
fundamental concept object orient programming ||| grundläggande begrepp objektorienterad programutveckling
constructor method field ||| konstruktorer metod instans klassvariabler
modelling language uml ||| modelleringsspråket
modularisation program use package ||| modularisering program paket
dynamic binding polymorphism ||| arv dynamisk bindning polymorfism
standard class library documentation ||| användning standardbibliotek dokumentation
documentation program use ||| dokumentation program
standards code style name comment ||| kodningsstandard namnsättning kommentering
program testing ||| testning program
structure exception handling ||| strukturera felhantering
structural concept cohesion coupling refactoring ||| strukturell begrepp kohesion koppling refaktorering
mandatory assignment write exam ||| skriftlig tentamen
final grade be obtain pass assignment be base grade write exam ||| slutbetyg skala ge godkänd inlämningsuppgifter basera tentamen
construct small object orient program ||| konstruera liten objektorienterade program
use commonly available computer base program development tool ||| använda vanlig förekommande programutvecklingsverktyg
master technique datum encapsulation inheritance polymorphism object orient programming language ||| behärska tekniker datainkapsling arv polymorfism objektorienterat programmeringsspråk
construct simple object orient model graphical modelling language ||| konstruera enkel objektorienterade modell grafisk modelleringsspråk
uml be use modelling code ||| kurs använda programmeringsspråk uml modelleringsspråk
orient modelling ||| objektorienterad modellering
graphical user interface ||| grafisk användargränssnitt
model-view-controller architecture ||| model-view-controller-arkitekturen
stream file ||| ström fil
parallel programming ||| parallprogrammering
active object thread ||| aktiv objekt tråd
communication ||| kommunikation
port socket datagram multicast client-server ||| port socketar datagram multicasting client-server
reflection class loading ||| reflektion klassladdning
mandatory assignment project write exam ||| skriftlig tentamen
final grade be obtain pass assignment project be base grade write exam ||| slutbetyg skala ge godkänd inlämningsuppgifter projekt basera tentamen
construct object orient program graphical user interface thread ||| konstruera objektorienterade program grafisk användargränssnitt trådstruktur
construct object orient model graphical modelling language ||| konstruera objektorienterade modell grafisk modelleringsspråk
use commonly available computer base program development tool ||| använda vanlig förekommande datorbaserad verktyg objektorienterad metodik
perform program development project group ||| arbeta programutveckling projektgrupp
recent year powerful tool verify software hardware system be develop ||| sen år kraftfull verktyg verifikation programvara hårdvarusystem utvecklas
tool rely crucial way logical technique ||| verktyg förlita_sig avgörande sätt logisk tekniker
course provide sound basis logic short introduction logical framework use modelling specify verify computer system ||| kurs ge god grund logik kort introduktion logisk ramverk använda modellera specificera modellera datorsystem
sound basic knowledge logic be welcome prerequisite course program verification formal method artificial intelligence ||| grundläggande kunskap logik god grund kurs programverifiering formell metod artificiell intelligens
cover propositional logic section predicate logic section model-checking section ||| täcka satslogik avsnitt predikatlogik avsnitt model-checking avsnitt
student be able understand use formal tool check software hardware such sat-solver model checking tool use software engineering ||| student förstå använda formell verktyg kontroll mjukvara hårdvara sat-lösare model checking tools " använda programvaruteknik
also be able explain meaning soundness completeness various logic propositional predicate temporal logic write derivation tree natural deduction predicate logic ||| också förklara innebörd sundhet fullständighet olik logiker satsa predikat temporal logik skriva härledning naturlig deduktion predikatlogik
requirement course be successfully complete year subject computer science equivalent ||| krav kurs ha framgångsrik slutföra år ämne datavetenskap motsvarande
particularly relevant be mathematics include discrete mathematics datum structure ||| särskilt relevant matematik inklusive diskret matematik programmering algoritm datastrukturer
work involve organization lead project development product such ||| projektarbete ingå organisation ledning projekt själva utvecklingsarbete
aim be give sufficient knowledge formulation problem search information report documentation other area relevant upcome thesis work ||| ytterlig syfte ge tillräcklig kunskap problemformulering informationssökning rapportering dokumentation etc. självständig genomföra efterföljande examensarbete
course give student practical experience form work project group when come planning construction implementation verification non-trivial system hard and/or software ||| generell se kurs ge studerande praktisk erfarenhet arbete projektgrupp planering konstruktion implementering verifiering icke-trivialt system bestående hård mjukvara
work project ||| arbete projekt
information search ||| informationssökning
writing report oral presentation ||| rapportskrivning samt muntlig presentation
project group individual participant doesn't pass exam direction give additional work need get grade ||| underkänna betyg grupp enskild individ ge en gång anvisning komplettering genomföra erhålla godkänna betyg
identify formulate project assignment ||| identifiera formulera projektuppgift
distribute role group develop rule corporation ||| fördela roller arbetsgrupp fastlägga samarbetsprinciper
make time plan ||| göra tidsplanering
identify require knowledge find relevant information ||| identifiera kunskapsbehov söka information
develop evaluate suggestion solution problem hand carry development process evaluate solution ||| ta fram värdera lösningsförslag genomföra samt utvärdera lösning
handle oral written presentation ||| genomföra muntlig skriftlig redovisning
project run group student ||| projekt genomföra grupp teknolog
project group have orderer main tutor ||| projekt ha beställare huvudhandledare
student choose project assignment list project offer also give own proposal ||| student välja projekt antal erbjuda projekt också komma egen förslag
projects group student form ||| projektgrupp student forma
course present possible approach develop web application ||| kurs presentera olik utvecklingsalternativ web applikation
approach design be discuss couple technique be present ||| alternativ diskutera designfrågor antal tekniker presentera
course emphasize hands-on work use modern advanced development environment server environment ||| kurs innehålla praktisk arbete avancerad utvecklingsmiljöer server-miljöer
main content course be design implementation configuration deployment execution trouble shooting ||| design implementation konfigurering driftsättning exekvering felsökning web-applikationer utgöra huvuddel kurs
content glance ||| övergripande innehåll
standards platform framework architecture design approach more ||| standards plattform ramverk arkitektur design utvecklingsalternativ m.m.
client side technology more ||| tekniker klientsidan m.fl.
server side technology server face web services rest more ||| tekniker serversidan m.fl.
possibly emerge technology ||| eventuell emerging
pass assignment project ||| godkänd inlämningsuppgifter projekt
grade ||| betyg
grade decide project ||| betyg ge projekt
do sensible choice present approach technique modern web application ||| kurs presentera utvecklingsalternativen tekniker göra medveten val då utveckla web applikation
result choice design implement deploy debug basic web application ||| val designa implementera driftsätta felsöka enkel web applikation
basic level be able find use open specification standard area ||| grundläggande söka använda öppen standard specifikation web område
lecture assignment final project ||| kurs ge form föreläsning datorövningar inlämningsuppgifter avsluta projekt
good programming skill ||| minst hp java
||| grundläggande kunskap
course dat050 dat055 let375 leu061 tda357 equivalent ||| lämplig kurs dat050
course student do project limited time ||| kurs student genomföra projektarbete begränsad tid
subject freely choose computer science engineering suggest student potential supervisor ||| ämne fri välja datavetenskap datateknik föreslå potentiell handledare student själv
project be nontrivial level ||| projekt icke-trivialt
project be do small group understanding group member contribute substantially individually ||| projekt göra liten grupp där samtlig medlem bidra substansiellt individuell
final report deliver also present orally ||| projekt redovisa slutrapport muntlig presentation
contents depth clarity count ||| bedömning ske innehåll djup tydligehet
subject freely choose area computer science engineering ||| projekt ämne välja fri område datavetenskap datateknik
project suggest student potential supervisor ||| projekt föreslå student själv handledare
write report oral presentation ||| skriftlig rapport muntlig presentation
supervisor recommend final grade project approval course examiner ||| handledare rekomenderar slutbetyg projekt sedan godkänna kurs examinator
work complex task have clear goal general predefined result ||| arbeta komplex problem ha klar mål fördefinierat resultat
integrate knowledge disparate field appropriate ||| integrera kunskap olik område behövas
apply strengthen various skill such ||| tillämpa stärka förmåga t.ex.
problem recognition problem solve ||| känna igen lösa problem
model problem ||| modellering problem
application adaptation textbook method ||| tillämpning anpassning känna metod
independent literature investigation ||| oberoende litteratursökning
implementation software use exist software package ||| implementering mjukvara användande existerande mjukvarupaket
testing mjukvara ||| testning mjukvara
draw conclusion experimental result ||| dra slutsats experimentell resultat
plan step complex work set intermediate goal keep project run come realistic estimate resource achievable result revise goal develop work-around necessary ||| planera komplex arbete sätta upp delmål hålla projekt igång göra realistisk bedömning resurskrav möjlig resultat revision mål hitta annan angreppssätt nödvändig
communicate present result efficiently write orally ||| kommunicera presentera resultat effektiv skriftlig muntlig
document work way other build later on ||| dokumentera arbete så bygga vidare resultat
student have find supervisor ||| student själv hitta handledare
apply course student arrange teacher be willing supervise project ||| söka kurs student hitta lärare villig agera handledare projekt
overall aim course be introduce student design verification electronic system ||| kurs övergripande syfte introducera student konstruktion verifiering elektroniksystem
course intend give solid foundation hdl-based hardware design be necessary course follow eesd curriculum simultaneously give overview field electronic system design ||| kurs avse ge stabil grund hdl-baserad hårdvarukonstruktion nödvändig följande kurs eesd-programmet samtidig ge överblick konstruktion inbyggd elektroniksystem
suggest how select different technology platform software processor pcb base parameter such design production power cost different technology ||| val implementationsplattform mjukvara processor kretskort utgångspunkt kostnad design produktion effektförsörjning olik alternativ
describe implementation step require design verification test complex electronic system how step related other ||| beskriva implementationssteg krävas konstruktion verifiering test komplex elektroniksystem hur steg relatera
describe how electronic system design project be organize steer ||| beskriva hur konstruktionsprojekt elektroniksystem organisera styra
power delivery heat removal electronic system how design aspect determine best implementation strategy ||| diskutera kraftförsörjning kylning elektroniksystem hur designaspekter avgöra val implementationsstrategier
digital part electronic system use hardware description language hdl test bench as well basic tool such hdl simulator synthesis tool ||| implementera digital del elektroniksystem hjälp hårdvarubeskrivande språk hdler testbänkar enkel konstruktionsverktyg eda-verktyg hdl-simulatorer syntesverktyg
describe how basic system-oriented design carry use model-based design simulation tool be interface hardware implementation tool ||| redogöra hur konstruktion genomföra systemnivå hjälp verktyg modellbaserad konstruktion simuleringsverktyg angöra verktyg hårdvarukonstruktion ovan
lab series improve tool proficiency lecture series provide overview ||| labserie förbättra säkerställa student verktygsvana föreläsningsserie ge överblick fält
first half lab series carry out individually second half carry group ||| en halva labserien genomföra individuell två halva genomföra par
basic course logic design electronic circuit ||| grundkurs logikkonstruktion elektronikkretsar
basic training hardware description language vhdl verilog ||| grundläggande färdighet hårdvarubeskrivande språk
overall aim course be student learn how critically creatively identify formulate solve complex design problem ||| övergripande syfte student lära kritisk oberoende kreativ identifiera formulera lösa komplex konstruktionsproblem
achieve let group student put training fall use design complete embedded electronic system ||| uppnå student tillämpa teoretisk kunskap höst konstruera komplex elektronisk system grupprojekt
project goal vary year year technical area project span embedded software technology platform such ||| projekt mål variera år år spänna teknikinnehåll ändock inbyggd mjukvara teknologiplattformar fpga asic
be course where student team undertake electronic product prototype design ||| kurs designa studentgrupper elektronisk produktprototyp
product specification functional design detailed design way implementation ||| specifikation funktionell design detaljdesign ändå fram implementation
target technology be digital analog ||| målteknologierna asic digital analog
pass number compulsory task have fulfil team ||| godkänna kurs team genomföra antal uppgift
include submit half-time report s final report get approve ||| omfatta leverera halvtidsrapport er slutrapport er få godkänd
conduct regular project meeting supervisor include reflection meeting close-out meeting ||| delta regelbunden teammöten grupp handledare reflektionsmöten halvtid projektavslut
orally present planning half-time final report ||| muntlig presentera planeringsarbetet halvtidsrapporterna slutrapporterna
deliver approve end product ||| leverera godkänna produkt
addition student have maintain personal logbook ||| dessutom student kontinuerlig föra personlig loggbok
team project assess accord main deliverable final academic report product include product documentation team process ||| grupp examinera huvudsaklig slutleveranser slutlig akademisk rapport % produkt produktspecifikation % process projekt gång %
team process assess use team individual logbook agile process documentation supervisor contact etc. ||| process examinera utgående grupp gemensam individuell loggbok dokumentation agila process handledarkontakter etc.
result combined assessment be team base grade ||| resultat sammanlägga bedömning grupp basbetyg
individual grade be award student base contribution team's result part ||| individuell betyg sätta sedan student basera student bidrag grupp gemensam resultat del
individual grade be higher lower team base grade ||| individuell betyg hög låg grupp basbetyg
apply her/his technical expertise multi-person project where electronic product fpga asic be specify design implement verify ||| tillämpa teknisk expertis flerpersonsprojekt elektronisk produkt specificera designa implementera verifiera
proficiently use modern eda tool ||| sakkunnig använda modern eda-verktyg fpga asic
several team role multi-person project where industry-like agile project model be use ||| bidra flera roller flerpersonsprojekt agil projektmodell industriell typ använda
include planning follow-up trade off resource constraint ||| inkludera planera följa upp göra avvägning resursbegränsning
reflect group process team ||| reflektera grupp grupprocess relation teori grupputveckling
write academic report several author describe product-development project correct handling reference ||| skriva akademisk rapport med_flera:06 författare ämne produktutvecklingsprojekt korrekt källhantering
document electronic product technically include testing verification documentation ||| dokumentera elektronisk produkt teknisk dokumentation test verifiering
design presentation time constraint deliver ||| designa muntlig presentation framföra tidsbegränsning
course consist major project assignment ||| kurs bestå stor designprojekt
project work be do team where number student work together ||| projektarbete göra team där antal student arbeta tillsammans
project target technology be fpga also digital analog asic ||| målteknologierna fpga också digital analog asic
project work conduct accord well-known agile project model ||| projektarbete använda vedertagen agil projektmodell
project report orally write report ||| projekt process resultat redovisa muntlig skriftlig
write report comprise technical documentation report require project model academic report ||| skriftlig redovisning omfatta teknisk dokumentation projektdokumentation använda projektmodell akademisk rapport
pass grade laboratory part dat093 course element dat091 dat092 require ||| godkänna krävas laborationsdelen kursmoment kurs
pass grade laboratory part mcc092 course element mcc091 course element course element require ||| godkänna krävas också laborationsdelen mcc092 kursmoment mcc091 kursmoment kursmoment
lab exercise term paper work ethic assignment dat110 submit time ||| konstruktionsövningar fördjupningsstudie etikuppgift lämna in tid
student mpees master program have priority course ||| student masterprogrammet förtur kurs
other student fulfill prerequisite admit seat be available ||| annan student uppfylla förkunskapskraven anta mån plats
computer be key component almost technical system today functional flexibility as well ability execute fast power efficient way ||| dator utgöra viktig komponent nästan teknisk system idag grund funktionell flexibilitet förmåga utföra beräkning snabb energieffektiv
fact computational performance computer double month last several decade ||| själva verk ha beräkningshastigheten dator fördubbla ca månad sen decennium
course cover important principle how design computer offer high performance application software ||| kurs täcka fundamental princip hur konstruera dator erbjuda hög beräkningshastighet programvara
course cover architectural technique essential achieve high performance application software ||| kurs omfatta arkitekturella tekniker nödvändig uppnå hög prestanda exekvera program
also cover simulation-based analysis method quantitative assessment impact certain architectural technique have performance power consumption ||| omfatta även simuleringsbaserade analysmetoder kvantitativ analys konsekvens konstruktionsbeslut prestanda strömförbrukning
content be divide follow part ||| kursinnehållet indela följande del
first part cover trend affect evolution computer technology include law metric performance execution time throughput power consumption benchmark as well fundamental computer performance such law locality reference ||| en del omfatta trend påverka utveckling datorteknik moore lag mått beräkningshastighet responstid kapacitet strömförbrukning benchmarking lag referenslokalitet
also cover how simulation base technique be use quantitatively evaluate impact design principle computer performance ||| täcka också hur simuleringsbaserade tekniker använda kvantitativ utvärdera effekt konstruktionsbeslut beräkningshastigheten
second part cover various technique exploitation instruction level parallelism define key concept be limit ||| annan del omfatta olik tekniker utnyttjande parallellism instruktionsnivå definiera nyckelbegrepp begränsa
technique cover fall broad category dynamic static technique ||| tekniker omfatta dela in huvudkategorier dynamisk statisk tekniker
most important dynamic technique cover be algorithm branch prediction speculation ||| viktig dynamisk tekniker omfatta algoritm prediction spekulation
most important static technique be loop unrolling software pipelining trace scheduling predicate execution ||| viktig statisk tekniker loop unrolling software pipelining trace scheduling predicated execution
third part deal memory hierarchy ||| tre del handla minneshierarkier
part cover technique attack different source performance bottleneck memory hierarchy such technique reduce miss rate miss penalty hit time ||| del omfatta tekniker angripa olik prestandaflaskhalsar minneshierarkin tekniker minska antal cache missa samt minska tid hantera cache träff miss
example technique cover be victim cache lockup-free cache prefetching virtually address cache ||| exempel tekniker behandla inklusiva exkusiva hierarki lockup-free cachar prefetching
also main memory technology be cover part ||| virtuell minne behandla också
fourth part deal multicore/multithreaded architecture ||| fyra del behandla flerkärniga flertrådade processorarkitekturer multicores
system level deal programming model how processor core chip communicate other shared address space ||| systemnivå behandla programmeringsmodeller hur processorkärnor chip kommunicera gemensam adressrum
write exam ||| godkänd laboration skriftlig projektrapport skriftlig tentamen
course be organize lecture exercise case study laboratory task mini research project assignment ||| kurs organiserad föreläsning övning fallstudie laboration miniprojekt
lecture focus fundamental concept structure ||| föreläsning behandla grundläggande begrepp struktur
case study base state art computer document scientific literature ||| fallstudie basera modern kommersiell dator dokumentera vetenskaplig litteratur
student carry case study present plenary session fellow student instructor ||| student fallstudie presentera plenum kurskamrat instruktör
light fact integrate billion transistor single integrated circuit electronic system designer force make use computer-aided design tool so-called tool manage design complexity meet example strict timing power dissipation time-to-market budget ||| bakgrund faktum integrera miljard transistor enda integrera krets tvinga konstruktör elektroniksystem använda datorstöd så kalla electronic automation verktyg hantera komplexitet konstruktion klara strikt systembudgetar exempel timing effektutveckling konstruktionstid
thus apart have skill abstraction level circuit logic architecture design electronic system designer have thorough understanding design verification method span different abstraction level algorithm be leveraged tool ||| bortse ha kunskap enskild abstraktionsnivåer krets logik arkitekturkonstruktion därför systemkonstruktören även ha grundlig förståelse konstruktion verifieringsmetoder spänna olik abstraktionsnivåerna algoritm central eda-verktygen
purpose course be strengthen student' knowledge eda-based design verification method make student proficient utilize right eda tool right context right sequence ||| syfte kurs stärka student kunskap metod eda-baserad konstruktion verifiering göra student förtrogen använda rätt eda-verktyg rätt sammanhang rätt ordning
lecture series mirror overall content course cover ||| föreläsningsserien spegla kurs stor innehålla följande
terminology structure system ||| terminologi struktur eda-system
design electronic system base software hardware ||| konstruktion elektroniksystem uppbygga mjuka hårdvara
functional verification ||| funktionell verifiering
behavioral logic synthesis ||| beteende logiksyntes
timing analysis ||| timinganalys
power energy analysis ||| energianalys
||| variabilitet
physical design ||| fysisk konstruktion
design test manufacturability ||| konstruktion test tillverkningsbarhet
discrete mathematics optimization relevant ||| diskret matematik optimering relevant
technical write ||| teknisk rapportskrivning
lecture technical writing be also peer-response workshop where student get develop write skill reading comment draft term paper group ||| föreläsning teknisk rapportskrivning innehålla kurs också skrivarworkshop där student utveckla skriva granska kommentera utkast fördjupningsstudien
lecture ethical associate dat110 give q1's dat093 introduction electronic system design preparation ||| föreläsning in höra samman ge förberedande syfte redan dat093 introduktion elektroniksystemkonstruktion läsperiod
examination have part ||| examination bestå delar:
lab exercise include synthesis place-and-route asic ||| konstruktionsövningar syntes place-and-route
total course grade base quality preparation vhdl handin log book lab report ||| % kurs betyg bestämma förberedelse vhdl-inlämning loggbok laborationsrapport
term paper work team student select topic include term paper report oral presentation ||| fördjupningsstudie grupp student välja område rapport term paper muntlig presentation
total course grade base quality term paper report oral presentation ||| % kurs betyg bestämma rapport muntlig presentation
ethic assignment ||| etikuppgift
individual assignment involve write reflective note address ethical dilemma research development technical scope course grade pass fail ||| individuell uppgift leda kort skriftlig reflektion etisk dilemma forskning utveckling kurs teknisk område betygsätta godkänna icke godkänna
describe algorithmic principle number important concept such behavioral logic synthesis logic simulation static timing analysis time closure power dissipation analysis ||| beskriva algoritmiska princip antal viktig eda-koncept beteende logiksyntes logiksimulering statisk timinganalys timing closure effektanalys
describe contemporary design flow fundamental weakness strengths3 ||| beskriva modern eda-baserade konstruktionsflöden fundamental svaghet styrka
apply tool include simple shell script design verification digital electronic system ||| använda linux-baserade eda-verktyg inklusive enkel shell scripts kommandofiler konstruktion verifiering digital elektroniksystem
perform timing-driven synthesis power dissipation analysis digital circuit ||| genomföra fördröjningsdriven timing-driven syntes effektanalys digital krets
critically systematically integrate knowledge model simulate evaluate feature digital asic design flow ||| kritisk systematisk integrera kunskap modellera simulera utvärdera egenskap relevant konstruktionsflöden digital
clearly unambiguously communicate his/her conclusion laboratory work in-depth term paper study knowledge rationale underpin as well ethical aspect ||| tydlig sätt kommunicera slutsats konstruktionsövningarna fördjupningsstudierna term paper också redovisa bakomliggande faktum göra val etisk aspekt
pedagogical concept course rest cornerstone ||| kurs uppbygga olik pedagogisk delar:
lecture ||| föreläsning
mainly supply design verification context advanced electronic system contain software hardware ||| ge kontext konstruktionsövningarna fördjupningsstudierna
lab exercise ||| konstruktionsövningar
term paper work ||| fördjupningsstudie term paper
introduction electronic system design dat093 ||| introduktion elektroniksystemkonstruktion
course intend give insight how mixed-signal subsystem include converter specify implement how affect performance system be part ||| kurs avse ge förståelse hur mixed-signal-subsystem a-omvandlare specificera implementera hur påverka systemprestanda
course include section sampling quantization ||| kurs ta upp sampling kvantisering
converter specification ||| omvandlarspecifikationer
commonly use converter architecture ||| vanlig omvandlararkitekturer
analog interface component such filter ||| analog interfacekomponenter såsom linjär filter
influence converter imperfection system performance ||| hur icke-idealiteter inverka systemprestanda
cost limit give parameter ||| gräns implementationskostnad given parameter
lab series report submission oral exam voluntary sit-down exam ||| labserie rapportinlämning muntlig examen frivillig skriftlig tentamen
final grade be weighted sum ||| slutlig betyg väga samman
specifically student be able ||| speciell komma student
estimate influence converter imperfection converter system performance ||| uppskatta inflytande omvandlare icke-idealiteter omvandlare system prestanda
identify requirement analog interface component give converter solution ||| identifiera krav analog kringkomponenter specifikation omvandlare
mixed-signal subsystem use software tool order verify assumption hand calculation ||| modellera simulera mixed-signal-system lämplig verktyg verifiera antagande beräkning
course mainly comprise lecture lab exercise support problem-solving session ||| kurs basera föreläsning laboration stödja övningstillfällen
lecture introduce material textbook research papers ||| föreläsning presentera material textbok forskningsartiklar
lab exercise base software simulation mixed-signal subsystem ||| laboration omfatta mjukvarusimuleringar analog analog digital system
functional programming constructive logic simply type lambda calculus type safety inductive definition proof technique dependent type proof assistant base type theory ||| funktionell programmering konstruktiv logik enkel typad lambdakalkyl typsäkerhet induktiv definition bevistekniker beroende typ korrekturassistens basera typteori
course also contain introduction programming dependent type constructive type theory ||| kurs innehålla också introduktion programmering beroende typ martin-löfs konstruktiv typteori teori förena matematisk bevis programmering
example give illustrate unity mathematics programming theory ||| vidare komma student få praktisk erfarenhet programmera språk beroende typ
course examine homework oral presentation take home exam ||| kurs examinera hemuppgift muntlig presentation hemtentamen
homework take home exam include theoretical problem programming assignment interactive programming proof system use dependent type ||| läxa hemtentamen omfatta teoretisk problem programmeringsuppgifter
oral presentation be do pair student select research paper chapter course book involve application type system cover lecture ||| muntlig presentation ske parvis student välja presentera uppsats kapitel kursboken involvera tillämpning typsystem inte omfatta föreläsning
presentation judge respect quality slide oral presentation ||| presentation bedöma avseende presentationamaterialet muntlig presentation
complete course student have solid broad foundation type system programming language ||| avsluta kurs student ha solid bred grund typsystem programmeringsspråk
student be able design analyse implement type system also use different application area ||| student konstruera analysera implementera typsystem även använda olik applikationsområden
moreover student be able work interactive programming proof system use dependent type ||| dessutom student arbeta interaktiv programmering bevissystem beroende typ
further goal be student be able make ethical consideration his/her work ||| ytterlig syfte student översiktlig belysa etisk konsekvens arbete
research area number related topic briefly present student introduction lecture ||| forskningsområde antal relatera ämne presentera student introduktionsföreläsningar
group allocate topic paper be write ||| student bilda arbetsgrupp grupp tilldela ämne grupp skriva uppsats
paper orally present ||| uppsats presentera muntlig seminarium
student also require make peer review other papers ||| student också granska publikation annan grupp uppsats
be lecture seminar workshop area scientific writing review presentation as well ethic ||| undervisning ske form föreläsning seminarium workshoppar uppsatsmetodik granskning presentation etik
pass course student ||| betyg godkänna kurs student
write analytical survey paper other scientific paper give topic specific research area ||| författa analysera översiktsuppsats annan vetenskaplig uppsats given ämne specifik forskningsområde
complete review assignment ||| granska publikation annan student arbete
make oral presentation paper ||| presentera uppsats muntlig
participate lecture seminar workshop technical writing presentation technique ||| delta föreläsning seminarium workshoppar område uppsatsmetodik presentationsteknik
participate ethical part course complete give assignment area ||| delta kurs etisk moment genomföra eventuell specifik uppgift etikområdet
acquaint research field ||| fördjupa forskningsområde
student investigate select area research deepen his/her knowledge say area ||| student undersöka utvälja forskningsområde fördjupa kunskap område
knowledge be use write scientific paper ||| tillägna kunskap student visa skriva uppsats
perform independent literature review ||| genomföra självständig litteraturstudie
give scientific problem study field student be able find most relevant papers scientific literature review communicate review result ||| utgående vetenskaplig problem studerad område student söka fram mycket relevant artikel vetenskaplig litteratur granska kommunicera granskning resultat
write analytical survey paper other scientific paper ||| författa analysera översiktsuppsats annan vetenskaplig uppsats
student be able plan structure write research related paper select scientific field ||| student planera strukturera författa vetenskaplig uppsats välja vetenskapsområdet
report base already publish papers student be able independently select papers ||| uppsats basera publicera vetenskaplig artikel student självständig välja ut relevant artikel
make ethical assessment ||| göra etisk bedömning
student be able make defend ethical judgement general particular area scientific writing e.g. related plagiarism authorship ||| student göra försvara etisk bedömning generell särskilt område akademisk skrivande t_ex relatera plagiering författarskap
where applicable student be able discuss value societal economic consequence his/her work ||| student där så tillämpbar diskutera värdera samhällelig etisk ekonomisk konsekvens arbete
aim course be give understanding how programming language design document implement ||| syfte kurs skapa förståelse hur programmeringsspråk utforma dokumentera implementera
when implement interpreter compiler learn practical implementation concern as well theory formal semantics ||| lära programspråk grammatik när implementera syntaxanalys typsystem implementering typkontrollerare
experiment language extension get insight good bad programming language design ||| experimentera språkutvidgningar få inblick bra dålig sätt konstruera programmeringsspråk
write laboration write exam ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
grade scale ||| basera tentamensresultatet ge betyg
define lexical structure programming language use regular expression explain functioning finite automata implement lexical analyser use standard tool ||| använda reguljär uttryck definiera programmeringsspråk lexikal struktur förklara hur ändlig automata fungera implementera lexikal analysverktyg
define syntax programming language use context-free grammar explain principle parsing implement parser use standard tool ||| definiera syntax programmeringsspråk hjälp kontextfria grammatiker förklara princip ll lr-parsning samt implementera parser hjälp standardverktyg
define implement abstract syntax ||| definiera implementera abstrakt syntax
master technique syntax-directed translation efficient implementation choose programming language ||| behärska teknik syntaxstyrd översättning hur implementera valfri programmeringsspråk
write simple code generator ||| skriva enkel kodgeneratorer
be familiar basic implementation issue imperative functional language ||| känna grundläggande implementationsproblematik imperativa funktionell språk
design implement special-purpose programming language ||| implementera domänspecifika programmeringsspråk
use unification implement polymorphic type checking ||| implementera polymorf typkontroll hjälp unifiering
use closure implement functional programming language ||| använda " closures implementera funktionell programmeringsspråk
course require ||| kurs kräva
good programming skill ||| god programmeringskunskaper
familiarity ||| kännedom programspråk
basic skill unix programming shell makefiles ||| grundläggande färdighet unix programmering shell-programmering
basic knowledge datum structure algorithm ||| grundläggande kunskap datastrukturer algoritm
follow also recommend ||| följande rekommendera också
familiarity functional programming ||| kännedom funktionell programmering
basic knowledge assembler programming ||| grundläggande kunskap assemblerprogrammering
software product line be set software product share common manage set feature together address need particular market segment mission ||| mjukvaruproduktlinjer uppsättning mjukvaruprodukter dela gemensam managerad uppsättning funktion tillsammans möta behov finnas viss marknadssegment uppdrag
develop common set core asset planned way ||| utvecklad gemensam uppsättning nyckeltillgångar planera sätt
purpose course be give in-depth knowledge area software product line whole include engineering process organizational management-perspective ||| syfte kurs ge fördjupa kunskap område mjukvaruproduktlinjer helhet teknik process organisatorisk lednings-perspektiv
course cover following element ||| kurs omfatta följande moment
problem large-scale software reuse customization ||| problem återanvändning anpassning storskalig system
scop domain analysis ||| avgränsning domänanalys
product management product line economics ||| produktledning produktlinje-ekonomi
design development software product-line architecture component ||| design utveckling produktlinje-arkitekturer komponent programvara
instantiation family member i.e. product ||| instansiering familjemedlem dvs produkt
verification validation software product line architecture ||| verifiering validering produktlinje-arkitekturer programvara
evolution software product-line asset i.e. product-line architecture component product ||| utveckling produktlinje-tillgångar säga produkt-line-arkitektur komponent produkt programvara
framework assessment description software product lines practice ||| ramverk bedömning beskrivning produktlinjer praxis programvara
industrial practice software product line engineering ||| industriell praxis produktlinjeteknik programvara
course grade base following element ||| kurs betygsätta basera följande faktor
group assignment hp credit grade fail ||| grupparbete hp betyg underkänna
individual write exam hp credit grade fail ||| individuell skriftlig tentamen hp betyg underkänna
grade assign individually type of course element ||| betyg sätta individuell båda typ moment
understand challenge different solution large-scale software reuse customization ||| förklara utmaning olik lösning återanvändning anpassning storskalig system
understand different process role organizational approach ||| förklara olik process roller organisatorisk metod
be able use tool support sple understand limitation ||| använda verktyg stödja spl förklara begränsning
be able assess potential evaluate exist approach software development organization use sple framework ||| bedöma potential utvärdera befintlig metod spl mjukvaruorganisationer använda spl ramverk
understand complexity theory practical application theoretical knowledge industrial practice ||| förklara komplexitet teori praktisk tillämpning teoretisk kunskap industriell praxis
course base lecture workshop group assignment ||| kurs basera föreläsning workshop grupparbete
be eligible course student have ||| behörighet kurs krävas
bachelor degree equivalent ||| kandidatexamen programvaruteknik datavetenskap motsvarande
successfully complete course model-driven engineering e.g. model-driven engineering equivalent software architecture e.g. dat220 advanced equivalent ||| godkänna kurs modelldriven mjukvaruutveckling t.ex. modelldriven motsvarande godkänna kurs mjukvaruarkitektur t.ex. software architecture motsvarande
be different format course ||| finnas olik format studie kurs:
work relevant research assignment ||| individuell arbete relevant forskningsuppgift
work literature study relevant topic ||| individuell arbete relevant litteraturstudie
activity regular phd student course relevant area ||| medverkan doktorandkurs relevant område
describe main phase research work planning execution revision documentation/dissemination ||| beskriva huvudsaklig moment forskningsarbete planering genomförande omprioritering dokumentation spridning
independently perform research prestudy form literature study limited research assignment ||| oberoende sätt driva forskningsförstudie form litteraturstudie forskningsuppgift begränsad omfattning
course organization depend select course format see content ||| kurs organisation bero välja format se innehåll
student follow regular phd student course participation activity below require ||| student följa doktorandkurs krävas deltagande aktivitet nedan
student intend do research assignment literature study follow information apply ||| student ha avsikt göra forskningsuppgift litteraturstudie gälla följande information
course span q1 q2 student work independent manner ||| kurs sträcka student arbeta oberoende sätt
beginning q1 student take course q1 require state topic interest set work plan define scope goal ||| början student ta kurs redovisa ämne avse arbeta upprätta arbetsplan definiera omfattning mål
similarly beginning q2 student take course q2 require state topic interest set work plan define scope goal ||| sätt början student ta kurs redovisa ämne avse arbeta upprätta arbetsplan definiera omfattning mål
student approach suitable chalmers teacher make sure take supervisor' role ||| student kontakta lämpligen lärare undersöka agera handledare
supervisor expect provide guidance course very minimum involve reading endorse work plan reading comment grade final report ||| handledare förvänta ge vägledning hel kurs handla åtminstone läsa godkänna arbetsplan läsa kommentera betygsätta slutrapporten
end beginning q3 student present work ||| slut början presentera student arbete
student be eligible course enrol mpees master's programme successfully complete follow course ||| student inskriva masterprogrammet klara följande kurs
introduction electronic system design dat093 ||| introduktion elektroniksystemkonstruktion
introduction integrate circuit design mcc092/mcc091 ||| introduction integrated circuit design
method electronic system design verification dat110 ||| konstruktionsmetodik elektroniksystem
contrast regular master' course course have focus individual advanced training ||| skillnad vanlig masterkurser kurs fokus individuell avancerad utbildning
hence be limit number student accept course ||| därför finnas gräns hur många student acceptera kurs
be follow-up course graphic ||| fortsättningskurs computer
allow present pair minute ||| vanlig även presentera par då minut
seminar present more detail research-level selection topic e.g. ambient occlusion hair rendering application trace global illumination trace hard soft shadow real-time indirect illumination spherical harmonic wavelet etc. ||| obligatorisk seminarium presentera mer detalj forskningsnivå antal ämne innefatta t_ex t_ex:16 ambient occlusion hair rendering applications ray tracing global illumination tracing mjuk skugga indirect illumination spherical harmonics
student achieve practical experience larger project 3d-graphic individually group instance implement specific advanced extensive technique implement several advanced smaller technique ||| elev göra även valfri lämplig programmeringsprojekt individuell grupp t_ex t_ex:18 implementera specifik metod flera avancerad liten omfattande tekniker
e.g. do render engine game stand alone program ||| t_ex t_ex:03 utforma renderingsmotor spel ray tracer gpgpu-implementation stand-alone-effekter m.m.
student at least attendance seminar be compulsory pass course ||| minst % närvaro seminarium krävas
seminar week study period ||| seminarietillfällen 2h-seminarium vecka läsperiod
student at least attendance be compulsory pass course ||| minst % närvaro krävas få godkänna kurs
first seminar presentation give teacher other researcher ||| en c:a seminarietillfällena ge föreläsning lärare annan forskare
rest seminar presentation give student follow group discussion deepen understanding present algorithm technique ||| övrig seminarietillfällen hållas presentation student följa grupp diskutera därmed fördjupa förståelse presentera algoritm tekniker
course computer graphic equivalent ||| kurs motsvarande computer graphics liknande
proper software system architecture be instrumental ensure software-reliant system achieve business mission goal satisfy require quality attribute such performance security safety ||| korrekt mjukvara systemarkitektur avgörande mjukvaruberoende system uppnå affärsmål övrig uppdragsmål tillfredsställa erforderlig kvalitetsegenskaper prestanda säkerhet säkerhet
end sound architecture principle method support develop analyze evolve system ||| sund arkitekturprinciper metod stöd utveckla analysera vidareutveckla system
certain class system e.g. safety-critical system be outmost importance quality attribute requirement be satisfied eliminate risk severe even catastrophic consequence ||| viss typ system t.ex. säkerhetskritiska system yttre vikt kvalitetskrav uppfylla eliminera risk allvarlig katastrofal konsekvens
architectural modeling verification validation evaluation show be effective means significantly increase overall quality system ||| arkitektur-modellering verifiering validering utvärdering visa effektiv medel väsentlig öka övergripande kvalitet system
purpose course be learn principle method aid designer developer architect gain increase confidence architectural design include quantitative modeling qualitative architecture evaluation method ||| syfte kurs lära princip metod hjälpa designer utvecklare arkitekt få öka förtroende utformning arkitektur kvantitativ modellering kvalitativ metod utvärdering arkitektur
course also address specific challenge relate scale dynamics heterogeneity find system system ultra-large scale system ||| kurs uppmärksamma också särskilja utmaning uppstå samband skalning dynamik heterogenitet finnas system system ultra-storskaliga system
quality attribute context architect ||| kvalitetsattribut samband arkitektur
qualitative quantitative assessment architecture ||| kvalitativ kvantitativ utvärdering arkitektur
architectural modeling a.k.a. adl such ||| arkitekt-modellering arkitekturbeskrivningsspråk
system modeling role relation software architect ||| system-modellering roll relation programvaruarkitekturer
architect evolution variability ||| arkitektur evolution variabilitet
partition layered architecture ||| partitionerade skiktad arkitektur
||| system-av-system extrem stor-skaliga system
case study virtual integration avionic domain ||| fallstudie virtuell integration avionik domän
write exam end course ||| skriftlig tentamen slut kurs
project also approve ||| projekt godkänna
write essay approve present seminar ||| essä godkänna presentera seminarium
attention other student presentation ||| deltagande annan student presentation
understand role applicability method evaluate architecture ||| förklara betydelse tillämpning metod utvärdering arkitektur
describe inter-dependency quality-attribute understand how affect architect ||| beskriva ömsesidig beroende kvalitetsattribut förstå hur påverka arkitektur
ability assess architecture quantitatively qualitatively ||| bedöma arkitektur kvantitativ kvalitativ
architectural model use adl understand intentionality model system life-cycle ||| utveckla arkitektonisk modell hjälp förstå intentionalitet modell hel system livscykel
conduct incremental multi-fidelity architecture-centric verification validation ||| genomföra inkrementella multi-fidelity arkitektur-centrerad verifiering validering
understand characteristic challenge architect system-of-system ultra-large-scale system ||| förklara egenskap utmaning arkitektur system-av-system extrem storskalig system
distinguish software architecture system architecture run-time architecture ||| skilja mjukvaruarkitektur systemarkitektur körtid arkitektur
lecture seminar project ||| föreläsning seminarium projekt
student write essay give seminar participate other seminar ||| student skriva essä hålla seminarium delta annan seminarium
be eligible course student ||| behörighet kurs krävas minst
have bachelor degree equivalent include successfully complete course programming e.g. dat042 dat050 dat055 dat170 tda545 equivalent ||| kandidatexamen programvaruteknik datavetenskap motsvarande an godkänna kurs programmering t.ex. motsvarande
successfully complete course practical software development software engineering project e.g. dat255 software engineering project ||| godkänna kurs praktisk mjukvaruutveckling programvaruteknik projekt t.ex. software engineering project
main challenge software development be make sure one develop right system i.e. understand requirement need be fulfil ||| stor utmaning mjukvaruutveckling se utveckla rätt system dvs förstå krav uppfylla
purpose course be how learn how find collect requirement relevant source start software development project follow established principle format document maintain requirement ||| syfte kurs hur lära hitta samla krav relevant källa början utvecklingsprojekt programvara fastställa princip format dokumentera underhålla krav
main challenge software development be make sure develop right system i.e. understand requirement need be fulfil ||| stor utmaning programvaruutveckling se utveckla rätt system dvs förstå krav uppfylla
focus course be how find collect requirement relevant source start software development project ||| kurs fokusera hur hitta samla in krav relevant källa början projekt programvaruutveckling
different method as well different underlie principle format document maintain requirement be covered. ||| gå gå_igenom:02 olik metod olik bakomliggande princip format dokumentera underhålla krav
particular course cover problem arise when requirement engineering conduct fast-paced cost-sensitive industrial reality ||| kurs behandla särskilt problem uppstå när hantera krav snabb föränderlig kostnadskänslig industriell verklighet
follow topic include course ||| följande moment ingå kurs
requirement elicitation ||| framtagning krav
write requirement requirement specification ||| skriva krav kravspecifikation
quality assurance requirement ||| kvalitetssäkring krav
prioritise requirement ||| prioritering krav
connections alignment requirement engineering other software engineering activity ||| koppling samstämmighet kravhantering annan mjukvaruutvecklingsaktiviteter
requirement engineering ||| kravhantering projekt kontra marknadsdriven utveckling
requirement engineering ||| kravhantering agile iterativ inkrementell utveckling
knowledge understanding ||| kunskap förståelse
explain why requirement engineering be key successful software engineering ||| förklara varför kravhantering nyckel framgångsrik programvaruteknik
describe challenge involve requirement engineering ||| beskriva utmaning involvera kravhantering
explain importance identify stakeholder knowledge context goal ||| förklara vikt identifiera intressent kunskap sammanhang mål
explain difference functional quality requirement ||| förklara skillnad funktion kvalitetskrav
describe how requirement engineering agile project differ traditional requirement engineering ||| beskriva hur kravhantering agila projekt skilja traditionell kravhantering
skilfully elicit software requirement ||| skicklig framtagning programvarukrav
prioritise requirement ||| prioritera krav
assure quality requirement requirement specification ||| kvalitetssäkra krav kravspecifikation
be able assess current requirement engineering practice software project software development company ||| bedöma nuvarande praxis kravhantering mjukvaruprojekt företag mjukvaruutveckling
be eligible course student ||| behörighet kurs krävas minst
have bachelor degree equivalent include successfully complete course programming e.g. dat042 dat050 dat055 dat170 tda545 equivalent ||| kandidatexamen programvaruteknik datavetenskap motsvarande an godkänna kurs programmering t.ex. motsvarande
successfully complete course practical software development software engineering project e.g. dat255 software engineering project ||| godkänna kurs praktisk mjukvaruutveckling programvaruteknik projekt t.ex. software engineering project
course deal area current interest computer science engineering ||| kurs behandla område aktuell intresse data informationsteknik
aim course be give student chance follow example graduate course lecture series visit researcher department ||| kurs syfte ge student möjlighet följa exempel doktorandkurs föreläsningsserie ge gästforskare institution
research-oriented course field relevance computer science engineering ||| forskningsinriktad kurs område relevant data informationsteknik
examination vary instance course ||| examination kurs variera beroende kurstillfälle
further information give course home page ||| mycket detaljerad information hur kurs examinera presentera kurshemsidan
course give student further knowledge research area relevance computer science engineering ||| kurs tillhandahålla student djup kunskap avse forskningsområde relevant ämne data informationsteknik
knowledge understanding ||| kunskap förståelse
master terminology concept theory associate select area ||| förstå förklara terminologi koncept teori koppla välja forskningsområde
demonstrate deep knowledge understanding area course insight current research development ||| redogöra förklara forskningsområde samt visa förståelse aktuell forskning utveckling välja forskningsområde
deep methodological knowledge area course ||| redogöra förklara forskningsmetoder välja forskningsområde
skill ability ||| färdighet förmåga
demonstrate ability critically systematically integrate knowledge analyse assess deal complex issue area course ||| visa förmåga kritisk systematisk integrera kunskap analysera bedöma hantera komplex fråga välja forskningsområde
judgement approach ||| värderingsförmåga förhållningssätt
search extract necessary information scientific publication select area course purpose identify strength weakness solution approach methodology ||| söka extrahera nödvändig information vetenskaplig publikation välja forskningsområde syfte bedöma lämplighet presentera lösning tillvägagångssätt metod
student have degree equivalent ||| student ha kandidatexamen data informationsteknik
addition mandatory pre-requisite take course be student establish contact examiner course ||| därutöver förkunskapskrav student ha etablera kontakt kurs examinator
be examiner decide student accept not course ||| examinator besluta student anta kurs ej
visual modeling language such take box often fit organization's need ||| standardisera visuell modelleringsspråk såsom uml tagen direkt låda passa sällan organisation behov
extend modeling language necessary construct feature create complementary language require specialist knowledge software modeling ||| utöka modelleringsspråk nödvändig konstruktion funktion skapa komplettera språk kräva specialistkunskaper kunskap modellering programvara
purpose course be student get familiarize contemporary technology notation creation adaptation transformation modeling language ||| syfte kurs vara student bekanta modern tekniker språk notation skapa anpassa omvandla modelleringsspråk
visual modelling language such often fit organization' need box ||| standardsspråk visuell modellering t.ex. passa ofta inte organisation behov
extend modelling language necessary construct feature create complementary language require specialist knowledge software modelling ||| utöka modelleringsspråk nödvändig konstruktion funktion skapa ny språk kräva specialistkunskaper kunskap programvaru-modellering
purpose course be familiarize student contemporary technology notation creation adaptation transformation modeling language ||| syfte kurs student bli förtrogen modern teknik språk notation skapa anpassa omvandla modelleringsspråk
examination consist part write examination hec project examination hec ||| examination bestå del skriftlig tentamen hp projekt hp
write examination be individual ||| skriftlig tentamen individuell
project examination base outcome group work ||| projekt-examinationen basera resultat grupp arbete
write examination grade scale use be pass ||| skriftlig tentamen använda betygsskala underkänna
project grade scale use pass pass ||| projekt använda betygsskala godänd ej godkänna
3 complete course grade write exam project part be award pass ||| godkänna hel kurs krävas skriftlig examen projekt erhålla betyg godkänna
project part be award write exam be award respectively ||| krävas projekt erhålla betyg godkänna skriftlig tentamen erhålla betyg respektive
knowledge understanding ||| kunskap förståelse
explain follow concept model metamodel constraint transformation semantics abstract concrete syntax ||| förklara följande begrepp modell meta begränsning transformation semantik abstrakt konkret syntax
explain architecture contemporary modeling framework ||| förklara arkitektur samtida modelleringsramverk
explain how domain specific modeling language realize contemporary modeling framework ||| förklara hur domänspecifika modelleringsspråk realisera samtida modellering ram
skill ability ||| färdighet förmåga
construct domain specific language e.g. specify metamodel include syntax semantics ||| konstruera domänspecifika språk t.ex. specificera metamodels syntax semantik
construct model editor modeling framework ||| realisera modell-editering modelleringsramverk
create model validator modeling framework ||| realisera modell-validering modelleringsramverk
specify model transformation realize modeling framework ||| specificera modell transformation realisera modelleringsramverk
apply domain specific modeling approach authentic case ||| tillämpa domänspecifik modellering autentisk fall
judgement approach ||| värderingsförmåga förhållningssätt
recognize emerge technology model drive engineering use relevant information source ||| känna ny teknik modelldrivet arbete relevant informationskällor
select appropriate modeling technology modeling tooling problem hand ||| välja lämplig modelleringsteknik modelleringsverktyg problem hands
course consist series lecture project ||| kurs bestå föreläsning projekt
lecture introduce theme project explore theme development modeling tool ||| föreläsning introducera tema projekt utforska tema utveckling modelleringsverktyg
tool aim authentic situation realize contemporary modeling framework ||| verktyg syfta hantera autentisk situation realisera samtida modelleringramverk
project consist weekly iteration modeling tool be incrementally develop ||| projekt bestå veckovis iteration modelleringsverktyget stegvis utvecklas
project work carry team student support group supervisor ||| projektarbete utföra grupp stöd grupphandledare
be eligible course student have ||| behörighet kurs krävas minst
have bachelor degree equivalent ||| kandidatexamen programvaruteknik datavetenskap motsvarande
successfully complete course object orient programming e.g. dat042 dat050 dat055 dat170 tda545 tda550 equivalent ||| godkänna kurs objektorienterad programmering t.ex. motsvarande
successfully complete course software modeling e.g.tda593 equivalent ||| godkänna kurs mjukvarumodellering t_ex ex tda593 motsvarande
software development organization need constantly improve become faster better more efficient ||| mjukvaruföretag ständig förbättra bli snabb god mycket effektiv
course prepare student master thesis project improve student' ability conduct phd study ||| kurs förbereda student examensarbete förbättra elev förmåga bedriva forskarstudier
course be student be interested empirical method apply field software engineering ||| kurs student intresserad lära applicera olik empirisk metod programvaruteknik
course introduce quantitative qualitative method software engineering accompany statistical method use analysis ||| kurs introducera kvantitativ kvalitativ metod programvaruteknik
course contain ||| kurs innehålla
descriptive inferential statistical method apply software engineering ||| deskriptiv inferentiell statistik applicera programvaruteknik
conduct qualitative quantitative method software engineering ||| kvalitativ metod programvaruteknik
course examine write lab assignment carry group normally student ||| kurs examinera inlämningsuppgift labbe genomföra grupp normal student
course also examine individual write hall-exam ||| kurs examinera slutligen också skriftlig salstenta
assignment be theoretical practical nature ||| inlämningsuppgifter teoretisk praktisk natur
knowledge understanding ||| kunskap förståelse
describe principle empiricism software engineering ||| a. förstå princip avse empiri programvaruteknik
b. principle case study research experiment survey ||| b. princip fallstudie experiment enkät
describe principle meta-analytical study ||| c. underliggande princip meta-analytiska studie
d. explain importance research ethic ||| d. förklara vikt forskningsetik
e. recognise define code ethic when conduct research software engineering ||| e. känna definiera code ethics gälla forskning programvaruteknik
explain most common ethical model research ||| f. diskutera förklara vanlig etisk modell forskning
state explain importance threat validity how control say threat ||| g. redogöra förklara vikt validitetshot hur kontrollera typ hot
skill ability ||| färdighet förmåga
a. design empirical study ||| a. designa empirisk studie
b. analyse descriptive statistics decide appropriate analysis method ||| b. analysera deskriptiv statistik definiera lämplig analysmetoder
use interpret code ethic software engineering research ||| c. använda förklara code ethics programvaruteknisk forskning
judgement approach ||| värderingsförmåga förhållningssätt
state discuss tool use data analysis particular judge output ||| a. diskutera verktyg dataanalys i_synnerhet:10 bedöma verktyg resultat
b. appropriateness particular empirical method applicability solve various disparate software engineering problem ||| b. bedöma lämplighet olik empirisk metod tillämpbarhet lösa olik disparat programvarutekniska problemställning
c. question assess common ethical issue software engineering research ||| c. ifrågasätta bedöma vanlig etisk frågeställning programvaruteknisk forskning
course introduce quantitative qualitative method software engineering research accompany statistical method use analysis ||| kurs introducera kvantitativ kvalitativ metod programvaruteknisk forskning tillsammans statistisk metod analysera resultat
course contain ||| kurs innehålla
descriptive inferential statistical method apply software engineering ||| deskriptiv inferentiella statistisk metod applicera programvaruteknik
conduct qualitative quantitative method software engineering ||| användning kvantitativ kvalitativ metod
method analyse quantitative qualitative datum software engineering ||| metod analysera kvantitativ kvalitativ data programvaruteknik
usage statistical tool ||| användande statistisk verktyg
course provide practical introduction ||| kurs ge praktisk introduktion mjukvaruutveckling
be up team adapt theory use tool define own way work ||| upp team anpassa teori anamma verktyg skapa egen sätt arbeta
course examine part project deliverable source code binary documentation final report reflect project decision outcome ||| kurs examinera del leverabel projekt källkod applikation dokumentation slutrapport där student reflektera beslut projekt utfall
together be weighted score scale ||| del väga samman poängsätts
detailed weight grade criterion be available course pm ||| exakt beskrivning angående viktning betygskriterier finnas kurs-pm
score be set group level adjust individual contribution ||| poäng sätta gruppnivå slutgiltig poäng anpassa individnivå t.ex. basera individuell bidrag
completion course student possess follow understanding skill ability judgement ||| fullgöra kurs student besitta följande kunskap färdighet förmåga
knowledge understanding student ||| kunskap förståelse student
identify complexity software design development ||| identifiera svårighet mjukvarudesign implementation
describe fundamental software engineering such stakeholder requirement ||| beskriva grundläggande koncept mjukvaruutveckling t.ex. intressent krav
skill ability student ||| färdighet förmåga student
a. elicitate requirement design solution real-world problem ||| locka fram elicitera krav designa lösning verklig problem
c. apply skill programming course other relevant course project-like environment ||| tillämpa färdighet programmeringskurser annan relevant kurs projektliknande miljö
learn new tool api his/her own ||| lära ny verktyg apier egen hand
course be organize project where student work team usually student address real-world software engineering task ||| kurs organisera projekt där student arbeta team student vanligtvis lösa realistisk mjukvaruutvecklingsuppgift
team have weekly supervision meeting ||| team veckovis handledningsmöten
project supplement lecture provide insight task student work software engineering general ||| supplement projekt ge serie föreläsning ge fördjupa insikt uppgift samt mjukvaruutveckling stor
test be most used verification validation technique industry ||| testning mycket använda verifiering- valideringstekniker industri
course provide student general background testing technique focus theory practice model-based testing ||| kurs ge student allmän bakgrund testmetoder fokus teori praktik modellbaserad testning
course provide student background theory practice model-based testing include how testing tool be use improve software quality ||| kurs ge student bakgrund teori praktikav modellbaserad testning inklusive hur testverktyg kananvändas förbättra mjukvara kvalité
general test technique explain focus model-based testing ||| allmän provningstekniker förklara fokus modellbaserad testning
student get hands-on experience build model testing use model testing verification purpose ||| elev få praktisk erfarenhet bygga modell testning använda modell testning verifiering
examination consist part write exam hec hand-in assignment hec ||| examination bestå del skriftlig tentamen hp inlämna uppdrag hp
hand-in assignment normally carry out individually pair write exam be individual ||| inlämningsuppgifter utföra normal individuell par tentamen individuell
write exam be ||| betygsskala skriftlig tentamen underkänna
knowledge understanding ||| kunskap förståelse
explain distinction software verification software validation ||| förklara skillnad verifiering validering programvara
describe connection software development phase kind testing ||| beskriva samband mjukvaruutvecklingsfaser olik typ test
describe explain number different test method use practical situation ||| beskriva förklara antal olik testmetoder använda praktisk situation
explain model-based testing be ||| förklara modellbaserad testning
skill ability ||| färdighet förmåga
construct model modeling specification language learn course ||| konstruera modell modellering specifikationsspråk lära kurs
appropriate meaningful test interpret explain stakeholder result application such test case use appropriate tool practical example ||| konstruera lämplig meningsfull test tolka förklara intressent resultat tillämpning sån testfall lämplig verktyg praktisk exempel
apply model base testing realistic example ||| applicera modellbaserad testning realistisk exempel
judgement approach ||| värderingsförmåga förhållningssätt
describe tool use testing software use interpret output ||| exemplifiera beskriva verktyg använda testning programvara använda tolka resultat
hypothesize source program failure reflect how better correctness such program ||| identifiera göra hypotes källa program misslyckande reflektera hur god kontrollera riktighet sån program
student expect be active whole mini-module ||| student förvänta aktiv hel minimodulen
exercise be theoretical practical nature ||| övning teoretisk praktisk slag
be eligible course student have bachelor degree equivalent include complete course programming ||| behörighet kurs krävas minst kandidatexamen programvaruteknik datavetenskap motsvarande godkänna kurs programmering
knowledge datum structure propositional logic be recommend ||| kunskap datastrukturer satslogik rekommendera
initial development be only small phase system's development lifecycle typically follow many year system evolution ||| initial utveckling vara bara liten fas system livscykel vanligen följa många år vidareutveckling
purpose course be familiarise student situation activity technique typical software evolution such add new feature refactoring automate variability testing improve performance re-balancing non functional requirement so on ||| syfte kurs studerande bli förtrogen situation aktivitet metod typisk vidareutveckling mjukvara exempel lägga ny funktion refactoring automatisering variabilitet testning förbättra prestanda re-balansering icke-funktionella krav så vidare
assessment consist series poster session semester final write report group ||| bedömning bestå serie poster-tillfällen termin slutlig skriftlig rapport grupp
poster session be use formative assessment final report be use summative assessment ||| poster-tillfällen använda formativ bedömning slutlig rapport använda summativ bedömning
grade be individual base content group' report individual' degree contribution project whole ||| betyg individuell basera innehåll grupp rapport individ bidrag projekt helhet
grade scale comprise fail ||| betygsskala bestå
grade knowledge goal above be satisfy ||| betyg kunskapsmål ovan uppfylla
grade project whole manage deliver improved software product product own organisation typically open source project get acceptance improvement ||| betyg projekt helhet lyckas leverera förbättra programvara produktägande organisation vanligtvis open source-projekt få acceptans förbättring grupp göra
knowledge understanding student be able ||| kunskap förståelse student
explain notion software product quality define ||| förklara begrepp programvarukvalitet definition
summarize state art method tool quality improvement quality area i.e. functionality reliability usability efficiency maintainability portability sub-area ||| aktuell metod verktyg kvalitetsutveckling kvalitetsområdena iso9126 dvs funktionalitet tillförlitlighet användbarhet effektivitet underhållbarhet bärbarhet delområden
explain challenge associate software evolution ||| förklara utmaning förknippa programvaruutveckling
skill ability student be able ||| färdighet förmåga student
evaluate quality software product use quality model ||| utvärdera kvalitet programvara hjälp kvalitetsmodell
improve quality software product area software product quality ||| förbättra kvalitet programvara område programvara kvalitet
collaborate peer work different improvement goal same product ||| samarbeta kollega arbeta olik förbättringsmål produkt
interact product-owning organisation ||| interagera produktägande organisation
judgement approach student be able ||| värderingsförmåga förhållningssätt student
select authentic software product need quality improvement ||| välja programvara behov kvalitetsförbättring
select improvement method technique appropriate quality improvement task at least area above ||| välja metod tekniker lämplig kvalitetsförbättring åtminstone område nämna ovan
(1) course programming e.g. tda545 object-oriented programming ||| godkänna kurs programmering t_ex t_ex:08 tda545 objektorienterad programmering motsvarande
(3a) dat231 requirement engineering ||| (3a) kravhantering
(3b) dat240 model-driven software development ||| (3b) dat240 modelldriven mjukvaruutveckling
(3c) dat220 advanced software architecture ||| (3c) dat220 avancerad mjukvaruarkitektur
(3d) dat260 model-based testing ||| (3d) dat260 modellbaserad testning
course intend give overview energy-dissipation aspect computer computing range electronic circuit operate system battery-powered pocket device supercomputer datum center ||| kurs syfta ge översikt aspekt dator leda energiförbrukning elektronisk krets operativsystem batteridriven enhet superdator datacenter
grade determine base performance write oral assignment lab take-home open-book exam ||| betyg fastställa basera prestation skriftlig muntlig uppgift % laboration % hemtentamen öppen bok %
course give ||| kurs ge engelska
teaching be lecture class exercise laboratory session use work presentation skill ||| undervisning bedriva föreläsning övning laboration använda arbeta presentationsteknik
||| betyg
final grade calculate base individual grade type together weight mention above ||| slutbetyget beräkna individuell betyg typ tillsammans vikt nämna ovan
course consist lecture series homework assignment oral written presentation lab ||| kurs bestå föreläsningsserie hemuppgift muntlig skriftlig presentation laboration
much work course consist independent reading assignment ||| stor del arbete kurs bestå oberoende instuderingsuppgifter
student give frequent oral presentation demonstrate understanding reading facilitate discussion ||| student därför ge tät muntlig presentation visa förståelse instuderingsuppgifterna skapa diskussion
specific skill practice range short elevator pitch longer lecture do team fun relax collaborative setting ||| presentation också leda träning korta elevator lång föreläsning utföra grupp rolig avslappnad samverka omgivning
discussion only focus technology also how technology affect world's carbon footprint likely impact society now future generation ||| diskussion inte bara fokusera teknik också hur teknik påverka värld koldioxidutsläpp just nu hur sannolik inverka samhälle kommande generation
computer architecture dat105 equivalent be strongly recommend ||| datorarkitektur motsvarande rekommendera stark
student understand how processor pipeline cache work be comfortable read assembly language ||| student förstå funktion processor pipeline cachar läsa assemblerkod
aim course be introduce principle practice parallel programming functional programming language ||| syfte kurs introducera princip praktisk tekniker parallell programmering funktionell programmeringsspråk
parallel programming mean programming use multiple hardware core processor order gain speed ||| parallell programmering mena användning flera hårdvaruenheter kärna processor öka beräkningskapaciteten
course cover approach parallel functional programming ||| kurs belysa metod parallell funktionell programmering
cover current research topic rely heavily scientific papers source material ||| akutell forskning ämne presentera kurs använda vetenskaplig artikel kursmaterial
course cover principle practice parallel programming ||| kurs behandla princip praktisk tekniker parallell programmering haskell erlang
advantage functional approach parallelism immutability absence datum race determinism ||| fördel parallell funktionell programmering oföränderlighet immutability avsaknad synkroniseringsfel determinism
profile parallel functional program granularity bottleneck locality data-dependency ||| profilera parallell funktionell program kornighet flaskhals lokalitet databeroenden
functional algorithm divide-and-conquer ||| parallell funktionell algoritm söndra-och-härska "
approach express parallelism eval monad par monad parallel strategy skeleton datum parallelism ||| metod uttrycka parallellism parallell strategi skelett dataparallellism
functional approach programming ||| funktionell programmering
parallelisation distribution ||| parallellisering distribuering
scalability ||| skalbarhet
handle error massively parallel system ||| felhantering massiv parallell system
knowledge understanding ||| kunskap förståelse
distinguish concurrency parallelism ||| förstå betydelse skillnad samtidighet concurrency parallellism
give overview approach parallelism functional programming language scientific literature ||| beskriva metod parallellism funktionell programspråk vetenskaplig litteratur
skill ability ||| färdighet
write modify test parallel functional program run variety architecture such shared memory multiprocessor network commodity server ||| modifiera testa parallell funktionell program avse olik datorsystemarkitekturer multiprocessorer delad minne nätverk server grafikprocessorer
interpret parallelism profile address bottleneck ||| tolka exekveringsprofiler parallell program åtgärda flaskhals
judgement approach ||| värderingsförmåga förhållningssätt
when use functional language be appropriate solve parallel programming problem ||| identifiera omständighet funktionell språk lämplig läsa parallell programmeringsproblem
select appropriate form parallel functional programming give problem expain choice ||| välja form parallell funktionell programmering passa given problem förklara val
student complete obligatory laboratory assignment ||| gästföreläsningar hållas extern expert leda forskare
requirement course be successfully complete year subject computer science equivalent ||| student ha fullfölja år studium datavetenskap datateknik jämförbar utbildning
course participant also complete introductory course functional programming preferably use ||| kursdeltagare genomgå introduktionskurs funktionell programmering företrädesvis användande erlang
example chalmers be tda555 ||| kursexempel chalmers tda452 tda555
course also aim give student technical skill design integration verification hardware software processor-based system ||| kurs också ge student teknisk färdighet konstruera integrera verifiera hård mjukvara processorbaserade system
design verification microprocessor system include microprocessor peripheral device be develop specific functionality performance ||| konstruktion verifiering mikrodatorsystem mikroprocessor periferienheter tas fram viss funktionalitet viss prestanda
methodology project work include planning execution follow version control ||| metodik projektarbete planering drift uppföljning versionshantering
technical write include technical documentation minute final report ||| skriftlig framställning form dokumentation protokoll slutrapport
course run project group student lead individual grade respectively ||| kurs driva projektform grupp student leda individuell betyg respektive
grade base different interact parameter namely quality project work planning project effort technical quality compliance project plan quality final product quality write communication disciplinary language information structure rhetoric audience adapt argumentation ||| betyg basera olik samverka parameter nämligen kvalitet projektdrift planering konstruktionsarbete teknisk kvalitet uppfylla plan kvalitet slutprodukt samt kvalitet skriftlig kommunikation disciplinär språk informationsstruktur retorik publikanpassad argumentation
assessment carry out distinct deliverable ||| betygsgrundande bedömning ske speciell leverans
project plan ||| projektplan
opposition note group' draft final report ||| oppositionskommentar annan grupp utkast slutrapport
project demonstration ||| demonstration slutprodukt
final report ||| slutrapport
addition assessment be do several occasion course respect project meeting management version control ||| dessutom ske betygsgrundande bedömning flera tillfälle kurs gång avseende projektmöteshantering versionshantering
assessment above lead group grade ||| resultat bedömning gruppbetyg
base student' contribution project work individual grade be higher lower group grade be establish ||| basera respektive student bidrag projektgrupp arbete sätta individuell betyg hög låg gruppbetyget
design verify demonstrate microprocessor system consist microprocessor appropriate peripheral possibly also interface electronics graphical user interface meet specified functionality performance ||| konstruera verifiera demonstrera mikrodatorsystem bestå mikroprocessor lämplig periferienheter eventuell också viss elektronik gränssnitt grafisk gränssnitt uppfylla specificera funktionalitet prestanda.
write c program microprocessor focus management peripheral ||| skriva c-program mikroprocessor fokus hantering periferienheter.
demonstrate basic skill managing follow technical development project group handful developer ||| visa basfärdighet driva följa upp teknisk utvecklingsprojekt driva grupp handfull utvecklare.
support basic function version control system organize ongoing documentation report program code ||| stöd grundläggande funktion versionshanteringssystem organisera löpande dokumentation rapport programkod.
write basic project plan prior technical development project ||| skriva grundläggande projektplan teknisk utvecklingsprojekt.
write project report conclusion technical development project as well critically examine project ||| skriva projektrapport avslutning teknisk utvecklingsprojekt samt kritisk granska ytterlig projekt.
reason choice conclusion background consequence own project as well project ||| resonera ställningstagande slutsats bakgrund följd egen projekt ytterlig projekt
initially lecture introduce feature microprocessor system facilitate technical assessment system design choice ||| initial introducera föreläsning mikrodatorteknik krävas göra teknisk bedömning val konstruktion system
addition early lecture highlight how run document technical development project include aspect such technical writing group dynamics version control ||| dessutom belysa tidig föreläsning hur driva dokumentera teknisk utvecklingsprojekt exempel aspekt rapportskrivning gruppdynamik versionshantering
project team assemble teacher team select project limited number offer project ||| projektgrupp sätta samman lärarlaget välja projekt begränsad antal erbjuda projekt
connection project selection project mentor provide support project assign project team ||| samband val tilldela projektgrupp mentor ge stöd projektarbete
first study week project team focus assimilate technical document prepare project plan ||| en läsveckorna ägna projektgrupp främst läsa in teknisk dokumentation utarbeta projektplan
system implementation work commence study week run support weekly project meeting continuous documentation final study week when work system verification demonstration preparation final documentation be intensify ||| konstruktionsarbetet påbörja läsvecka löpa stöd veckovis projektgruppsmöten kontinuerlig dokumentation fram avsluta läsveckorna då arbete systemverifiering demonstrationsförberedelser slutdokumentation intensifiera
knowledge understand knowledge robotic control and/or communication system emphasis hands-on experience construction programming insight current research development area ||| kunskap förståelse förvärva kunskap robotik inbyggd styrsystem kommunikationssystem betoning praktisk erfarenhet konstruktion programmering insikt aktuell forskning utveckling område
skill ability demonstrate ability develop design computer control distribute algorithm program network protocol adapt need capacity road user meet societal requirement sustainable development social ecological term ||| färdighet förmåga visa förmåga utveckla konstruera datorisera styrsystem distribuera algoritm program nätverksprotokoll anpassa användande trafikant behov möta samhällelig krav hållbar utveckling social ekologisk termer
demonstrate ability work team collaborate group different constitution background ||| visa förmåga arbeta team samarbeta grupp olik konstitution bakgrund
demonstrate ability plan engineering task report progress project achievement ||| visa förmåga planera ingenjör uppgift rapportera framsteg prestation projekt
judgement approach demonstrate ability plan engineering task give clear account his/her team achievement conclusion way support orally write address different engineering audience ||| värderingsförmåga förhållningssätt visa förmåga planera ingenjörsuppgift redogöra individuell grupp prestation formulera slutsats muntlig skriftlig sätt förstå dela ingenjör annan specialinriktningar
lecture project meeting report project deliverable ||| föreläsning projektmöten rapport projektresultat
course include project place software development company ||| kurs innehålla projekt förlägga mjukvaruutvecklingsföretag
project contain element test practice knowledge student train in i.e. area software engineering ||| projekt innehålla moment testa praktik kunskap student bli utbilda dvs område software engineering
student demonstrate ability identify industrial problem use advanced software engineering method solve problem be identify ||| student visa förmåga identifiera industriell frågeställning använda avancerad software engineering metod lösa problem identifiera
course include comparison different method solve problem analysis difference theoretical practical consideration how method use be use ||| kurs ingå jämförelse olik metod lösa problem analys skillnad teoretisk praktisk förutsättning hur metod använda använda
course assess planning report individual write final report ||| kurs examinera individuell planeringsrapport individuell skriftlig slutrapport
planning report describe ||| planeringsrapporten beskriva
company offer internship graduate incl .contact written offering company ||| företag erbjuda praktikplats student inkl. kontaktperson skriftlig erbjudan företag
project deliverable company ||| projekt leverabel företag
ipr issue ||| ev ipr frågeställning
grade course be fail ||| betygsskala omfatta betygsgrad
pass course require grade planning report grade final report ||| få betyg kurs krävas betyg planeringsrapporten betyg slutrapporten
grade require grade planning report grade final report ||| få betyg kurs krävas betyg planeringsrapporten betyg slutrapporten
grade require grade planning report grade final report ||| få betyg kurs krävas betyg planeringsrapporten betyg slutrapporten
complete course student be able ||| avsluta kurs förvänta student kunna:
identify number software engineering technique solve industrial problem ||| identifiera antal software engineering metod lösa industriell problem
solve problem select method ||| lösa problem utvälja metod
knowledge course field software engineering contribute development company ||| tillämpa kunskap kurs område software engineering bidra företag utveckling
select most appropriate method give circumstance relevant cooperative enterprise ||| välja mycket lämplig metod ge förutsättning relevant samarbetsföretaget.
reflect theoretical premise apply software engineering practice ||| reflektera teoretisk förutsättning tillämpad software engineering metod
admit course student ||| anta kurs student
provide planning report clearly define project goal execution learn goal ||| tillhandahålla planeringsrapport tydlig definiera projektmål utförande lärandemål
student get admit approval planning report ||| student anta godkännande planeringsrapporten
complete computer science curriculum knowledge generic skill relevant student's future professional role ||| kurs syfte komplettera datatekniska datavetenskapliga läroplan allmän kunskap relevant student framtida yrkesroller
student ||| student
develop scientific writing skill study critically analyze summarize select well-written scientific article ||| utveckla vetenskaplig skrivande studera kritisk analysera sammanfatta utvälja välskriven vetenskaplig artikel
train technical communication different audience ||| öva teknisk kommunikation skrift olik målgrupp
discus ethical aspect subject computer science ||| diskutera etisk fråga röra ämne datavetenskap
learn ethical principle research publishing ||| lära forskning publiceringsetik
guideline basics technical writing ||| riktlinje grund teknisk skrivande
theory ethic example ||| teori etik exempel
example show how modern research do how advanced practical solution apply industry ||| exempel hur modern forskning bedriva hur avancerad praktisk lösning använda industri
read summarize scientific article clearly describe technical problem treat be reason choice solution ||| läsa sammanfatta vetenskaplig artikel så klar framgå teknisk problem lösa liksom grund val lösning
retrieve information certain question identify essential point communicate ||| söka fram information viss fråga identifiera väsentlig förmedla
describe scientific technical topic way that also non-expert understand most important point ||| beskriva or sammanfatta vetenskaplig teknisk frågeställning sån sätt även icke-experter förstå viktig punkt
make inform evaluation ethical societal impact method design system ||| utvärdera etisk samhällelig effekt metod konstruktion system
apply ethical principle good practice scientific writing include proper citation use statistics ||| tillämpa etisk princip vetenskaplig skrivande korrekt citat korrekt användning statistik
equivalent at least year study computer science ||| kunskap motsvarande sammanlägga liten år studium datatekniska datavetenskapliga ämne
course be only open student admit ||| kurs endast öppen student inskriva mpalg
ensure quality be major challenge software development other thing complexity time pressure cost consideration ||| säkerställa kvalitet stor utmaning mjukvaruutveckling annan pga komplexitet tidspress kostnadshänsyn
course aim student learn modern method quality assurance software development particular focus embedded system web application ||| kurs syfta student lära modern metod kvalitetssäkring mjukvaruutveckling särskilja fokus inbyggd system webbapplikationer
course introduce student modern method quality assurance software development ||| kurs introducera student modern metod kvalitetssäkring mjukvaruutveckling
content course consist lecture relevant standard e.g. quality assurance standard measurement quality e.g. ||| kurs innehålla föreläsning relevant standard t_ex t_ex:08 kvalitetssäkring standard mätning visualisering kvalitet t_ex
course prepare student work quality engineer quality manager software development organization focus embedded software web application ||| kurs förbereda student arbete kvalitetsingenjörer kvalitetschefer mjukvaruutvecklingsorganisationer särskilja fokus inbyggd system webbapplikationer
report rapport higher education credit ||| rapport report hp
sub-course be report base result quantify assess quality software product ||| delkursen rapport innehålla resultat beräkning kvalitet utvälja produkt
purpose sub-course be assess student practical skill teach course ||| delkursen syfta examinera student praktisk kunskap ge kurs
write exam higher education credit ||| skriftlig salstenta written exam hp
sub-course be individual written hall exam theoretical practical question ||| delkursen bestå salstenta innehålla teoretisk praktisk fråga
purpose question be assess student knowledge definition relevant research field ||| fråga syfta examinera student kunskap definition relevant forskning område
knowledge understanding ||| kunskap förståelse
explain discuss importance software quality modern society ||| förklara diskutera betydelse mjukvarukvalitet ha modern samhälle
describe how sustainability be see quality attribute software product ||| beskriva hur hållbarhet betrakta kvalitetsattribut mjukvaruprodukter
skill ability ||| färdighet förmåga
construct quality model different level software development organization e.g. team project ||| konstruera kvalitetsmodeller olik nivå mjukvaruutvecklingsorganisationer t_ex team projekt
construct quality assurance plan collect datum quantify assess quality software product e.g. base exist open source product ||| konstruera kvalitetssäkringsplaner samla data kvantifiera bedöma kvalitet mjukvaruprodukter t_ex t_ex:16 basera existerande open program
construct automate measurement system measure quality software product base datum modern development tool e.g. ||| konstruera automatisera system mäta kvalitet mjukvaruprodukter basera data modern utvecklingsverktyg t_ex t_ex:18 git
use modern tool visualization trend software quality e.g. defect inflow profile ||| använda modern verktyg visualisering trend mjukvarukvaliten t_ex trend antal defekt
judgement approach ||| värderingsförmåga förhållningssätt
assess importance software quality relation time cost modern software development project ||| värdera vikt mjukvarukvalité relation tid kostnadsbild modern mjukvaruprojekt
relate software quality societal aspect software development e.g. how human life influence low quality software car ||| relatera mjukvarukvalitet samhällsliga aspekt mjukvarutveckling t_ex t_ex:10 hur människoliv påverka dålig kvalitet mjukvara modern bil
assess risk erroneous quality assurance process modern software development company ||| bedöma risk bristfällig kvalitetssäkringsprocesser modern mjukvaruutveckling
be eligible course student ||| behörighet kurs krävas minst kandidatexamen software engineering informationsteknik programvaruteknik datavetenskap motsvarande godkänna kurs programmering
complete course practical software development software engineering project e.g. dat255 software engineering project ||| t.ex. grundläggande programvaruutveckling motsvarande godkänna kurs praktisk projekt systemutveckling mjukvaruutveckling t.ex. software engineering project
lecture topic be ||| föreläsning behandla
introduction functional programming calculational proof ||| introduktion funktionell programmering programkalkyl bevis
introduction case study linear algebra ||| introduktion domänspecifika språk linjär algebra exempel
dsl mathematics case study category theory ||| dsl matematik kategoriteori exempel
real analysis mean value theorem formula ||| reell analys medelvärdessatser formuler
real analysis dsl power series ||| reell analys dsl potensserier
more linear algebra eigenvalue optimization ||| mycket linjär algebra egenvärden optimering
knowledge understanding ||| kunskap förståelse
design implement dsl new domain ||| designa implementera domänspecifikt språk ny domän
organize area mathematics dsl term ||| strukturera delområden matematik termer
explain main concept elementary real complex analysis algebra linear algebra ||| förklara central begrepp grudläggande reell complex anays algebra linjör algebra
skill ability ||| färdighet förmåga
develop adequate notation mathematical concept ||| utveckla lämplig notation matematisk koncept
perform calculational proof ||| genomföra kalkylera bevis
use power series solve differential equation ||| använda potensserier lösa differentialekvation
use laplace transform solve differential equation ||| använda laplace-transformer lösa differentialekvation
judgement approach ||| värderingsförmåga förhållningssätt
discuss compare different software implementation mathematical concept ||| diskutera jämföra olik implementationer matematisk begrepp
student successfully complete ||| student klara
course computer science example introduction programming mathematical software ||| kurs datateknik exemeplvis kurs programmering
additional course hec mathematics computer science course ||| ytterlig kurs matematik data it
course present classical mathematical topic computing science perspective ||| kurs presentera klassisk matematisk ämne datavetenskaligt perspektiv
lecture topic be ||| föreläsning behandla
introduction functional programming calculational proof ||| introduktion funktionell programmering programkalkyl bevis
introduction case study linear algebra ||| introduktion domänspecifika språk linjär algebra exempel
dsl mathematics case study category theory ||| dsl matematik kategoriteori exempel
real analysis mean value theorem formula ||| reell analys medelvärdessatser formuler
real analysis dsl power series ||| reell analys dsl potensserier
more linear algebra eigenvalue optimization ||| mycket linjär algebra egenvärden optimering
knowledge understanding ||| kunskap förståelse
design implement dsl new domain ||| designa implementera domänspecifikt språk ny domän
organize area mathematics dsl term ||| strukturera delområden matematik termer
explain main concept elementary real complex analysis algebra linear algebra ||| förklara central begrepp grudläggande reell complex anays algebra linjör algebra
skill ability ||| färdighet förmåga
develop adequate notation mathematical concept ||| utveckla lämplig notation matematisk koncept
perform calculational proof ||| genomföra kalkylera bevis
use power series solve differential equation ||| använda potensserier lösa differentialekvation
use laplace transform solve differential equation ||| använda laplace-transformer lösa differentialekvation
judgement approach ||| värderingsförmåga förhållningssätt
discuss compare different software implementation mathematical concept ||| diskutera jämföra olik implementationer matematisk begrepp
student successfully complete ||| student klara
course computer science example introduction programming mathematical software ||| kurs datateknik exemeplvis kurs programmering
additional course hec mathematics computer science course ||| ytterlig kurs matematik data it
bachelor thesis also aim develop skill application engineering problem solve research method ||| kandidatarbetet syfta också ge kunskap färdighet ingenjörsmässig vetenskaplig arbetssätt
main part bachelor thesis be project ||| kandidatarbetets huvuddel utgöra projektarbete
write thesis report follow established standard scientific technical report ||| kandidatarbetet redovisa skriftlig gälla norm vetenskaplig teknisk rapportering presentera muntlig försvara seminarium
report consist independently author report identifiable part joint report ||| skriftlig del bestå självständig författa uppsats rapport omfattande hel kandidatarbetet tydlig identifierbar del gemensam uppsats rapport
formulate delimit complex problem ||| formulera avgränsa problemställning välja ämne
relevant formulate problem ||| integrera utveckla kunskap välja problemställning
critically evaluate project respect problem approach result ||| kritisk granska värdera konstruktiv ifrågasätta annan kandidatarbete avse frågeställning genomförande resultat
only credit register exam period study year take consideration ||| avstämning ske läsperiod årskurs inrapportera ladok
purpose thesis be enable student develop deeper knowledge understanding capability attitude context programme study ||| examensarbete syfta student utveckla fördjupa kunskap förståelse förmåga förhållningssätt utbildning sammanhang
thesis write end programme offer opportunity delve more deeply synthesise knowledge acquire previous study ||| examensarbete ligga slut utbildning innebära fördjupning synas tidigare förvärva kunskap
thesis master science programme place emphasis technical/scientific/artistic aspect subject matter ||| examensarbete civilingenjörs- arkitekt teknologie masterprogram betona teknisk naturvetenskaplig konstnärlig innehåll
thesis approve follow stage complete ||| examensarbete godkänna krävas följande delmoment genomföra
approve planning report ||| godkänna planeringsrapport
approve thesis ||| godkänna rapport
approve presentation defense thesis ||| godkänna presentation försvar examensarbetsredovisningen
approve opposition thesis ||| godkänna opposition annan masterexamensarbete
attendance presentation defense other theses ||| närvaro annan examensarbetsredovisningar
hec thesis interim report be submit when work reach halfway point ||| examensarbete omfattande hp delredovisning göra halv tid
examiner decide form interim report ||| examinator besluta form delredovisning
when interim report approve hec register ||| godkänna delredovisning leda hp inrapportera ladok
learning objective thesis base objective master science engineering architecture master science degree formulate local master's degree procedure ||| lärandemål masterexamensarbetet utgå mål civilingenjörs- arkitekt respektive teknologie masterexamen formulera lokal examensordning
diarienummer c2007/723 ||| dnr
specific learning objective be be fulfil master' thesis be student be able ||| specifik lärandemål fullfölja masterexamensarbetet student
project use essential in-depth knowledge major subject field study scientifically correct way relate current research development work ||| använda väsentlig fördjupa kunskap huvudområdet inriktning utbildning projekt vetenskaplig korrekt sätt relatera aktuell forskning utvecklingsarbete
choose state one's reason select project method respect major subject field study ||| välja motivera val metod projekt huvudområdet inriktning utbildning
contribute research development work be able relate work relevant scientific technical industrial architectonic context ||| bidra forskning utvecklingsarbete relatera arbete relevant vetenskaplig respektive teknisk industriell arkitektonisk sammanhang
base holistic view critically independently creatively identify formulate deal complex issue ||| helhetssyn kritisk självständig kreativ identifiera formulera hantera komplex frågeställning
plan adequate method carry qualify task designate framework also be able evaluate work ||| planera adekvat metod genomföra kvalificerad uppgift given ram samt utvärdera arbete
create analyse critically evaluate different technical architectonic solution ||| skapa analysera kritisk utvärdera olik teknisk arkitektonisk lösning
critically systematically integrate knowledge ||| kritisk systematisk integrera kunskap
present discuss conclusion as well knowledge argument base speak write ||| engelska muntlig skriftlig klar redogöra diskutera slutsats kunskap argument ligga grund
framework specific project identify issue need address relevant societal ethical ecological factor be observe ||| ram specifik projekt identifiera frågeställning besvara relevant samhällelig etisk ekologisk aspekt beakta
observe discuss ethical aspect research development work pertain how work carry as well explores/develops ||| beakta diskutera etisk aspekt forskning utvecklingsarbete avse hur arbete genomföra undersöka utvecklas
identify discuss need further elucidation different project aspect decision-making project realisation when relevant ||| identifiera diskutera behov ytterlig belysning olik aspekt projekt beslut genomförande där så relevant
completion degree work student demonstrate such knowledge ability require work independently master ||| genomföra examensarbete student visa sån kunskap förmåga krävas självständig arbeta arkitekt civilingenjör teknologie mast
initiation ||| initiering
thesis be write single student student work together ||| examensarbete genomföra student student tillsammans
description be include registration documentation ||| beskrivning bifoga registreringsunderlaget
description contain background purpose objective possibly method ||| beskrivning innehålla bakgrund syfte mål eventuell metod
examiner ensure student meet requirement general specific prerequisite thesis propose topic thesis meet general intended learning outcome theses ||| examinator kontrollera student uppfylla generell specifik förkunskapskraven examensarbete föreslå examensarbete motsvara lärandemål examensarbete
examiner sign registration documentation ||| examinator signera registreringsunderlaget
ensure thesis fall main subject master's programme sign registration documentation ||| masterprogramansvarig kontrollera examensarbete falla masterprogrammets huvudområde signera registreringsunderlaget
send registration documentation student education office ||| skicka in registreringsunderlaget studentcentrum
student education office complete registration ||| studentcentrum registrering
planning ||| planering
student write planning report provide detailed description problem/task ||| student skriva planeringsrapport precisera problembeskrivningen uppgift
planning report contain background purpose objective scope method timetable completion thesis ||| planeringsrapporten innehålla bakgrund syfte mål avgränsning metod tidsplan examensarbete genomföra
planning report be submit examiner approval ||| planeringsrapporten lämna examinator godkännande
||| handledning
student be entitle guidance course work ||| arbete gång ha student erna rätt regelbunden handledning
reporting ||| delredovisning
work week hec thesis student s report status work examiner mpa ||| hp examensarbete student student arbetsvecka avrapportera arbete status examinator masterprogramansvarig
approve interim report result hec register ||| godkänna delredovisning innebära hp inrapportera ladok
write report ||| skriftlig redovisning
thesis write ||| examensarbetsrapporten skriva engelska
cover etc. thesis formulate accord instruction template design publish master thesis ||| utformning examensarbete framsida mm ske mall utformning examensarbete
see https://student.portal.chalmers.se/en/chalmersstudies/masters-thesis/pages/design-and-publish-masters-thesis.aspx ||| se https://student.portal.chalmers.se/sv/chalmersstudier/kandidat-och-examensarbete/examensarbete/sidor/utformning-rapporter-exjobb-kand.aspx
thesis parse use anti-plagiarism software ||| examensarbetsrapporten kontrollera plagiatverktyg
chalmers policy regard open access confidentiality apply work thesis publish report ||| chalmers policy offentlighet sekretess gälla examensarbete genomföra publicering rapport
see chalmers working procedure c2008/271 ||| se chalmers arbetsordning
thesis publish electronically accord applicable rule electronic publication theses ||| examensarbetsrapporten publicera elektronisk regel gälla elektronisk publicering examensarbete chalmers
when student work jointly thesis division work clearly state thesis ||| när student utföra examensarbete tillsammans arbetsfördelning tydlig framgå examensarbetsrapporten
oral presentation ||| muntlig redovisning
oral presentation begin student describe work ||| muntlig redovisning inleda student presentera arbete
oral presentation make ||| muntlig presentation utföra engelska
time oral presentation write thesis complete publish ||| tidpunkt muntlig redovisning rapport färdigskriven ej publicera
be make possible include viewpoint arise oral presentation incorporate thesis ||| medge synpunkt framkomma redovisning inarbeta rapport
oral presentation include defense thesis be do ||| muntlig redovisning opposition genomföra chalmers
additional presentation make company other external organisation necessary ||| ytterlig redovisning behov genomföra företag
exceptional case example research conduct abroad examiner grant dispensation requirement oral presentation defense finding thesis presence other presentation ||| undantagsfall exempel då examensarbete genomföra utomlands examinator medge undantag krav muntlig redovisning opposition närvaro annan redovisning chalmers
presentation thesis be announce department at least week prior date presentation ||| presentation examensarbete annonsera aktuell institution minst vecka presentationsdatum
presentation hold period normal office hour ||| presentation ske period augusti juni normal arbetstid
student pursue five-year master science engineering master architecture education accrue at least hec begin work thesis ||| student femårig civilingenjörs- arkitektutbildningarna uppnå minst hp examensarbete påbörja
student only take part master's programme accrue at least hec programme begin work thesis ||| student enbart läsa masterprogram uppnå minst hp masterprogrammet examensarbete påbörja
addition general credit requirement necessary prerequisite course complete specific thesis ||| generell poängkraven specifik examensarbete genomföra nödvändig förkunskapsgrundande kurs klara_av
examiner formulate monitor prerequisite requirement ||| examinator formulera kontrollera sån förkunskapskrav
purpose thesis be enable student develop deeper knowledge understanding capability attitude context programme study ||| examensarbete syfta student utveckla fördjupa kunskap förståelse förmåga förhållningssätt utbildning sammanhang
thesis write end programme offer opportunity delve more deeply synthesise knowledge acquire previous study ||| examensarbete ligga slut utbildning innebära fördjupning synas tidigare förvärva kunskap
thesis master science programme place emphasis technical/scientific/artistic aspect subject matter ||| examensarbete civilingenjörs- arkitekt teknologie masterprogram betona teknisk naturvetenskaplig konstnärlig innehåll
thesis approve follow stage complete ||| examensarbete godkänna krävas följande delmoment genomföra
approve planning report ||| godkänna planeringsrapport
approve thesis ||| godkänna rapport
approve presentation defense thesis ||| godkänna presentation försvar examensarbetsredovisningen
approve opposition thesis ||| godkänna opposition annan masterexamensarbete
attendance presentation defense other theses ||| närvaro annan examensarbetsredovisningar
hec thesis interim report be submit when work reach halfway point ||| examensarbete omfattande hp delredovisning göra halv tid
examiner decide form interim report ||| examinator besluta form delredovisning
when interim report approve hec register ||| godkänna delredovisning leda hp inrapportera ladok
learning objective thesis base objective master science engineering architecture master science degree formulate local master's degree procedure ||| lärandemål masterexamensarbetet utgå mål civilingenjörs- arkitekt respektive teknologie masterexamen formulera lokal examensordning
diarienummer c2007/723 ||| dnr
specific learning objective be be fulfil master' thesis be student be able ||| specifik lärandemål fullfölja masterexamensarbetet student
project use essential in-depth knowledge major subject field study scientifically correct way relate current research development work ||| använda väsentlig fördjupa kunskap huvudområdet inriktning utbildning projekt vetenskaplig korrekt sätt relatera aktuell forskning utvecklingsarbete
choose state one's reason select project method respect major subject field study ||| välja motivera val metod projekt huvudområdet inriktning utbildning
contribute research development work be able relate work relevant scientific technical industrial architectonic context ||| bidra forskning utvecklingsarbete relatera arbete relevant vetenskaplig respektive teknisk industriell arkitektonisk sammanhang
base holistic view critically independently creatively identify formulate deal complex issue ||| helhetssyn kritisk självständig kreativ identifiera formulera hantera komplex frågeställning
plan adequate method carry qualify task designate framework also be able evaluate work ||| planera adekvat metod genomföra kvalificerad uppgift given ram samt utvärdera arbete
create analyse critically evaluate different technical/architectonic solution ||| skapa analysera kritisk utvärdera olik teknisk arkitektonisk lösning
critically systematically integrate knowledge ||| kritisk systematisk integrera kunskap
present discuss conclusion as well knowledge argument base speak write ||| engelska muntlig skriftlig klar redogöra diskutera slutsats kunskap argument ligga grund
framework specific project identify issue need address relevant societal ethical ecological factor be observe ||| ram specifik projekt identifiera frågeställning besvara relevant samhällelig etisk ekologisk aspekt beakta
observe discuss ethical aspect research development work pertain how work carry as well explores/develops ||| beakta diskutera etisk aspekt forskning utvecklingsarbete avse hur arbete genomföra undersöka utvecklas
identify discuss need further elucidation different project aspect decision-making project realisation when relevant ||| identifiera diskutera behov ytterlig belysning olik aspekt projekt beslut genomförande där så relevant
completion degree work student demonstrate such knowledge ability require work independently master ||| genomföra examensarbete student visa sån kunskap förmåga krävas självständig arbeta arkitekt civilingenjör teknologie mast
initiation ||| initiering
thesis be write single student student work together ||| examensarbete genomföra student student tillsammans
description be include registration documentation ||| beskrivning bifoga registreringsunderlaget
description contain background purpose objective possibly method ||| beskrivning innehålla bakgrund syfte mål eventuell metod
examiner ensure student meet requirement general specific prerequisite thesis propose topic thesis meet general intended learning outcome theses ||| examinator kontrollera student uppfylla generell specifik förkunskapskraven examensarbete föreslå examensarbete motsvara lärandemål examensarbete
examiner sign registration documentation ||| examinator signera registreringsunderlaget
ensure thesis fall main subject master's programme sign registration documentation ||| masterprogramansvarig kontrollera examensarbete falla masterprogrammets huvudområde signera registreringsunderlaget
send registration documentation student education office ||| skicka in registreringsunderlaget studentcentrum
student education office complete registration ||| studentcentrum registrering
planning ||| planering
student write planning report provide detailed description problem/task ||| student skriva planeringsrapport precisera problembeskrivningen uppgift
planning report contain background purpose objective scope method timetable completion thesis ||| planeringsrapporten innehålla bakgrund syfte mål avgränsning metod tidsplan examensarbete genomföra
planning report be submit examiner approval ||| planeringsrapporten lämna examinator godkännande
||| handledning
student be entitle guidance course work ||| arbete gång ha student erna rätt regelbunden handledning
reporting ||| delredovisning
work week hec thesis student s report status work examiner mpa ||| hp examensarbete student student arbetsvecka avrapportera arbete status examinator masterprogramansvarig
approve interim report result hec register ||| godkänna delredovisning innebära hp inrapportera ladok
write report ||| skriftlig redovisning
thesis write ||| examensarbetsrapporten skriva engelska
cover etc. thesis formulate accord instruction template design publish master thesis ||| utformning examensarbete framsida mm ske mall utformning examensarbete
see https://student.portal.chalmers.se/en/chalmersstudies/masters-thesis/pages/design-and-publish-masters-thesis.aspx ||| se https://student.portal.chalmers.se/sv/chalmersstudier/kandidat-och-examensarbete/examensarbete/sidor/utformning-rapporter-exjobb-kand.aspx
thesis parse use anti-plagiarism software ||| examensarbetsrapporten kontrollera plagiatverktyg
chalmers policy regard open access confidentiality apply work thesis publish report ||| chalmers policy offentlighet sekretess gälla examensarbete genomföra publicering rapport
see chalmers working procedure c2008/271 ||| se chalmers arbetsordning
thesis publish electronically accord applicable rule electronic publication theses ||| examensarbetsrapporten publicera elektronisk regel gälla elektronisk publicering examensarbete chalmers
when student work jointly thesis division work clearly state thesis ||| när student utföra examensarbete tillsammans arbetsfördelning tydlig framgå examensarbetsrapporten
oral presentation ||| muntlig redovisning
oral presentation begin student describe work ||| muntlig redovisning inleda student presentera arbete
oral presentation make ||| muntlig presentation utföra engelska
time oral presentation write thesis complete publish ||| tidpunkt muntlig redovisning rapport färdigskriven ej publicera
be make possible include viewpoint arise oral presentation incorporate thesis ||| medge synpunkt framkomma redovisning inarbeta rapport
oral presentation include defense thesis be do ||| muntlig redovisning opposition genomföra chalmers
additional presentation make company other external organisation necessary ||| ytterlig redovisning behov genomföra företag
exceptional case example research conduct abroad examiner grant dispensation requirement oral presentation defense finding thesis presence other presentation ||| undantagsfall exempel då examensarbete genomföra utomlands examinator medge undantag krav muntlig redovisning opposition närvaro annan redovisning chalmers
presentation thesis be announce department at least week prior date presentation ||| presentation examensarbete annonsera aktuell institution minst vecka presentationsdatum
presentation hold period normal office hour ||| presentation ske period augusti juni normal arbetstid
student pursue five-year master science education accrue at least hec begin work thesis ||| student femårig civilingenjörs- arkitektutbildningarna uppnå minst hp examensarbete påbörja
student only take part master's programme accrue at least hec programme begin work thesis ||| student enbart läsa masterprogram uppnå minst hp masterprogrammet examensarbete påbörja
addition general credit requirement necessary prerequisite course complete specific thesis ||| generell poängkraven specifik examensarbete genomföra nödvändig förkunskapsgrundande kurs klara_av
examiner formulate monitor prerequisite requirement ||| examinator formulera kontrollera sån förkunskapskrav
operate system exist everywhere where computer system exist just desktop server also vehicle phone embedded industrial system ||| operativsystem finnas överallt där datorsystem finnas inte bara stationär dator server också fordon telefon inbyggd industriell system
course provide introduction design implementation operate system ||| kurs ge introduktion design implementering operativsystem
course provide introduction design implementation operate system ||| kurs ge introduktion design implementering operativsystem
topic cover include concurrent process resource management deadlock memory management technique virtual memory processor scheduling disk scheduling file system distribute file system micro kernel virtual machine security protection scheme ||| exempel avsnitt behandla processbegreppet process resurshantering hantering låsningssituationer deadlock hantering primärminne virtuell minne schemaläggning skivminne filsystem distribuera filsystem mikrokärnor virtual machines säkerhet- skyddsmekanism
development course only present key component operate system also discuss design implementation challenge evolution pioneer modern mobile-based one ||| kurs presentera viktig komponent operativsystem komplettera diskussion hur slutlig utformning implementering utvecklas historisk modern mobil os
example include mobile-devices operating system ||| olik begrepp illustrera exempel operativsystem fara mobil apparat
write examination ||| genomförande laboration skriftlig tentamen
successful completion course participant be able demonstrate knowledge understanding ||| kurs student visa ha kunskap förståelse
implementation simple os component ||| implementering enkel del operativsystem
participant also be able ||| student också
implement piece system-level code c programming language ||| implementera enkel rutin operativsystem programspråk
lecture exercise lab ||| undervisning bedriva from föreläsning lektionsövningar laboration
be international well-established platform top quality hands-on lab ||| pintos internationell renommerad väletablerad plattform hög kvalité praktisk labbande operativsystem
student have good understanding computer organization basic knowledge low level programming be familiar term assembler interrupt so on i.e. contents course machine orient programming ||| student ha god förståelse dator konstruktion grundläggande kunskap maskinnära programmering ha kännedom begrepp assembler avbrott etc dvs innehåll kurs maskinorienterad programmering
student need also have knowledge datum structure e.g. tree link list hash table i.e. contents course data structure as well programming skill at least course point programming ||| student också ha kunskap datastrukturer t_ex träd länka lista hashtabeller dvs innehåll kurs datastrukturer programmeringskunskaper minst kurspoäng dataprogrammering
knowledge basic probability theory be advantage also acquire course complementary reading ||| kunskap grundläggande sannolikhetslära fördel också inhämta parallell kurs
course deal design analysis fault-tolerant computer system ||| kurs behandla konstruktion analys feltoleranta datorsystem
content divide area ||| innehåll dela in delområden
terminology definition include term such dependability reliability maintainability availability safety taxonomy dependable system fault failure model etc. ||| terminologi definition omfatta termer pålitlighet tillförlitlighet funktionssannolikhet underhållsgodhet tillgänglighet säkerhet
design technique error detection fault tolerance ||| vidare behandla taxonomi feltoleranta system modell fel felyttringar
hardware redundancy triple modular redundancy tmr dual modular redundancy dmr hot cold standby system hybrid redundancy forward backward recovery etc. ||| konstruktionsmetoder feldetektering feltolerans maskinvaruredundans trippelmodulär redundans redundans aktiv redundans varm kall beredskapssystem hybridredundans m.m. programvaruredundans n-versionsprogrammering recovery block
time redundancy detect tolerate transient fault ||| tidsredundans metod detektering transienta fel
fault-tolerance distribute system time-triggered system byzantine failure ||| feltolerans distribuera system tidsstyrda system byzantinska fel
dependability analysis computer system reliability block diagram fault-tree chain model failure mode effect analysis fault tree analysis etc. ||| analys feltoleranta datorsystem tillförlitlighetsblockschema felträd markovkedjemodeller felmodsanalys fmea felträdsanalys stokastisk petrinät
include laboratory class chain model stochastic petri net be use analyze fault-tolerant system ||| laboration ingå där feltoleranta datorsystem analysera markovkedjemodeller stokastisk petrinät
analysis do use special computer program ||| beräkning göra speciell datorprogram
student require document result laboratory class technical report ||| resultat laboration dokumentera teknisk rapport
write exam ||| skriftlig tentamen
compulsary participation laboratory class ||| obligatorisk deltagande laboration
formulate dependability requirement computer system use business safety mission-critical application ||| formulera pålitlighetskrav datorsystem använda affärskritiska säkerhetskritiska missionskritiska tillämpning
describe structure principle commonly use system architecture fault-tolerant computer ||| jämföra grundläggande princip arkitektur feltoleranta datorsystem
perform probabilistic dependability analysis computer system use fault-tree reliability block diagram time-continuous chain stochastic petri net ||| genomföra sannolikhetsteoretiska analys datorsystemarkitekturer hjälp felträd tillförlitlighetsblockschema tidskontinuerliga markovkedjor stokastisk petrinät
master terminology dependable computing ||| behärska grundläggande terminologi område pålitlig datorsystem
lecture exercise laboratory class ||| föreläsning övning laboration
essential element concept digital technology different number system ||| digitalteknikens grundläggande element begrepp olik talsystem
use construct combinatorial network synchronous sequential circuit ||| algebra användning konstruktion kombinatorisk nät synkron sekvensnät
computer' digital building block datum path controller memory input output device ||| dator digital byggblock dataväg styrenhet minne in enhet
traditional processor architecture data-path control unit instruction set synchronously operate digital machine ||| traditionsenlig processor uppbyggnad dataväg styrenhet instruktionsuppsättning synkron arbeta digitalmaskin
coding machine language assembly language ||| kodning maskinspråk assemblerspråk
pass course student pass write examination laboratory work ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
base write examination final grade be ||| basera tentamensresultatet ge betyg
describe computer structure organisation ||| beskriva dator uppbyggnad funktion
student be able ||| betyda exempel
give block-level description how data-path register file arithmetic logic unit connect ||| beskriva blocknivå hur styrenhet dataväg registerfil aritmetik logikenhet koppla samman centralenhet
explain architectural concept such accumulator architecture stack architecture pipeline ||| förklara begrepp ackumulatorarkitektur risc cisc stackarkitektur pipeline
describe analyze/design central processing unit' basic part ||| beskriva analysera konstruera centralenhet grundläggande del
student be able ||| betyda exempel
analyze/design single alu design control signal sequence basic alu operation ||| analysera konstruera enkel utforma styrsignalsekvenser grundläggande alu-operationer
analyze single datum path construct design control signal sequence transfer register memory ||| analysera enkel dataväg samt konstruera utforma styrsignalsekvenser överföring register
explain how instruction create control signal sequence ||| förklara hur instruktion bygga upp styrsekvenser
student be able use example explain describe instruction format instruction decoding instruction execution ||| betyda exempel förklara exempel beskriva instruktionsformat instruktionsavkodning instruktionsutförande
describe analyze control unit ||| beskriva analysera automatisk styrenhetens funktion uppbyggnad
student be able ||| betyda exempel
describe how control signal sequence realize hard-wired logic micro-programmed logic ||| beskriva hur styrsignalsekvenser realisera fast koppla logik mikroprogrammerad logik
analyze design control signal sequence instruction semantics ||| analysera konstruera styrsignalsekvenser utgående instruktion semantik
explain primary memory' core function describe analyze design realize main memory' connection cpu ||| förklara primärminne grundläggande funktion beskriva analysera konstruera primärminne anslutning centralenhet
student be able ||| betyda exempel
describe different type primary memory such rom prom flash sram dram explain usefulness type different purpose ||| beskriva olik typ primärminne statisk dynamisk ram förklara respektive minnestyps användbarhet olik ändamål
explain concept memory hierarchy ||| förklara begrepp minneshierarki
describe analyze realize address decode logic primary memory ||| beskriva analysera konstruera avkodningslogik primärminne digital komponent
describe analyze realize simple memory address io digital component ||| beskriva analysera konstruera enkel minnesadresserad io digital komponent
explain/describe how bus link cpu memory ||| förklara beskriva hur centralenhet minne koppla samman hjälp dator bussystem
student be able describe synchronous asynchronous bus protocol multiplex ||| betyda exempel beskriva synkron asynkron bussprotokoll multiplexteknik
describe basic exception handling computer system ||| beskriva elementär undantagshantering datorsystem
student be able ||| betyda exempel
explain various hardware software exception handling such restart software-initiated exception externally generate exception interrupt ||| förklara undantagstyper återstart programvaruinitierade undantag extern generera undantag avbrott
describe how restart software-initiated exception perform controller ||| beskriva hur återstart programvaruinitierade undantag utföra styrenheten
describe how interrupt be handle cpu ||| beskriva hur avbrott hantera centralenhet
student be able ||| betyda exempel
convert number decimal binary hexadecimal representation ||| utföra omvandling tal decimal binär hexadecimal representation
describe analyze computer' structure programmable digital system ||| beskriva analysera dator uppbyggnad programmerbar digital system
combinatorial circuit consider here consist mainly simple circuit such multiplexer de-multiplexer full adder bit shifter etc. ||| kombinatorisk nät här avse utgöra huvudsakligen enkel nät väljare,fördelare heladderare bitskiftare etc.
sequential circuit consider here consist memory element counter ||| sekvensnät här avse utgöra minneselement räknare
program assembler ||| assemblerprogrammering
explain store program principle ||| förklara lagra program princip
describe programmer' model machine ||| beskriva programmerare bild maskin dvs instruktionsuppsättning adresseringssätt
describe analyze design simple assembly language program organize subroutine ||| beskriva analysera konstruera enkel assemblerprogram organiserad subrutiner
student be able ||| betyda exempel
structure program use subroutine stack management ||| strukturera program hjälp subrutiner stackhantering
write small routine include software-controlled interrupt-driven input output delay ||| skriva liten rutin innefatta programstyrd avbrottsstyrd in utmatning fördröjning
schedule teaching consist lecture demonstration supervised coding simulation exercise ||| schemalägga undervisning bestå föreläsning demonstration handleda simulering kodnings- övning
also supervise laboratory session student require prepare ||| dessutom utföra handleda obligatorisk laboration där förkunskapskontroll genomföra laboration
course student design increasingly complex digital building block digital computer system ||| kurs konstruera student stor stor digital byggblock ingående digital system datorsystem
theory present lecture demonstration ||| teori inhämta föreläsning demonstration
student construct building block test design help simulator exercise ||| student konstruera byggblock testa konstruktion hjälp simulator simuleringsövningar
building block subsequently realize hardware lab session ||| därefter implementera student byggblock hårdvara laboration
realization complete link building block computer programming ||| konstruktionsarbetet avsluta sammankoppla byggblocken dator programmera
none ||| endast grundläggande behörighet
essential element concept digital technology different number system ||| digitalteknikens grundläggande element begrepp olik talsystem
use construct combinatorial network synchronous sequential circuit ||| algebra användning konstruktion kombinatorisk nät synkron sekvensnät
computer' digital building block datum path controller memory input output device ||| dator digital byggblock dataväg styrenhet minne in enhet
traditional processor architecture data-path control unit instruction set synchronously operate digital machine ||| traditionsenlig processor uppbyggnad dataväg styrenhet instruktionsuppsättning synkron arbeta digitalmaskin
coding machine language assembly language ||| kodning maskinspråk assemblerspråk
pass course student pass write examination laboratory work ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
base write examination final grade be ||| basera tentamensresultatet ge betyg
describe computer structure organisation ||| beskriva dator uppbyggnad funktion
student be able ||| betyda exempel
give block-level description how data-path register file arithmetic logic unit connect ||| beskriva blocknivå hur styrenhet dataväg registerfil aritmetik logikenhet koppla samman centralenhet
explain architectural concept such accumulator architecture stack architecture pipeline ||| förklara begrepp ackumulatorarkitektur risc cisc stackarkitektur pipeline
describe analyze/design central processing unit' basic part ||| beskriva analysera konstruera centralenhet grundläggande del
student be able ||| betyda exempel
analyze/design single alu design control signal sequence basic alu operation ||| analysera konstruera enkel utforma styrsignalsekvenser grundläggande alu-operationer
analyze single datum path construct design control signal sequence transfer register memory ||| analysera enkel dataväg samt konstruera utforma styrsignalsekvenser överföring register
explain how instruction create control signal sequence ||| förklara hur instruktion bygga upp styrsekvenser
describe analyze control unit ||| beskriva analysera automatisk styrenhetens funktion uppbyggnad
student be able ||| betyda exempel
describe how control signal sequence realize hard-wired logic micro-programmed logic ||| beskriva hur styrsignalsekvenser realisera fast koppla logik mikroprogrammerad logik
analyze design control signal sequence instruction semantics ||| analysera konstruera styrsignalsekvenser utgående instruktion semantik
explain primary memory' core function describe analyze design realize main memory' connection cpu ||| förklara primärminne grundläggande funktion beskriva analysera konstruera primärminne anslutning centralenhet
student be able ||| betyda exempel
describe different type primary memory such rom prom flash sram dram explain usefulness type different purpose ||| beskriva olik typ primärminne statisk dynamisk ram förklara respektive minnestyps användbarhet olik ändamål
explain concept memory hierarchy ||| förklara begrepp minneshierarki
describe analyze realize address decode logic primary memory ||| beskriva analysera konstruera avkodningslogik primärminne digital komponent
describe analyze realize simple memory address io digital component ||| beskriva analysera konstruera enkel minnesadresserad io digital komponent
explain/describe how bus link cpu memory ||| förklara beskriva hur centralenhet minne koppla samman hjälp dator bussystem
student be able describe synchronous asynchronous bus protocol multiplex ||| betyda exempel beskriva synkron asynkron bussprotokoll multiplexteknik
describe basic exception handling computer system ||| beskriva elementär undantagshantering datorsystem
student be able ||| betyda exempel
explain various hardware software exception handling such restart software-initiated exception externally generate exception interrupt ||| förklara undantagstyper återstart programvaruinitierade undantag extern generera undantag avbrott
describe how restart software-initiated exception perform controller ||| beskriva hur återstart programvaruinitierade undantag utföra styrenheten
describe how interrupt be handle cpu ||| beskriva hur avbrott hantera centralenhet
digital technology ||| digitalteknik
describe use binary code ||| beskriva använda binär kod
student be able ||| betyda exempel
convert number decimal binary hexadecimal representation ||| utföra omvandling tal decimal binär hexadecimal representation
describe analyze computer' structure programmable digital system ||| beskriva analysera dator uppbyggnad programmerbar digital system
combinatorial circuit consider here consist mainly simple circuit such multiplexer de-multiplexer full adder bit shifter etc. ||| kombinatorisk nät här avse utgöra huvudsakligen enkel nät väljare,fördelare heladderare bitskiftare etc.
sequential circuit consider here consist memory element counter ||| sekvensnät här avse utgöra minneselement räknare
program assembler ||| assemblerprogrammering
explain store program principle ||| förklara lagra program princip
describe programmer' model machine ||| beskriva programmerare bild maskin dvs instruktionsuppsättning adresseringssätt
student be able describe processor register set explain various type instruction group address mode describe example ||| betyda exempel förklara olik allmängiltig typ instruktionsgrupper adresseringssätt beskriva exempel
describe analyze design simple assembly language program organize subroutine ||| beskriva analysera konstruera enkel assemblerprogram organiserad subrutiner
student be able ||| betyda exempel
structure program use subroutine stack management ||| strukturera program hjälp subrutiner stackhantering
write small routine include software-controlled interrupt-driven input output delay ||| skriva liten rutin innefatta programstyrd avbrottsstyrd in utmatning fördröjning
schedule teaching consist lecture demonstration supervised coding simulation exercise ||| schemalägga undervisning bestå föreläsning demonstration handleda simulering kodnings- övning
also supervise laboratory session student require prepare ||| dessutom utföra handleda obligatorisk laboration där förkunskapskontroll genomföra laboration
course student design increasingly complex digital building block digital computer system ||| kurs konstruera student stor stor digital byggblock ingående digital system datorsystem
theory present lecture demonstration ||| teori inhämta föreläsning demonstration
student construct building block test design help simulator exercise ||| student konstruera byggblock testa konstruktion hjälp simulator simuleringsövningar
building block subsequently realize hardware lab session ||| därefter implementera student byggblock hårdvara laboration
realization complete link building block computer programming ||| konstruktionsarbetet avsluta sammankoppla byggblocken dator programmera
basic eligibility ||| grundläggande behörighet
embedded system be computer system design perform few dedicated function ||| inbyggd system datorsystem konstruera utföra fåtal specifik funktion
embed sense be part complete device often include electrical hardware mechanical part ||| inbyggd mening del komplett enhet ofta omfattande elektrisk hårdvara mekanisk del
reason safety usability embedded system have strict constraint non-functional behavior such computational delay periodicity ||| säkerhet användbarhetsskäl viss inbyggd system strikt krav icke-funktionella beteende fördröjning periodicitet datorberäkning
such system refer real-time system ||| sån datorsystem kalla realtidssystem
example real-time system be control system car aircraft space vehicle as well computer game multimedia application ||| exempel realtidssystem styrsystem bil flygplan rymdfarkost datorspel multimediatillämpningar
course intend give basic knowledge method design analysis real-time system ||| kurs syfta ge grundläggande kunskap metod konstruktion analys realtidssystem
extremely high cost associate late discovery problem embedded system be important follow good design methodology development software hardware ||| grund extrem hög kostnad följa sen upptäckt problem inbyggd system viktig god designmetodik använda utveckling mjuka hårdvara
mean be use system architecture offer good component abstraction facilitate simple interfacing component ||| sån metod använda systemarkitektur tillhandahålla bra abstraktion mjukvarukomponenter understödja enkel sammankoppling sån komponent
course give overview state-of-the-art system architecture use design embedded system example ||| kurs ge översikt systemarkitekturer använda design inbyggd system t_ex
system architecture philosophy dictate software embedded system be organize multiple concurrently-executing task where task group task implement specific functionality system ||| filosofi systemarkitekturer diktera mjukvara inbyggd system organisera multipel parallell exekvera process där process grupp process implementera specifik funktionalitet system
end main objective course be demonstrate how enhance c programming language be use implement communication/synchronization task resource management mutual exclusion ||| viktig syfte kurs demonstrera hur utöka programspråk använda realisera kommunikation synkronisering process resurshantering ömsesidig uteslutning
other programming language use monitor semaphore implement function course also contain presentation such technique ||| annan programspråk använda monitor semafor realisera funktion innehålla kurs också genomgång sån tekniker
addition course demonstrate how use low-level programming implement interrupt-driven interaction hardware device ||| dessutom demonstrera kurs hur använda lågnivåprogrammering realisera avbrottsstyrd interaktion hårdvaruenheter
demonstrate general principle real-time programming course also give example how technique be implement other programming language such ||| demonstrera generell princip programmering realtidssystem ge kurs också exempel hur princip realisera annan programspråk ada java
order execute program contain concurrent task be run-time system real-time kernel distribute available capacity microprocessor s task ||| möjliggöra exekvering program innehålla parallell process använda runtime-system realtidskärna fördela total tillgänglig beräkningskapaciteten system mikroprocessor er process
course show how simple run-time system be organize ||| kurs beskriva hur enkel runtime-system organiserad
run-time system determine order execution task means scheduling algorithm ||| exekveringsordningen process bestämma runtime-systemet hjälp schemaläggningsalgoritm
end course present technique base cyclic time-table base scheduling as well scheduling technique use static dynamic task priority ||| kurs presentera tekniker basera cyklisk tidtabell statisk dynamisk processprioriteter
addition protocol management shared hardware software resource be present ||| dessutom presentera protokoll hantering delad hård mjukvaruresurser
many contemporary real-time application distribute multiple computer node course also present topology medium access mechanism commonly-used communication network ||| dag realtidstillämpningar distribuera multipel datornoder innehålla kurs också introduktion topologi mediumaccesstekniker vanlig använda kommunikationsnätverk
real-time system where task strict timing constraint be necessary make pre-run-time analysis system schedulability ||| realtidssystem där process strikt tidskrav nödvändig göra a_priori:15 analys system schemaläggningsbarhet
course present different analysis method system schedule task use static dynamic priority utilization-based analysis response-time analysis processor-demand analysis ||| kurs presentera olik analysmetoder system schemalägga process statisk dynamisk prioritet utnyttjandegradsbaserad analys svarstidsanalys beräkningsbehovsanalys
conjunction course also give account how derive maximum resource requirement worst-case execution time task ||| samband ge också insikt hur maximal resursbehovet värsta-fallets exekveringstid process beräkna
write exam approve laboratory assignment ||| skriftlig tentamen godkänna laborationsuppgift
course student be able ||| kurs student
formulate requirement embedded system strict constraint computational delay periodicity ||| formulera krav inbyggd datorsystem strikt önskemål fördröjning periodicitet datorberäkning
reflect argue write choice system implementation vis-á-vi ethical aspect datum integrity ||| reflektera argumentera skrift val systemimplemering vis-á-vis etisk aspekt dataintegritet
describe different layer system architecture embedded real-time system ||| kategorisera beskriva olik lager systemarkitektur inbyggd realtidssystem
construct concurrently-executing task software unit real-time application interface hardware device sensors/actuators ||| konstruera parallell exekvera process programvarumoduler realtidstillämpningar gränssnitt hårdvaruenheter sensor ställdon
describe principle mechanism use design run-time system communication network real-time application ||| beskriva princip mekanism använda konstruera run-time system kommunikationsnätverk realtidstillämpningar
apply basic analysis method use verify temporal correctness set execute task ||| tillämpa grundläggande analysmetoder använda verifiera tidsmässig korrekthet uppsättning process
course be organize series lecture set exercise session where programming technique theory present lecture put practice ||| kurs utgöra föreläsningsserie antal salsövningar där programmeringmetoder teori föreläsning praktisera
apart programming cooperate concurrent task strict timing constraint laboratory assignment also encompass low-level programming hardware device such timer network controller ||| uppgift omfatta programmering samverka parallell process även maskinnära programmering hårdvaruenheter realtidsklockor nätverkskontrollers
preparatory course concurrent programming operating system ||| förberedande kurs parallellprogrammering operativsystem
design implement small digital device microprocessor include ||| konstruktionsarbete samband konstruktion digital apparat liten digital system mikroprocessor ingå
follow skill be usually student acquire ||| följande kunskap bruka student förvärva
construction ||| konstruktion
limited resource ||| begränsad resurs
troubleshoot logic analyzer ||| felsökning logikanalysator
timing ||| timing
use circuit ||| använda krets
read technical documentation ||| läsa teknisk dokumentation
report write technical documentation ||| rapportskrivning teknisk dokumentation
examination be continuous course laboratory weekly meeting review logbook assessment final product report oral presentation ||| examination ske fortlöpande kurs laboration veckomöten granskning loggbok bedömning slutprodukt rapport muntlig framställning
rating base project group choose give base rating adjust accord how well project complete ||| betyg sätta projekt grupp ge bas betyg justera hur väl projekt genomföra
part above approve final grade ||| delmoment ovan godkänna slutbetyg kurs
understand principle structured hierarchical description smaller digital system ||| princip strukturera hierarkisk beskrivning liten digital system
understand function use limitation programmable logic circuit ||| funktion användning begränsning programmerbar krets
understand function use limitation modern design tool electronic design ||| funktion användning begränsning modern konstruktionsverktyg elektronikkonstruktion
know requirement power supply digital circuit environment multiple voltage ||| krav korrekt strömförsörjning digital krets miljö med_flera:10 spänning
know how search documentation commercial electronic component ||| hur söka dokumentation kommersiell elektronikkomponent r,
skill ability ||| färdighet förmåga
base vague request develop technical specification small digital system ||| utgående vag formulera underlag ta fram teknisk specifikation funktion liten digital system
base specification realize function small digital system programmable logic other component structured manner use modern cad tool ||| utgående specifikation realisera funktion liten digital system programmerbar logik övrig komponent strukturera sätt hjälp modern cad-verktyg
understand use relevant part documentation exist electronic component be able interconnect ||| förstå använda tillämplig del dokumentation existerande elektronikkomponent sammankoppling [
perform engineering tradeoff design related functionality speed complexity size ||| utföra ingenjörsmässig avvägning konstruktion funktion hastighet komplexitet storlek
manage modern tool advantage shortcoming ||| hantera modern fördel ofullkomlighet
debug design use computer-based simulator measure instrument logic analyzer oscilloscope ||| felsökning konstruktion användande datorbaserad simulator mätinstrument logikanalysatorer oscilloskop
complete document prototype smaller digital system ||| färdigställa dokumentera prototyp liten digital system
produce technical documentation design be understandable useful people different level company ||| framställa teknisk dokumentation egen konstruktion så förståelig användbar person olik nivå företag
muntlig presentation av arbetet på ett ingenjörsmässigt och professionellt sätt m ||| muntlig presentation arbete ingenjörsmässig professionell sätt
oral presentation work engineering professional manner ||| genomföra arbete projektform kontinuerlig dokumentera projekt framskridande [
course begin lecture exercise allow student become familiar tool ||| kurs inleda kort föreläsningsserie laboration göra student bekanta eda-verktygen
subsequently student proceed construction work supervision ||| därefter utföra student själva konstruktionsarbete överinseende handledare
project work perform group student ||| projektarbete utföra grupp teknolog
group select task own follow proposal catalog project ||| grupp välja uppgift egen förslag projektkatalog
components instrument equipment be available student accessible premise period week ||| komponent instrument övrig utrustning hållas tillgänglig kursdeltagare åtkomlig lokal tidrymd vecka
work present write report ||| konstruktionsarbetet redovisa skriftlig rapport
student have meeting week supervisor ||| student ha möte vecka handledare examinator obligatorisk
course conclude seminar mandatory attendance where project be present ||| kurs avsluta seminarium obligatorisk närvaro där projekt redovisa
||| grundkurs område digital datorteknik elektronik programmering
addition course eda322 digital design be strongly recommend ||| dessutom kurs eda322 digital konstruktion stark rekommendera
course give basic knowledge security area i.e. how protect system intentional intrusion attack ||| kurs ge grundläggande kunskap område datasäkerhet eng security dvs hur skydda system avsiktlig intrång
purpose intrusion make change delete resource datum program hardware etc get unauthorized access confidential information unauthorized use system' service ||| intrång göra avsikt ändra förstöra resurs data programvara maskinvara osv .) skaffa tillgång konfidentiell information orättmätig utnyttja system tjänst
course cover threat vulnerability computer system network as well rule method mechanism protection ||| kurs behandla hot finnas svaghet datorsystem kommunikationsnät regelverk mekanism använda skydda system
modeling assessment security dependability as well metrication method cover ||| kurs behandla säkerhet del överordnad begrepp pålitlighet eng dependability
few lecture holistic security approach take organizational business-related social human legal ethical aspect treat ||| säkerhetstänkandet sätta även in vid sammanhang organisatorisk affärsmässig social juridisk mänsklig etisk aspekt beröra
introduction computer security definition terminology standard ||| introduktion datasäkerhet definition terminologi standard
practical example ||| praktikfall
relation dependability reliability availability safety ||| koppling tillförlitlighet tillgänglighet katastrofsäkerhet
information hiding steganography covert channel ||| steganografi hemlig kanal
introduction cryptography ||| introduktion kryptoteknik
secure operating system ||| säker operativsystem
deception system ||| vilseledande system
security model chinese wall etc. ||| säkerhetsmodeller fl
introduction network security firewall ||| introduktion säkerhet nätverk brandväggar
database security defensive programming injection attack ||| säkerhet databas defensiv programmeringsteknik
security metric ||| mätning säkerhet
security management organisation ||| säkerhetsplanering organisation
law ethic ||| lag etik
complete course student acquire follow knowledge goal ||| fullgöra kurs student tillgodogöra_sig följande lärandemål
student ||| student
have overall fundamental understanding computer security realize consequence insecurity ||| ha övergripande grundläggande förståelse datasäkerhet otillräcklig datasäkerhet innebära betrakta system
have general knowledge protection mechanism ||| ha generell förståelse olik skyddsmekanism
be capable make security analysis different type system suggest way improve security ||| analysera olik typ system datasäkerhetssynpunkt samt föreslå åtgärd säkra system
be able deal few method security modeling ||| ha förståelse metod modellera säkerhet
understand common method security assessment evaluation metrication ||| förstå vanlig metod säkerhetsbedömning utvärdering svårighet hur säkerhet mäta
improve skill technical writing ||| förbättra förmåga uttrycka skriftlig författa teknisk rapport
be able reason ethical social aspect computer security ||| föra välunderbyggt resonemang etisk social aspekt datasäkerhet
course consist series lecture few exercise laborative exercise ||| kurs utgöra föreläsningsserie viss övningsmoment laboration
computer security be course propose security specialization ||| kurs grundkurs datasäkerhet del föreslå säkerhetsfördjupningen universitet
ethical social aspect relation computer science further develop course dat147 ||| etisk social aspekt utvecklas ytterlig kurs dat147
general requirement degree require ||| undervisning förutsätta kunskap motsvarande kandidatexamen
knowledge programming language such c also require ||| dessutom krävas kunskap programmeringsspråk exempel
course eda092 operating system equivalent be recommend ||| kurs operativsystem motsvarande rekommendera
course cover architectural technique design parallel computer particular technique support major programming paradigm message passing share memory datum parallelism explicit instruction-level parallelism modern combination such combined thread-and-data parallelism support gpus ||| kurs behandla arkitekturtekniker konstruktion parallell dator särskilt tekniker stödja viktig programmeringsmodeller message passing delad minne dataparallellism explicit instruktionsparallellism modern kombination modell exempel kombinera tråd dataparallellism använda
content be divide several part ||| stoff indela flera tematisk del
study highlight context strategic approach propose develop then context idea design principle reappear today ||| betoning ligga sammanhang där metod föreslå utvecklas därefter sammanhang idé princip tillämpa idag
order motivate deeper discussion different class parallel computer third part cover canonical step design efficient parallel software ||| motivera djup diskussion olik klass parallell datorsystem täcka tre del traditionell steg konstruktion paralllell mjukvara
important concept decompose sequential program parallel thread parallel datum balance load parallel architectural resource reduce communication synchronize parallel activity e.g. parallel thread ||| uppdelning program parallell tråd parallell data lastbalansering tillgänglig resurs minimering kommunikation olik del samt synkronisering parallell aktivitet exempelvis tråd viktig princip
lab assignment specifically focus shared-memory machine highlight ramification different memory coherence strategy different kind workload ||| laborationsuppgifter röra specifik arkitektur delad minne fokus skilja strategi minneskoherens inverkan olik lastfall
fourth part focus design principle share memory small-scale parallel computer share memory e.g. design principle multi-core microprocessor support thread-level parallelism ||| fyra del behandla designprinciper liten parallell dator delad minne exempel princip modern multicore-processorer stöd trådparallellism
important concept cover be cache coherence consistency ||| viktig koncept cache-koherens konsistens
study bus-based snoopy-cache protocol inclusion property multi-phase protocol ||| studera buss-baserade cache-protokoll flerfasprotokoll
fifth part deal scalability parallel computer i.e. architectural technique scale number processor higher count specifically respect cache coherence protocol ||| fem del behandla skalbarhet parallell dator säga ariktetkurtekniker öka antal processor parallell system speciell avseende cache-koherensprotokollen
sixth part deal interconnection network essential component chip multiprocessor scalable parallel computer system ||| sex del handla kommunikationsnätverk essentiell del chip-multiprocessorer skalbara parallell datorsystem
concept cover route switching topology design scalable interconnect ||| behandla routing switching val topologi skalbara nätverk
common thread run part be discussion cost tradeoff respect performance power energy verifiability programmability maintainability ||| genomgående tema kurs del avvägning prestanda effektbehov energibehov verifierbarhet programmerbarhet underhåll
second unifying theme be memory bottleneck importance efficient resource management ||| två sammanhålla tema minnesflaskhalsen vikt effektiv resurshantering
example project topic include multithread relax memory consistency model prefetching memory access scheduling ||| exempel ämne multitrådshantering svag modell minneskonsistens prefetching schemaläggning minnesåtkomster
write project rather conventional exam ||| skriftlig projekt flera vecka snarare konventionell tentamen
student master terminology key concept parallel computer architecture order follow research advance field ||| student behärska terminologi nyckelbegrepp parallelldatorarkitektur följa fält utveckling
understand principle parallel computer organization especially principle design communication substrate support different programming model ||| förstå princip parallelldatororganisation särskilja konstruktionsprinciper kommunikationssubstratet stödja olik programmeringsmodeller
understand different model parallelism historical perspective ||| förstå olik modell parallellism historisk perspektiv
exhibit basic skill design software parallel computer understanding issue involve design efficient parallel software ||| uppvisa grundläggande färdighet konstruktion mjukvara parallell dator förståelse övervägande påverka effektivitet parallell programvara
student strengthen communication skill demonstrate learning participate lecture lab smaller project-group meeting ||| specifik student förbättra kommunikativ förmåga demonstrera insikt delta föreläsning laboration projektmöten
complete homework assignment demonstrate breadth learn ||| inlämningsuppgifter visa breddförståelse
write research survey collaboration student project group cooperation instructor demonstrate depth learn parallel computer design subject choose ||| grupp ledning instruktör författa rapport sammanfatta forskningsläget välja delområde visa djupförståelse område
computer industry accomplish phenomenal mission year put personal computer desk pocket ||| period åstadkomma datorindustrin fenomenal bedrift år placera personlig dator skrivbord ficka
however mainstream computing wall industry undertake new mission put personal parallel supercomputer desk home pocket ||| år hejda utveckling abrupt varvid industri sätta ny mål placera personlig parallell superdator skrivbord hem ficka
complete transition parallel computing mainstream form factor arrival multicore tablet smartphone ||| år övergång komplett även surfplatta mobiltelefon få multicore-processorer
build deliver mainstream quad- eight-core tablet even last single-core gaming console become multicore ||| snart komma process leda fyra åttakärniga processor även ordinär surfplatta sista spelkonsol gå flera kärna
first time history computing mainstream hardware be no longer single-processor machine ||| en gång historia därmed vanlig datorplattformar inte lång utgöra von-neumann-maskiner processorkärna
power temperature join performance first-class design goal ||| effekt temperatur numera lika viktig designmål prestanda
computing platform now strive highest performance watt ||| högprestanda-datorer konstruera nu god prestanda watt
course look design current multicore system eye how design be likely evolve next decade ||| kurs behandla hur dag multicore-system konstruerad blick hur framtida system bygga nära decennium
also cover historical origin many design strategy re-emerge current system different form context e.g. datum parallelism vliw parallelism thread-level parallelism ||| gå också historisk ursprung många designstrategier återuppstå nutida system annan form sammanhang exempel dataparallellism vliw-parallellism parallellism trådnivå
course cover architectural technique design parallel computer particular technique support major programming paradigm message passing share memory datum parallelism explicit instruction-level parallelism modern combination such combined thread-and-data parallelism support gpus ||| kurs behandla arkitekturtekniker konstruktion parallell dator särskilt tekniker stödja viktig programmeringsmodeller message passing delad minne dataparallellism explicit instruktionsparallellism modern kombination modell exempel kombinera tråd dataparallellism använda
content be divide several part ||| stoff indela flera tematisk del
study highlight context strategic approach propose develop then context idea design principle reappear today ||| betoning ligga sammanhang där metod föreslå utvecklas därefter sammanhang idé princip tillämpa idag
order motivate deeper discussion different class parallel computer third part cover canonical step design efficient parallel software ||| motivera djup diskussion olik klass parallell datorsystem täcka tre del traditionell steg konstruktion paralllell mjukvara
important concept decompose sequential program parallel thread parallel datum balance load parallel architectural resource reduce communication synchronize parallel activity e.g. parallel thread ||| uppdelning program parallell tråd parallell data lastbalansering tillgänglig resurs minimering kommunikation olik del samt synkronisering parallell aktivitet exempelvis tråd viktig princip
lab assignment specifically focus shared-memory machine highlight ramification different memory coherence strategy different kind workload ||| laborationsuppgifter röra specifik arkitektur delad minne fokus skilja strategi minneskoherens inverkan olik lastfall
fourth part focus design principle share memory small-scale parallel computer share memory e.g. design principle multi-core microprocessor support thread-level parallelism ||| fyra del behandla designprinciper liten parallell dator delad minne exempel princip modern multicore-processorer stöd trådparallellism
important concept cover be cache coherence consistency ||| viktig koncept cache-koherens konsistens
study bus-based snoopy-cache protocol inclusion property multi-phase protocol ||| studera buss-baserade cache-protokoll flerfasprotokoll
fifth part deal scalability parallel computer i.e. architectural technique scale number processor higher count specifically respect cache coherence protocol ||| fem del behandla skalbarhet parallell dator säga ariktetkurtekniker öka antal processor parallell system speciell avseende cache-koherensprotokollen
sixth part deal interconnection network essential component chip multiprocessor scalable parallel computer system ||| sex del handla kommunikationsnätverk essentiell del chip-multiprocessorer skalbara parallell datorsystem
concept cover route switching topology design scalable interconnect ||| behandla routing switching val topologi skalbara nätverk
common thread run part be discussion cost tradeoff respect performance power energy verifiability programmability maintainability ||| genomgående tema kurs del avvägning prestanda effektbehov energibehov verifierbarhet programmerbarhet underhåll
second unifying theme be memory bottleneck importance efficient resource management ||| två sammanhålla tema minnesflaskhalsen vikt effektiv resurshantering
example project topic include multithread relax memory consistency model prefetching memory access scheduling ||| exempel ämne multitrådshantering svag modell minneskonsistens prefetching schemaläggning minnesåtkomster
write project rather conventional exam ||| skriftlig projekt flera vecka snarare konventionell tentamen
student master terminology key concept parallel computer architecture order follow research advance field ||| student behärska terminologi nyckelbegrepp parallelldatorarkitektur följa fält utveckling
understand principle parallel computer organization especially principle design communication substrate support different programming model ||| förstå princip parallelldatororganisation särskilja konstruktionsprinciper kommunikationssubstratet stödja olik programmeringsmodeller
understand different model parallelism historical perspective ||| förstå olik modell parallellism historisk perspektiv
exhibit basic skill design software parallel computer understanding issue involve design efficient parallel software ||| uppvisa grundläggande färdighet konstruktion mjukvara parallell dator förståelse övervägande påverka effektivitet parallell programvara
student strengthen communication skill demonstrate learning participate lecture lab smaller project-group meeting ||| specifik student förbättra kommunikativ förmåga demonstrera insikt delta föreläsning laboration projektmöten
complete homework assignment demonstrate breadth learn ||| inlämningsuppgifter visa breddförståelse
write research survey collaboration student project group cooperation instructor demonstrate depth learn parallel computer design subject choose ||| grupp ledning instruktör författa rapport sammanfatta forskningsläget välja delområde visa djupförståelse område
course dat105 computer architecture equivalent require ||| kurs datorarkitektur motsvarande krävas
course tda383 concurrent programming be recommend ||| kurs programmering rekommendera
course intend give fundamental knowledge analysis synthesis optimization combinatorial sequential digital circuit ||| kurs avse ge grundläggande kunskap analys syntes optimering digital kombinatorisk nät sekvensnät
course also present technology use implement such circuit ||| kurs ge också inblick teknologi nät implementera
part course student introduce modern computer-based design tool cad learn basics hardware description language ||| kurs få student bekanta modern datorbaserad konstruktionsverktyg samt lära grund maskinvarubeskrivande språk
logic minimization ||| boolesk algebra logikminimering
||| krets digital aritmetik
memory ||| minneselement
combinational circuit ||| kombinatorisk krets
sequential circuit finite state machine ||| sekventiell krets tillståndsmaskiner
technologies digital circuit ||| teknologi realisering digital konstruktion
asynchronous circuit ||| asynkron krets
timing power consumption digital circuit ||| snabbhet effektförbrukning digital krets
test design testing ||| test konstruktion test digital krets
hardware description language digital circuit ||| hårdvarubeskrivande språk konstruktion digital krets
hardware design test evaluation simple processor ||| hårdvarukonstruktion test utvärdering enkel digital processor
laboratory work carry group normally student ||| laboration utföra normal 2-mannagrupper
knowledge understanding ||| kunskap förståelse
recognize function use technology ||| översiktlig beskriva funktion användning rekonfigurerbar logik asic teknologi
list factor affect timing power area digital circuit ||| ange faktor påverka snabbhet effektförbrukning erforderlig chipyta implementation digital logik
skill ability ||| färdighet förmåga
minimize boolean function derive canonical form ||| minimera boolesk funktion uttrycka kanonisk form
measure critical path delay digital circuit ||| beräkna kritisk väg digital krets
use describe combinatorial sequential circuit ||| använda vhdl verktyg konstruktion digital krets kombinatorisk sekventiell
use modern tool perform simulation synthesis implementation digital circuit describe ||| använda modern datorbaserad kontruktionsverktyg simulering syntes implementering digital krets beskriva m hj vhdl
use fpga technology implement digital hardware design ||| använda fpga teknologi implementera digital hårdvarukonstruktion minimera antal nödvändig tillstånd digital tillståndsmaskin tillståndskodning
judgment approach ||| värderingsförmåga förhållningssätt
lecture lab ||| föreläsning laboration
course aim convey how modern computer system be construct how hardware module interact eachother low level software ||| kurs ha syfte förmedla hur modern datorsystem uppbygga hur hårdvarudelar samverka mjukvara låg nivå
main focus be performance interaction low-level software ||| stor vikt lägga prestandaaspekter samverkan mjukvara
demonstration work solution hand-in task ||| demonstration inlämningsuppgift
write exam ||| tentamen
read write simple assembly program typical three-address register machine ||| läsa skriva enkel assemblerprogram typisk tre-adress register maskin
identify basic type conflict occur result pipeline datapath processor ||| identifiera grundläggande typ konflikt uppkomma följd pipelining processor dataväg
describe simple method avoid work conflict describe limitation simple method estimate influence performance ||| peka ut beskriva enkel metod hantera konflikt identifiera begränsning metod samt uppskatta prestandainverkan
use arithmetic instruction integer floating-point correct way ||| korrekt sätt använda instruktion utföra aritmetisk operation flyttal heltal
describe function performance influence memory hierarchy include cache main memory virtual memory include different parameter size block size associativity ||| redogöra funktion uppskatta prestandapåverkan minneshierarki omfatta cacheminnen huvudminne virtuell minne använda olik parameterar total storlek blockstorlek associativitet etc olik minnesnivåerna
compute performance simple load case i/o system particularly consist processor bus hard disk ||| beräkna prestanda enkel lastfall i/o-system speciell system bestå processor buss skivminne
identify performance bottleneck system ||| identifiera prestandamässig flaskhals sån system
explain how computer system performance define measure ||| förklara hur datorsystem prestanda definiera mäta
estimate influence parameter change system performance above ||| uppskatta parameterändringars inverkan system prestanda ovan
give overview architecture multicore processor ||| översiktlig beskriva komponent princip använda konstruktion fler-kärniga processor
present carry work brief write report ||| genomföra enkel samoptimering mjukvara assemblernivå hårdvaruparametrar uppnå god möjlig prestanda kostnadsförhållande viss funktion samt redovisa kort skriftlig rapport
laborative part end hand-in task ||| laborativ del avsluta inlämningsuppgift
computer network become inherent increasingly important part many technical area today ||| nätverk dator bli alltmer naturlig viktig beståndsdel många teknikområden
course focus part datum communication practice engineer normally encounter daily work ||| kurs inrikta aspekt datakommunkation verksam ingenjör komma kontakt yrkesarbete
be basic course offer introductory presentation datum communication computer network ||| grundkurs bred inriktning område datakommunikation
pass whole course assignment write exam pass ||| godkänna kurs krävas godkänna skriftlig tentamen samt student få godkänna obligatorisk laboration inlämningsuppgift
final grade scale u/3 -5 base exam result ||| slutbetyget skala ge basera tentamen resultat
have basic knowledge skill field datum communication computer network ||| ha grundlägggande kunskap färdighet område datakommunikation datornätverk
have good knowledge reference model computer communication term function service protocol ||| ha god kännedom referensmodeller datakommunikation lager avseende funktion tjänst protokoll
have good knowledge principle protocol standard tcp/ip-based network application base ||| ha god kännedom princip protokoll standard tcp ip-baserade nätverk bygga
have good understanding limitation respect service warranty connection newly develop service ||| ha god förståelse internet begränsning avseende servicegarantier samband nyutvecklad tjänst
explain how different type computer network construct relative transmission medium' characteristic bandwidth requirement code method function error flow control ||| redogöra hur olik typ datornätverk uppbygga förhållande transmissionsmediets egenskap krav bandbredden kodningsmetoder funktion fela flödeskontroll
be able seek deeper knowledge individual standard protocol datum communication field ||| söka djup kunskap enskild standard protokoll datakommunikationsområdet
be able implement simple application-layer protocol start specification apply communication socket ||| använda nätverksanalysprogram analysera datatrafik lokal nätverk anslutning internet
have basic practical skill configuration local network ||| ha grundläggande praktisk färdighet konfiguration lokal nätverk
practical laboration be include help student understand protocol practically use network equipment ||| kurs ingå även frivillig moment webb-baserade självstudium
student have good understanding computer organization course eda451 digital system computer equivalent ||| student ha god förståelse dator uppbyggnad kurs datorteknik motsvarande
course programming e.g. be prerequisite ||| programmeringskurs t_ex t_ex:04 krav
knowledge basic probability theory random variable elementary graph theory shortest path be advantage also acquire course complementary reading ||| kunskap grundläggande sannolikhetsteori stokastisk variabel elementär grafteori fördel också förvärva kurs komplettera studie
computer network become inherent increasingly important part many technical area today ||| nätverk dator bli alltmer naturlig viktig beståndsdel många teknikområden
course focus part datum communication practice engineer normally encounter daily work ||| kurs inrikta aspekt datakommunkation verksam ingenjör komma kontakt yrkesarbete
be basic course offer introductory presentation datum communication computer network ||| grundkurs bred inriktning område datakommunikation
pass whole course assignment write exam pass ||| godkänna kurs krävas godkänna skriftlig tentamen samt student få godkänna obligatorisk laboration inlämningsuppgift
final grade scale u/3 -5 base exam result ||| slutbetyget skala ge basera tentamen resultat
have basic knowledge skill field datum communication computer network ||| ha grundlägggande kunskap färdighet område datakommunikation datornätverk
good knowledge reference model computer communication term function service protocol ||| ha god kännedom referensmodeller datakommunikation lager avseende funktion tjänst protokoll
have good knowledge model internet's structure architecture ||| ha god kännedom ip-modellen internet uppbyggnad arkitektur bearbeta grundläggande ip-adresseringsplan intranät
have good understanding limitation respect service warranty connection newly develop service ||| ha god förståelse internet begränsning avseende servicegarantier samband nyutvecklad tjänst
explain how different type computer network construct relative transmission medium' characteristic bandwidth requirement code method function error flow control ||| redogöra hur olik typ datanätverk uppbygga förhållande transmissionsmediets egenskap krav bandbredden kodningsmetoder funktion fela flödeskontroll
be able seek deeper knowledge individual standard protocol datum communication field ||| söka djup kunskap enskild standard protokoll datakommunikationsområdet
be able implement simple application-layer protocol start specification apply communication socket ||| använda nätverksanalysprogram analysera datatrafik lokal nätverk anslutning internet
have basic practical skill configuration local network ||| ha grundläggande praktisk färdighet konfiguration lokal nätverk
student have good understanding computer organization course eda451 digital system computer equivalent ||| student ha god förståelse dator uppbyggnad kurs datorteknik motsvarande
course programming e.g. be prerequisite ||| programmeringskurs t_ex t_ex:04 krav
knowledge basic probability theory random variable elementary graph theory shortest path be advantage also acquire course complementary reading ||| kunskap grundläggande sannolikhetsteori stokastisk variabel elementär grafteori fördel också förvärva kurs komplettera studie
computer network cover range sub-specialty include computer communication network concept protocol network security bsd socket api distribute fault-tolerance method ||| datornätverk täcka rad underliggande område så datorkommunikation nätverkskoncept nätverksprotokoll nätverkssäkerhet socket distribuera feltolerans metod
mastery computer network involve theory practice design implementation use network protocol service ||| bemästra datornätverk krävas teoretisk praktisk kunskap utformning genomförande användande nätverksprotokoll tjänst
aim course be learn design analyze network protocol gain knowledge exist communication network include support system protocol fundamental task method datum communication network ||| syfte kurs lära utforma analysera nätverksprotokoll inhämta kunskap befintlig kommunikationsnät stödsystem protokoll grundläggande funktion metod datakommunikationsnät
experience network orient programming be part course ||| erfarenhet nätverksorienterad programmering ge väsentlig del kurs
course offer learn experience involve hands-on experimentation analysis reinforce student understanding concept application real-world problem ||| kurs innehålla praktisk experiment analys avse öka student förståelse central begrepp denna återspegling verklig problem
several laboratory experiment give involve api programming fault-tolerance network system internet interconnection service practical perspective protocol design analysis strong emphasis self-stabilizing algorithm ||| laboration träna api programmering feltoleranta nätverk internet konfiguration tjänst praktisk perspektiv samt protokoll stark betoning självstabiliserande algoritm
course provide student ability understand fundamental issue design method computer network protocol ||| kurs innehåll ge därför förståelse grundläggande fråga uppkomma utformning datornätverk olik datornätverksprotokoll
skill ability ||| färdighet förmåga visa förmåga systematisk definiera analysera datornätverk form kommunikationsgrafer distribuera system
be able design develop own network-oriented program then test demonstrate lab ||| därför konstruera utveckla egen nätverk därefter testa demonstrera laboratorium
also expect design distribute algorithm computer network show why work ||| också utforma distribuera algoritm datornätverk visa varför fungera
lecture exercise home assignment laboratory assignment ||| föreläsning övning hemuppgift laboration
take at least course computer programming ||| klara minst kurs programmeringsteknik
course aim learn software design development use approach principle theory practice ||| kurs syfta lära mjukvara design utveckling hjälp metod princip teori praktik
course cover extreme programing process project management ||| kurs behandla process xp extreme programming projektledning
write exam maximum point ||| skriftlig tentamen maximal poäng
minimum point pass project require ||| godkänna krävas liten poäng godkänna projekt
lead agile project ||| leda agilt projekt
form organic team ||| bilda organisk team
detail schedule ||| arbeta detalj schema
be part programming pair ||| vara del programmeringspar
understand consequence collective ownership code ||| förklara konsekvens kollektiv ägande kod
master code centric case tool ||| bemästra kod-centrerat case-verktyg
use test drive development ||| använda testdriven utveckling
refactor program ||| refactor program
conduct incremental planning use user story ||| genomföra inkrementell planering hjälp användarbeskrivningar
limit assignment order have sustainable pace ||| begränsa uppdrag få hållbar arbetstakt
develop program use small frequent iteration ||| utveckla program hjälp liten frekvent iteration
be part xp team ||| vara del xp-team
be eligible course student ||| behörighet kurs krävas minst
have bachelor degree equivalent include successfully complete course programming e.g. dat042 dat050 dat055 dat170 tda545 tda550 ooexempel även programmering ok equivalent ||| kandidatexamen programvaruteknik datavetenskap motsvarande an godkänna kurs programmering t.ex. motsvarande
successfully complete course practical software development software engineering project e.g. dat255 software engineering project ||| godkänna kurs praktisk mjukvaruutveckling programvaruteknik projekt t.ex. software engineering project
real-time system play vital role many application domain include drive-by-wire automotive system intelligent traffic control system banking system autonomous robot ||| realtidssystem spela viktig roll många tillämpning drive-by-wire-system fordon intelligent trafikstyrsystem banksystem autonom robot
many real-time application system design multiple processor order meet impose application constraint ||| tillämpning system konstruera med_flera:09 processor möta uppsätta prestandakraven
course cover follow topic ||| kurs behandla följande ämne
background motivation definition real-time computing system ||| bakgrund behov definition realtidssystem
characteristic real-time system application constraint design method task model run-time mechanism architecture ||| egenskap realtidssystem tillämpningskrav konstruktionsmetoder processmodeller exekveringsmodeller arkitektur
evaluation real-time system performance measure evaluation methodology ||| utvärdering realtidssystem prestandamått metod utvärdering
multiprocessor scheduling problem definition terminology algorithm ||| schemaläggning enkel multiprocessorsystem problemformulering terminologi algoritm
complexity theory np-completeness context real-time scheduling ||| komplexitetsteori np-kompletta problem realtidsschemaläggning
real-time communication protocol end-to-end delay guarantee ||| realtidskommunikation protokoll fördröjningsgarantier
fault-tolerance technique real-time system model algorithm architecture ||| metod feltolerans realtidssystem modell algoritm arkitektur
distribute clock synchronization ||| metod distribuera klocksynkronisering
estimation worst-case task execution time ||| härledning värsta-fallets exekveringstid program
homework assignment report submission oral exam voluntary sit-down exam ||| hemuppgift rapportinlämning muntlig examen frivillig skriftlig tentamen
final grade be weighted sum ||| slutlig betyg väga samman
course student be able ||| avsluta kurs student
formulate requirement computer system use time safety critical application ||| formulera krav datorsystem tid säkerhetskritiska tillämpning
master terminology scheduling complexity theory ||| behärska terminologi använda teori schemaläggning beräkningskomplexitet
describe principle mechanism use scheduling task execution datum communication real-time system ||| redogöra princip mekanism använda schemaläggning processexekvering datakommunikation realtidssystem
derive performance be familiar theoretical performance limitation give real-time system ||| härleda prestanda känna teoretisk prestandabegränsningarna given realtidssystem
course be organize series lecture ||| kurs utgöra föreläsningsserie
weekly consultation session offer assistance regard question problem relate homework assignment ||| hjälp ha elev tillgång veckovis konsultationspass erbjuda hjälp fråga problem relatera hemuppgift
preparatory course real-time system eda222 equivalent require ||| förberedande kurs realtidssystem likvärdig kurs krävas
course algorithm computer architecture be strongly recommend ||| kurs algoritm datorarkitektur rekommendera stark
essential element concept digital technology different number system ||| digitalteknikens grundläggande element begrepp olik talsystem
use construct combinatorial network synchronous sequential circuit ||| algebra användning konstruktion kombinatorisk nät synkron sekvensnät
computer' digital building block datum path controller memory input output device ||| dator digital byggblock dataväg styrenhet minne in enhet
traditional processor architecture data-path control unit instruction set synchronously operate digital machine ||| traditionsenlig processor uppbyggnad dataväg styrenhet instruktionsuppsättning synkron arbeta digitalmaskin
coding machine language assembly language ||| kodning maskinspråk assemblerspråk
pass course student pass write examination laboratory work ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
base write examination final grade be ||| basera tentamensresultatet ge betyg
describe computer structure organisation ||| beskriva dator uppbyggnad funktion
student be able ||| betyda exempel
give block-level description how data-path register file arithmetic logic unit connect ||| beskriva blocknivå hur styrenhet dataväg registerfil aritmetik logikenhet koppla samman centralenhet
explain architectural concept such accumulator architecture stack architecture pipeline ||| förklara begrepp ackumulatorarkitektur risc cisc stackarkitektur pipeline
describe analyze/design central processing unit' basic part ||| beskriva analysera konstruera centralenhet grundläggande del
student be able ||| betyda exempel
analyze design single alu design control signal sequence basic alu operation ||| analysera konstruera enkel utforma styrsignalsekvenser grundläggande alu-operationer
analyze single datum path construct design control signal sequence transfer register memory ||| analysera enkel dataväg samt konstruera utforma styrsignalsekvenser överföring register
explain how instruction create control signal sequence ||| förklara hur instruktion bygga upp styrsekvenser
student be able use example explain describe instruction format instruction decoding instruction execution ||| betyda exempel förklara exempel beskriva instruktionsformat instruktionsavkodning instruktionsutförande
describe analyze control unit ||| beskriva analysera automatisk styrenhetens funktion uppbyggnad
student be able ||| betyda exempel
describe how control signal sequence realize hard-wired logic micro-programmed logic ||| beskriva hur styrsignalsekvenser realisera fast koppla logik mikroprogrammerad logik
analyze design control signal sequence instruction semantics ||| analysera konstruera styrsignalsekvenser utgående instruktion semantik
explain primary memory' core function describe analyze design realize main memory' connection cpu ||| förklara primärminne grundläggande funktion beskriva analysera konstruera primärminne anslutning centralenhet
student be able ||| betyda exempel
describe different type primary memory such rom prom flash sram dram explain usefulness type different purpose ||| beskriva olik typ primärminne statisk dynamisk ram förklara respektive minnestyps användbarhet olik ändamål
explain concept memory hierarchy ||| förklara begrepp minneshierarki
describe analyze realize address decode logic primary memory ||| beskriva analysera konstruera avkodningslogik primärminne digital komponent
describe analyze realize simple memory address io digital component ||| beskriva analysera konstruera enkel minnesadresserad io digital komponent
explain/describe how bus link cpu memory ||| förklara beskriva hur centralenhet minne koppla samman hjälp dator bussystem
student be able describe synchronous asynchronous bus protocol multiplex ||| betyda exempel beskriva synkron asynkron bussprotokoll multiplexteknik
describe basic exception handling computer system ||| beskriva elementär undantagshantering datorsystem
student be able ||| betyda exempel
explain various hardware software exception handling such restart software-initiated exception externally generate exception interrupt ||| förklara undantagstyper återstart programvaruinitierade undantag extern generera undantag avbrott
describe how restart software-initiated exception perform controller ||| beskriva hur återstart programvaruinitierade undantag utföra styrenheten
describe how interrupt be handle cpu ||| beskriva hur avbrott hantera centralenhet
digital technology describe use binary code ||| digitalteknik beskriva använda binär kod
student be able ||| betyda exempel
convert number decimal binary hexadecimal representation ||| utföra omvandling tal decimal binär hexadecimal representation
perform addition subtraction multiplication division binary integer ||| utföra addition subtraktion binär heltal
describe analyze computer' structure programmable digital system ||| beskriva analysera dator uppbyggnad programmerbar digital system
combinatorial circuit consider here consist mainly simple circuit such multiplexer de-multiplexer full adder bit shifter etc. ||| kombinatorisk nät här avse utgöra huvudsakligen enkel nät väljare fördelare heladderare bitskiftare etc.
sequential circuit consider here consist memory element counter ||| sekvensnät här avse utgöra minneselement räknare
program assembler ||| assemblerprogrammering
explain store program principle ||| förklara lagra program princip
student be able describe how sequence machine instruction store memory be execute ||| betyda exempel beskriva hur sekvens maskininstruktioner,som ordna sekvensiellt minne utföra
describe programmer' model machine ||| beskriva programmerare bild maskin dvs instruktionsuppsättning adresseringssätt
student be able describe processor register set explain various type instruction group address mode describe example ||| betyda exempel förklara olik allmängiltig typ instruktionsgrupper adresseringssätt beskriva exempel
describe analyze design simple assembly language program organize subroutine ||| beskriva analysera konstruera enkel assemblerprogram organiserad subrutiner
student be able ||| betyda exempel
structure program use subroutine stack management ||| strukturera program hjälp subrutiner stackhantering
write small routine include software-controlled interrupt-driven input output delay ||| skriva liten rutin innefatta programstyrd avbrottsstyrd in utmatning fördröjning
schedule teaching consist lecture demonstration supervised coding simulation exercise ||| schemalägga undervisning bestå föreläsning demonstration handleda simulering kodningsövningar
also supervise laboratory session student require prepare ||| dessutom utföra handleda obligatorisk laboration där förkunskapskontroll genomföra laboration
course student design increasingly complex digital building block digital computer system ||| kurs konstruera student stor stor digital byggblock ingående digital system datorsystem
theory present lecture demonstration ||| teori inhämta föreläsning demonstration
student construct building block test design help simulator exercise ||| student konstruera byggblock testa konstruktion hjälp simulator simuleringsövningar
building block subsequently realize hardware lab session ||| därefter implementera student byggblock hårdvara laboration
realization complete link building block computer programming ||| konstruktionsarbetet avsluta sammankoppla byggblocken dator programmera
essential element concept digital technology different number system ||| digitalteknikens grundläggande element begrepp olik talsystem
use construct combinatorial network synchronous sequential circuit ||| algebra användning konstruktion kombinatorisk nät synkron sekvensnät
computer' digital building block datum path controller memory input output device ||| dator digital byggblock dataväg styrenhet minne in enhet
traditional processor architecture data-path control unit instruction set synchronously operate digital machine ||| traditionsenlig processor uppbyggnad dataväg styrenhet instruktionsuppsättning synkron arbeta digitalmaskin
coding machine language assembly language ||| kodning maskinspråk assemblerspråk
pass course student pass write examination laboratory work ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
base write examination final grade be ||| basera tentamensresultatet ge betyg
describe computer structure organisation ||| dator uppbyggnad funktion beskriva dator uppbyggnad funktion
student be able ||| betyda exempel
give block-level description how data-path register file arithmetic logic unit connect ||| beskriva blocknivå hur styrenhet dataväg registerfil aritmetik logikenhet koppla samman centralenhet
explain architectural concept such accumulator architecture stack architecture pipeline ||| förklara begrepp ackumulatorarkitektur risc cisc stackarkitektur pipeline
describe analyze design central processing unit' basic part ||| beskriva analysera konstruera centralenhet grundläggande del
student be able ||| betyda exempel
analyze design single alu design control signal sequence basic alu operation ||| analysera konstruera enkel utforma styrsignalsekvenser grundläggande alu-operationer
analyze single datum path construct design control signal sequence transfer register memory ||| analysera enkel dataväg samt konstruera utforma styrsignalsekvenser överföring register
explain how instruction create control signal sequence ||| förklara hur instruktion bygga upp styrsekvenser
student be able use example explain describe instruction format instruction decoding instruction execution ||| betyda exempel förklara exempel beskriva instruktionsformat instruktionsavkodning instruktionsutförande
describe analyze control unit ||| beskriva analysera automatisk styrenhetens funktion uppbyggnad
student be able ||| betyda exempel
describe how control signal sequence realize hard-wired logic micro-programmed logic ||| beskriva hur styrsignalsekvenser realisera fast koppla logik mikroprogrammerad logik
analyze design control signal sequence instruction semantics ||| analysera konstruera styrsignalsekvenser utgående instruktion semantik
explain primary memory' core function describe analyze design realize main memory' connection cpu ||| förklara primärminne grundläggande funktion beskriva analysera konstruera primärminne anslutning centralenhet
student be able ||| betyda exempel
describe different type primary memory such rom prom flash sram dram explain usefulness type different purpose ||| beskriva olik typ primärminne statisk dynamisk ram förklara respektive minnestyps användbarhet olik ändamål
explain concept memory hierarchy ||| förklara begrepp minneshierarki
describe analyze realize address decode logic primary memory ||| beskriva analysera konstruera avkodningslogik primärminne digital komponent
describe analyze realize simple memory address io digital component ||| beskriva analysera konstruera enkel minnesadresserad io digital komponent
explain describe how bus link cpu memory ||| förklara beskriva hur centralenhet minne koppla samman hjälp dator bussystem
student be able describe synchronous asynchronous bus protocol multiplex ||| betyda exempel beskriva synkron asynkron bussprotokoll multiplexteknik
describe basic exception handling computer system ||| beskriva elementär undantagshantering datorsystem
student be able ||| betyda exempel
explain various hardware software exception handling such restart software-initiated exception externally generate exception interrupt ||| förklara undantagstyper återstart programvaruinitierade undantag extern generera undantag avbrott
describe how restart software-initiated exception perform controller ||| beskriva hur återstart programvaruinitierade undantag utföra styrenheten
describe how interrupt be handle cpu ||| beskriva hur avbrott hantera centralenhet
digital technology ||| digitalteknik
describe use binary code ||| beskriva använda binär kod
describe analyze computer' structure programmable digital system ||| beskriva analysera dator uppbyggnad programmerbar digital system
student be able describe analyze construct combinatorial sequential circuit use build cpu ||| betyda exempel beskriva analysera konstruera sån kombinatorisk nät sekvensnät typisk använda bygga dator centralenhet
combinatorial circuit consider here consist mainly simple circuit such multiplexer de-multiplexer full adder bit shifter etc. ||| kombinatorisk nät här avse utgöra huvudsakligen enkel nät väljare,fördelare heladderare bitskiftare etc.
sequential circuit consider here consist memory element counter ||| sekvensnät här avse utgöra minneselement räknare
program assembler ||| assemblerprogrammering
explain store program principle ||| förklara lagra program princip
student be able describe how sequence machine instruction store memory be execute ||| betyda exempel beskriva hur sekvens maskininstruktioner,som ordna sekvensiellt minne utföra
describe programmer' model machine ||| beskriva programmerare bild maskin dvs instruktionsuppsättning adresseringssätt
student be able describe processor register set explain various type instruction group address mode describe example ||| betyda exempel förklara olik allmängiltig typ instruktionsgrupper adresseringssätt beskriva exempel
describe analyze design simple assembly language program organize subroutine ||| beskriva analysera konstruera enkel assemblerprogram organiserad subrutiner
student be able ||| betyda exempel
structure program use subroutine stack management ||| strukturera program hjälp subrutiner stackhantering
write small routine include software-controlled interrupt-driven input output delay ||| skriva liten rutin innefatta programstyrd avbrottsstyrd in utmatning fördröjning
schedule teaching consist lecture demonstration supervised coding simulation exercise ||| schemalägga undervisning bestå föreläsning demonstration handleda simulering kodnings- övning
also supervise laboratory session student require prepare ||| dessutom utföra handleda obligatorisk laboration där förkunskapskontroll genomföra laboration
course student design increasingly complex digital building block digital computer system ||| kurs konstruera student stor stor digital byggblock ingående digital system datorsystem
theory present lecture demonstration ||| teori inhämta föreläsning demonstration
student construct building block test design help simulator exercise ||| student konstruera byggblock testa konstruktion hjälp simulator simuleringsövningar
building block subsequently realize hardware lab session ||| därefter implementera student byggblock hårdvara laboration
realization complete link building block computer programming ||| konstruktionsarbetet avsluta sammankoppla byggblocken dator programmera
software development assembly language testing troubleshooting ||| programutveckling assemblerspråk test felsökning
structure assembler basic code generation ||| strukturera assemblerprogrammering grund kodgenerering
first level system programming ie how computer program boot power on handling different type exception such internal error event interrupt ||| en nivå systemprogrammering dvs. hur dator programmera för start spänningstillslag hantering olik typ undantag så som intern fel händelse avbrott
program device parallel input output time management programming timer ||| programmering krets parallell in utmatning tidshantering programmering räknarkretsar
basics computer communication programming device serial communication ||| grund datorkommunikation programmering krets seriekommunikation
moreover simple time-sharing system assembly language special emphasis use peripheral circuit be implement ||| dessutom implementera enkel tidsdelningssystem assemblerspråk speciell tonvikt användning periferikretsar
examination base write exam approve laboratory exercise ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
base exam result grade give ||| basera tentamensresultatet ge betyg
write simple assembly language program use select architecture' instruction set ||| skriva enkel assemblerprogram användande välja arkitektur instruktionsuppsättning
write simple machine orient c program use programming language' datum type control structure ||| skriva enkel maskinorienterade c-program användande programspråk datatyper styrstrukturer
describe assembler equivalent typical programming structure ||| beskriva motsvarighet assembler typisk programstrukturer
apply tool course develop program ||| utnyttja kurs använda verktyg programutveckling adekvat sätt
contribute construction programming simple embedded system give component ||| medverka konstruktion programmering enkel inbyggd system given komponent
construct system generate various type exceptional event internal exception interrupt restart ||| konstruera system innefatta olik typ undantag intern undantag avbrott återstart
describe illustrate few basic type peripheral use ||| beskriva exemplifiera olik typ digital kringkomponenter användning
course student design progressively bigger bigger building block software c assembler ||| kurs konstruera elev stor stor programblock assembler
theory acquire lecture demonstration ||| teori inhämta föreläsning demonstration
student design block then carry test aid simulator simulation exercise ||| elev konstruera programoch test hjälp simulator simuleringsövningar självstudium
preparation laboratory exercise student finally adapt software order enable hardware verification function ||| laboration anpassa elev program så funktion dessutom verifiera hårdvara
software development assembly language testing troubleshooting ||| programutveckling assemblerspråk test felsökning
structure assembler basic code generation ||| strukturera assemblerprogrammering grund kodgenerering
first level system programming ie how computer program boot power on handling different type exception such internal error event interrupt ||| en nivå systemprogrammering dvs. hur dator programmera för start spänningstillslag hantering olik typ undantag så som intern fel händelse avbrott
program device parallel input output time management programming timer ||| programmering krets parallell in utmatning tidshantering programmering räknarkretsar
basics computer communication programming device serial communication ||| grund datorkommunikation programmering krets seriekommunikation
moreover simple time-sharing system assembly language special emphasis use peripheral circuit be implement ||| dessutom implementera enkel tidsdelningssystem assemblerspråk speciell tonvikt användning periferikretsar
examination base write exam approve laboratory exercise ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
write simple assembly language program use select architecture' instruction set ||| skriva enkel assemblerprogram användande välja arkitektur instruktionsuppsättning
write simple machine orient c program use programming language' datum type control structure ||| skriva enkel maskinorienterade c-program användande programspråk datatyper styrstrukturer
describe assembler equivalent typical programming structure ||| beskriva motsvarighet assembler typisk programstrukturer
apply tool course develop program ||| utnyttja kurs använda verktyg programutveckling adekvat sätt
contribute construction programming simple embedded system give component ||| medverka konstruktion programmering enkel inbyggd system given komponent
construct system generate various type exceptional event internal exception interrupt restart ||| konstruera system innefatta olik typ undantag intern undantag avbrott återstart
describe illustrate few basic type peripheral use ||| beskriva exemplifiera olik typ digital kringkomponenter användning
course student design progressively bigger bigger building block software c assembler ||| kurs konstruera elev stor stor programblock assembler
theory acquire lecture demonstration ||| teori inhämta föreläsning demonstration
student design block then carry test aid simulator simulation exercise ||| elev konstruera programoch test hjälp simulator simuleringsövningar självstudium
preparation laboratory exercise student finally adapt software order enable hardware verification function ||| laboration anpassa elev program så funktion dessutom verifiera hårdvara
course cover underlie principle technique network communication security ||| kurs täcka underliggande princip tekniker nätverk kommuniktionssäkerhet god förkunskap datakommunikation därför krav
course cover many topic relate communication network security ||| kurs täcka många olik ämne tekniker säkra system
network attack encryption random number generation ||| nätverksattacker kryptering vikt bra slumptalsgenerering
analysis weakness attack common protocol such ||| analys svaghet attack vanlig protokoll
denial service dos attack host network scanning operating system fingerprint ||| denial service attack nätverksscanning operating system fingerprinting
access control authentication mechanism password key distribution ||| accesskontroll autentiseringsmekaniser lösenord nyckeldistribution
identity management certificate certificate revocation ||| identity management certifikat
security protocol such ||| genomgång protokoll designa säkerhet
security wireless network wep wpa ||| säkerhet trådlös nätverk
network design firewall proxy filter ||| nätverksdesign brandväggar proxies egress filtering
virtual private network tunnel protocol network segmentation remote access ||| virtuell privat nätverk tunnling nätverkssegmentering remote access
link level security technology security ||| link level security säkerhet
write exam pass laboratory exercise ||| skriftlig examen godkänna laboration
detailed knowledge ability critically analyse design secure network application system ||| god kunskap hur kritisk granska designa säker nätverk applikation system
have fundamental understanding make system vulnerable be able predict new attack method become reality ||| grundläggande förståelse svaghet kommunicera system ha förutse potentiell problem olik protokoll
have enough knowledge evaluate protocol ability draw conclusion level security offer ||| grundläggande kunskap hur protokoll utvärdera utvärdera säkerhet protokoll förvänta erbjuda
understand impact selection different protocol security architecture have application system ||| förståelse betydelse nätverkssäkerhetsproblem ha applikation hel system säkerhet
have understanding research work field read conference research report related area ||| komma kontakt forskningsaktiviteter område läsa aktuell konferens forskningsrapporter område
course consist series lecture laborative exercise ||| kurs bestå föreläsning laboration
datum structure comprise fundamental component most modern software product ||| algoritm datastrukturer utgöra fundamental byggsten mången modern programvara
knowledge skill technique construction analysis algorithm be important tool construction correct efficient program ||| kunskap färdighet tekniker konstruktion analys algoritm viktig verktyg produktion korrekt effektiv program
knowledge datum abstraction datum structure be important construction use maintenance adaptable reusable program component ||| förtrogenhet begrepp dataabstraktion datastruktur nödvändig konstruktion användning underhåll förändringsbara återanvändbara programkomponenter
course give knowledge skill construction use algorithm datum structure introduction various technique analysis algorithm together insight advantage use datum abstraction program development ||| kurs ge kunskap färdighet konstruktion användning algoritm datastrukturer introduktion olik tekniker analys algoritm insikt fördelare dataabstraktion programutveckling
be use code ||| kurs använda java programmeringsspråk
technique iterative recursive algorithm proof induction divide conquer backtrack dynamic programming ||| algoritmtekniker iterativ rekursiv algoritm induktionsbevis divide conquer backtracking dynamisk programmering
analysis resource demand algorithm datum structure respect computation time memory consumption ||| analys algoritm datastrukturers resurskrav avseende beräkningstid minnesbehov
asymptotic complexity average complexity worst case complexity ||| asymptotisk komplexitet genomsnittlig komplexitet värsta-fall-komplexitet
linear binary search ||| linjär binärsökning
sort algorithm property ||| olik sorteringsalgoritmer egenskap
concept abstract datum type datum structure ||| begrepp abstrakt datatyp datastruktur
datum structure vector string stack queue list tree binary search tree hash table priority queue graph set ||| datastrukturer vektor sträng stack kö lista träd binär sökträd hashtabeller prioritetsköer graf mängd
common application ||| vanlig användningsområde
typical property time complexity operation various structure ||| typisk egenskap tidskomplexitet struktur operation
standardised algorithm class datum structure ||| standardisera algoritm klass datastrukturer
implementation datum structure ||| implementering datastrukturer
mandatory assignment write exam ||| obligatorisk inlämningsuppgifter skriftlig tentamen
final grade be obtain pass assignment be base grade write exam ||| slutbetyg skala ge godkänd inlämningsuppgifter basera tentamen
use various algorithm technique tool problem solve program construction ||| använda olik algoritmtekniker problemlösningsverktyg programkonstruktion
perform analysis resource demand algorithm datum structure ||| göra enkel analys algoritm datastrukturers resurskrav
use various datum structure gain basic knowledge important application ||| använda olik datastrukturer känna viktig tillämpning
use standard software library datum structure algorithm ||| använda standardbibliotek datastrukturer algoritm
implement datum structure object orient language ||| implementera egen datastrukturer objektorienterat språk
elementary skill discrete mathematics ||| elementär kunskap diskret matematik
follow concept describe different level course process process communication critical region semaphore mutual exclusion synchronization deadlock memory management timing constraint soft/hard system scheduling time- event trigg system schedulability analysis system static dynamic process priority distribute real-time system datum communication small embedded real-time embedded system ||| kurs tas följande begrepp upp olik fördjupningsgrad process processkommunikation semafor ömsesidig uteslutning synkronisering låsning minneshantering tidshantering schemaläggning tidskrav mjuk hård system tidsstyrda händelsestyrda system schemaläggningsanalys system statisk dynamisk processprioriteter distribuera realtidssystem datakommunikation liten inbyggd realtidssystem
course describe implementation small real-time kernel microcomputer system ||| kurs beskriva implementering liten realtidskärna mikrodatorsystem
course also include use array stack connection exercise study real time kernel ||| kurs ta även upp hantering lista stack c-program samband övning studie realtidskärna
large laboratory assignment final laboratory report give experience software development embedded system ||| stor laborationsuppgift avsluta laborationsrapport ge erfarenhet programutveckling inbyggd system
course end write exam ||| kurs avsluta skriftlig examen
understand concept embedded system process parallel process share resourced distribute system ||| förstå begrepp inbyggd system process parallell process delad resurs distribuera system
explain concept critical region mutual exclusion starvation deadlock synchronize process ||| förklara begrepp kritisk region ömsesidig uteslutning svält deadlock samt synkronisering process
understand general structure function real-time kernel small embedded system ||| förstå allmän uppbyggnad funktion realtidskärna liten inbyggd system
develop program compose multiple process small system support real-time kernel ||| utveckla program bestående flera process liten applikation stöd realtidskärna
use pointer dynamic memory allocation connection development manage array stack ||| använda pekare dynamisk minneshantering samband utveckling c-program hantering lista stack mm
explain meaning difference between concept static respective dynamic scheduling ||| förklara innebörd skillnad begrepp statisk respektive dynamisk schemaläggning
schedulability analysis small system compose several well-specified process timing constraint period deadline ||| tillämpa schemaläggningsanalys enkel system bestående flertal specificera process tidskrav period deadline
describe general structure characteristic protocol ||| beskriva grundläggande struktur egenskap can-protokollet
develop program distribute real-time system consist node connect can-bus ||| utveckla enkel program distribuera realtidssystem basera gemensam can-buss
course be organize lecture exercise laboratory assignment ||| undervisning ske form föreläsning övning laborationsuppgift
circuit-switching packet-switching method use datum network ||| kretskoppling respektive paketkoppling datornätverk
reference model datum communication ||| referensmodeller datakommunikation
distribute application application protocol e-mail ||| distribuera applikation applikationsprotokoll e-post
socket api ||| sockets
principle relieble unreliable datum transfer transport protocol ||| princip tillförlitlig respektive datagram dataöverföring
biterror flow congestion control ||| bitfel- flödes- stockningskontroll
internet protocol ipv6 ||| internet protokoll addressering
autonomous system internet route ||| routing internet
mac algorithm ||| mac-algoritmer
link protocol error detection code ||| länkprotokollen felupptäckande kod
local area network lan ||| lokal nätverk
||| ethernet
wireless lan ||| trådlös
application ||| multimedium applikation
security computer network ||| säkerhet datornätverk
firewall packet filter secure ||| brandvägg paketfiltrering skydd wlan
common most outcome be assess write exam ||| gemensam mången lärandemål examinera skriftlig tentamen
course include compulsory assignment consist laboratory assignment home assignment ||| kurs ingå obligatorisk moment bestå laboration inlämningsuppgift
pass entire course require laboratory work home assignment approve pass ||| bli godkänna hel kurs krävas samtlig laboration inlämningsuppgiften godkänna
laboratory work home assignment be do group student ||| laboration inlämningsuppgiften göra grupp student
outcome be try look deeper knowledge datum communication field group require mandatory home assignment contain number sub-task include task obtain deeper knowledge ||| mål handla söka djup kunskap datakommunikationsområdet komma grupp få obligatorisk inlämningsuppgift innehålla antal deluppgifter bl.a. handla inhämta djup kunskap
assignment report approve review examine teacher teaching assistant otherwise return feedback completion final approval ||| inlämningsuppgiften redovisa rapport bli godkänna granskning examinera lärare lärarassistent annars bli retur feedback komplettering slutgiltig godkänna
have practical nature examine teacher teaching assistant supervise observe student laboratory work can divide lab ||| mål ha praktisk karaktär examinera examinera lärare lärarassistent handleda iaktta kursdeltagare laboratoriemiljö ca uppdela laboration
common outcome be sudent have record result answer question lab-pm when work practice lab task ||| gemensam mål krävas sudenterna anteckna resultat svar fråga lab-pm när arbeta praktisk uppgift
addition order finally examine outcome write report result require ||| dessutom slutgiltig examinera mål krävas skriftlig rapport resultat arbete laboration
report approve review same manner assignment ||| rapport godkänna granskning sätt inlämningeuppgiften
laboratory work require successful work include well-filled lab-pm approve supervisor site end lab session ||| laboration godkänna lyckad arbete väl-ifylld lab-pm handledare plats slut labbtillfälle
final grade scale u base exam result ||| slutbetyget ge skala ge basera tentamen resultat
show basic knowledge skill field datum communication computer network ||| redovisa grundlägggande kunskap färdighet område datakommunikation datornätverk
show good knowledge layered reference model datum communication term function service protocol ||| redovisa god kännedom referensmodeller datakommunikation lager avseende funktion tjänst protokoll
make use layered reference model create understanding design usage various computer network ||| tillämpa referensmodellerna skapa förståelse uppbyggnad användning olik datornätverk
show good knowledge principle protocol standard use tcp/ip-based network ||| redovisa god kännedom princip protokoll standard tcp ip-baserade nätverk bygga
show basic knowledge most important application protocol ||| redovisa grundläggande kunskap viktig applikationsprotokollen
show good knowledge model structure architecture work basic ip address plan intranet ||| redovisa god kännedom ip-modellen internet uppbyggnad arkitektur bearbeta grundläggande ip-adresseringsplan intranät
show good understanding limitation internet provide service as well impact newly develop application service ||| redovisa god förståelse internet begränsning avseende servicegarantier samband nyutvecklad tjänst
describe how different type computer network construct relation transmission medium' characteristic requirement bandwidth code method function error flow control ||| redogöra hur olik typ datornätverk uppbygga förhållande transmissionsmediets egenskap krav bandbredden kodningsmetoder funktion fela flödeskontroll
seek deeper knowledge specific standard protocol datum communication field ||| söka djup kunskap enskild standard protokoll datakommunikationsområdet
use network analysis software datum traffic local network internet access ||| använda nätverksanalysprogram analysera datatrafik lokal nätverk anslutning internet
show basic practical skill configuration local network ||| redovisa grundläggande praktisk färdighet konfiguration lokal nätverk
lecture home assignment laboratory assignment ||| undervisning omfatta föreläsning hemuppgift laboration
course comprise also self-study web-based course material ||| kurs ingå även frivillig moment självstudium webbaserad kursmaterial
course cover follow item ||| kurs innehålla följande moment
technology ||| allmän mikrokontrollerteknologi
microcontroller architecture hardware orient description commercial microcontroller ||| mikrodatorarkitektur hårdvarumässig beskrivning kommersiell mikrokontroller
different work mode microscontroller ||| mikrokontrollerns olik arbetssätt
programming structure address mode instruction set ||| programmeringsmodell adresseringssätt instruktionsuppsättning
assembler programming stack handling subroutine exception restart ||| assemblerprogrammering stackhantering subrutiner avbrott återstart
machine orient c programming address subroutine parameter transfer exception handling ||| maskinnära c-programmering adressering subrutiner tillhörande parameteröverföring avbrottshantering
port handshaking time sequence ||| in utportar handskakning tidsförlopp
counter timer circuit ||| räknare timerkretsar
asynchronous serial interface synchronous serial interface ||| asynkron seriell gränssnitt synkron seriell gränssnitt
area network ||| controller area network
pulse width modulation analog/digital conversion digital/analog conversion dac ||| pulsbreddsmodulering analog digitalomvandling digital analogomvandling
examination carry continous individual account different part course ||| examination ske kontinuerlig individuell redovisning ingående kursmoment
acceptment account give grade ||| godkänna element ge betyg
higher grade volontary examination arrange ||| överbetyg anordna frivillig tentamen
understand make out formulate problem different aspect architecture construction implementation ||| förstå urskilja formulera problem olik aspekt arkitektur konstruktion implementering
build functional microcontroller system consist microprocessor commonly use interface ||| bygga funktionsduglig mikrodatorsystem bestående processor vanlig förekommande gränssnitt
understand use development system development debugging microprocessor code develop program efficiently use resourse microcontroller use ||| förstå använda utvecklingssystem utveckling samt felsökning program utveckla program effektiv använda befintlig resurs använda mikrodator
document present result analyse reflect difficulty problem shortage together more positive experience ||| dokumentera presentera resultat analysera reflektera svårighet problem brist positiv erfarenhet
course be divide part ||| kurs omfatta del
1 theoretical part lecture seminar ||| teoridel föreläsning seminarium
introductory laboration assignment intention introduce main funcion microcontroller ||| inledande laboration avsikt introducera mikrokontrollers huvudfunktion
additional more profound laboration assignment where student get use microcontoller larger system together interface internal external device ||| ytterlig mycket omfattande laboration där elev öva använda mikrokontrollern stor system tillsammans gränssnitt intern extern periferienheter
course comprise basic skill knowledge internet technology tcp/ip protocol suite particular access route protocol ||| kurs omfatta huvudmoment handla grundläggande internetteknik tcp ip-protokollen internetanslutning routingteknik
course mainly focus operation engineering ip router switch ||| arbetssätt ip-routrar lan-switchar ligga centrum kurs
practical skill gain course correspond certification carry reality-like laboratory environment ||| kurs gång genomföra gedigen tillämpning färdighet motsvara cisco-certifiering praktisk labbmiljö
course contain follow part ||| kurs innehålla följande huvuddel
introduction networks review refernce model datum communication ||| grundläggande nätverksteknik osi-modellen datakommunikation
tcp/ip-architecture internet ||| tcp ip-arkitektur internet
application transport layer protocol ||| applikations- transportprotokollen
internet protocol address subnett ||| internetprotokollet adressering subnetting
local area networks technology ||| lokal nätverk ethernet-standarder
route switch essential manage router core internetwork device basic router configuration protocol rip distance-vector route protocol ||| grundläggande routing- switchingteknik routersuppbyggnad grundläggande konfiguration princip routing vägvalsalgoritmer protokoll distance-vector routingprotokoll
address variable subnet mask vlsm address method configuration dhcp och address translation ||| ip-adressering variabel nätmask adresseringsmetoder dynamisk ip-konfiguration adressöversättning
route autonomous system ||| routing autonom system
route protocol subnetting standard link-state route protocol ospf ||| routingprotokoll vlsm standardprotokollet link-state routingprotokoll
switching basics ||| grundläggande switchkonfiguration
span tree protocol ||| spanning protocol
virtual lan frame-tagging ||| virtuell lan ram-taggning
route ||| routing
scale networks configure router switch advanced functionality consider architecture component operation larger more complex network ||| routing switching komplex nätverk konfigurering routrar switchar avancerad funktion avseende arkitektur komponent drift stor mycket komplex nätverk
troubleshoot router switch resolve common issue use single-area ospf multiarea ospf enhance network ||| felsökning routrar switchar lös vanlig problem enkelarea ospf ipv6-nätverk
acquire knowledge skill need install wireless lan small medium-sized network ||| skaffa kunskap färdighet behövas installera trådlös nätverk liten medelstor nätverk
||| implementering etherchannel
connect networks wan technology network service require converged application complex network ||| teknologi global nätverk wan-teknlogier nätverkstjänster krävas konvergera applikation komplex nätverk
link protocol ppp protocol frame relay ||| länkprotokoll t.ex. punkt-till-punkt protokoll
serial connection ||| bredband seriell anslutning
knowledge skill need implement virtual private network ||| kunskap färdighet behövas etablera virtuell privat nätverk
network monitoring troubleshoot use syslog snmp ||| nätverksövervakning felsökning hjälp syslog
borderless network datum center virtualization ||| modern nätverk datacenter virtualisering
course be divide part basic route switch route och switching complex network access ||| kurs uppdela del grundläggande routing switching routing switching komplex nätverk wan-access
part grade same examination method ||| del betygsätta examinationsformer
intended outcome be examine way ||| tilltänkt lärandemål examinera sätt
first direct supervision examiner assistant lab session then assese laboratoriework lab-skill exam laboratory end part ||| en direkt överinsyn examinator assistent laboration sedan bedöma labbarbetet hjälp labbtest labbsalen slut del
second evaluate result case study work relation part ||| två utvärdera resultat projektarbete utarbeta samband del
work case study do electronically use network simulator deliver result uploaded file simulation diagram table report ||| arbete projekt ske elektronisk hjälp nätverkssimulator leverera resultat form uppladdad fil simulering diagram tabell rapport
third be evaluate oral presentation opponent select topic seminar active attention whole class ||| tre utvärdera muntlig presentation roll opponent välja ämne seminarium aktiv deltagande hel klass
examination be obviously continous process course ||| examination naturligtvis kontinuerlig process kurs gång
mandatory activity task be evaluate award demonstrate result suitable form mainly report presentation ||| antal obligatorisk aktivitet uppgift bedöma poängssättas demonstrera resultat lämplig form främst rapport presentation
activity be lab case study seminar lab-skills exam homework ||| aktivitet laboration projektarbete seminarium labbtest hemuppgift
grade grade th base sum result gain activity task more detail be available homepage course ||| slutbetyg skala ge basera summa resultat samtlig aktivitet uppgift mer detalj finnas hemsida kurs
design implement effective efficient address subnett base combination technique variable length subnet mask configuration protocol dhcp ||| planera bearbeta effektiv ip-adresseringsplan tillämpning tekniker translation
work basic configuration ip router connect local network internet ||| sätta upp route grundläggande konfiguration ansluta lokal nätverk internet
analyze configure implement verify access control list router configuration filter packet accordance predefined local policy access ||| analysera konfigurera verifiera tillämpning grundläggande accesskontroll route filtrera ip-paket basera förbestämd policy access internet
configure evaluate major characteristic most used route protocol autonomous system route information protocol open shortest path first ||| konfigurera utvärdera egenskap mycket använda routingprotokollen autonom system routing information protocol liten medelstor nät
use tcp/ip utility tool troubleshoot network configuration connectivity issue network equipment ||| felsöka befintlig nätverkskonfiguration samt verifiera funktionalitet nätverksutrustning hjälp tcp/ip-verktyg nyttig program
configure administer switch switch ethernet lan redundant cabling possibly functional grouping base ||| konfigurera administrera switchat ethernet-baserat lokal nätverk möjlighet redundans gruppering dator antal s.k.
configure administer inter-switch vlan ethernet switch activate inter-vlan route router ||| konfigurera administrera inter-switchade konfigurera route inter-vlan routing
key characteristic common wide area network wan configuration technology ||| redogöra vanlig tekniker global nätverk bearbeta grund konfiguration route ansluta exempelvis
be also moment self-study web-based course material ||| kurs ingå även moment webbaserad självstudium
knowledge datum communication correspond course leu datum communication ||| grundläggande kunskap datakommunikation motsvarande kurs datakommunikation
essential element concept digital technology different number system ||| digitalteknikens grundläggande element begrepp olik talsystem
use construct combinatorial network synchronous sequential circuit ||| algebra användning konstruktion kombinatorisk nät synkron sekvensnät
computer' digital building block datum path controller memory input output device ||| dator digital byggblock dataväg styrenhet minne in enhet
traditional processor architecture data-path control unit instruction set synchronously operate digital machine ||| traditionsenlig processor uppbyggnad dataväg styrenhet instruktionsuppsättning synkron arbeta digitalmaskin
coding machine language assembly language ||| kodning maskinspråk assemblerspråk
pass course student pass write examination laboratory work ||| godkänna kurs krävas godkänna skriftlig tentamen godkänna laboration
base write examination final grade be ||| basera tentamensresultatet ge betyg
about computer ||| dator
describe computer structure organization ||| beskriva dator uppbyggnad funktion
student be able ||| betyda exempel
give block-level description how data-path register file arithmetic logic unit connect ||| beskriva blocknivå hur styrenhet dataväg registerfil aritmetik logikenhet koppla samman centralenhet
explain architectural concept such accumulator architecture stack architecture pipeline ||| förklara begrepp ackumulatorarkitektur risc cisc stackarkitektur pipeline
analyze design basic part central processing unit ||| beskriva analysera konstruera centralenhet grundläggande del
student be able ||| betyda exempel
analyze design single alu design control signal sequence basic alu operation ||| analysera konstruera enkel utforma styrsignalsekvenser grundläggande alu-operationer
analyze single datum path construct design control signal sequence transfer register memory ||| analysera enkel dataväg samt konstruera utforma styrsignalsekvenser överföring register
explain how instruction create use control signal sequence ||| förklara hur instruktion bygga upp styrsekvenser
student be able use example explain describe instruction format instruction decoding instruction execution ||| betyda exempel förklara exempel beskriva instruktionsformat instruktionsavkodning instruktionsutförande
analyze control unit ||| beskriva analysera automatisk styrenhetens funktion uppbyggnad
student be able ||| betyda exempel
describe how control signal sequence realize hard-wired logic micro-programmed logic ||| beskriva hur styrsignalsekvenser realisera fast koppla logik mikroprogrammerad logik
analyze design control signal sequence instruction semantics ||| analysera konstruera styrsignalsekvenser utgående instruktion semantik
explain core function primary memory describe analyze realize main memory' connection cpu ||| förklara primärminne grundläggande funktion beskriva analysera konstruera primärminne anslutning centralenhet
student be able ||| betyda exempel
describe different type primary memory such rom prom flash sram dram explain usefulness type different purpose ||| beskriva olik typ primärminne statisk dynamisk ram förklara respektive minnestyps användbarhet olik ändamål
explain concept memory hierarchy ||| förklara begrepp minneshierarki
describe analyze realize address decode logic primary memory ||| beskriva analysera konstruera avkodningslogik primärminne digital komponent
describe analyze realize simple memory address i/o digital component ||| beskriva analysera konstruera enkel minnesadresserad i/o digital komponent
explain/describe how bus link cpu memory ||| förklara beskriva hur centralenhet minne koppla samman hjälp dator bussystem
student be able describe synchronous asynchronous bus protocol multiplex ||| betyda exempel beskriva synkron asynkron bussprotokoll multiplexteknik
describe basic exception handling computer system ||| beskriva elementär undantagshantering datorsystem
student be able ||| betyda exempel
explain various hardware software exception handling such restart software-initiated exception externally generate exception interrupt ||| förklara undantagstyper återstart programvaruinitierade undantag extern generera undantag avbrott
describe how restart software-initiated exception perform controller ||| beskriva hur återstart programvaruinitierade undantag utföra styrenheten
describe how interrupt be handle cpu ||| beskriva hur avbrott hantera centralenhet
digital technology ||| digitalteknik
describe use binary code ||| beskriva använda binär kod
student be able ||| betyda exempel
convert number decimal binary hexadecimal representation ||| utföra omvandling tal decimal binär hexadecimal representation
perform addition subtraction multiplication division binary integer ||| utföra addition subtraktion binär heltal
analyze computer' structure programmable digital system ||| beskriva analysera dator uppbyggnad programmerbar digital system
student be able describe analyze construct combinatorial sequential circuit use build cpu ||| betyda exempel beskriva analysera konstruera sån kombinatorisk nät sekvensnät typisk använda bygga dator centralenhet
combinatorial circuit consider here consist mainly simple circuit such multiplexer de-multiplexer full adder bit shifter etc. ||| kombinatorisk nät här avse utgöra huvudsakligen enkel nät väljare fördelare heladderare bitskiftare etc.
sequential circuit consider here consist memory element counter ||| sekvensnät här avse utgöra minneselement räknare
programming assembler ||| assemblerprogrammering
explain store program principle ||| förklara lagra program princip
student be able describe how sequence machine instruction store memory be execute ||| betyda exempel beskriva hur sekvens maskininstruktioner,som ordna sekvensiellt minne utföra
describe programmer' model machine ||| beskriva programmerare bild maskin dvs instruktionsuppsättning adresseringssätt
student be able describe processor register set explain various type instruction group address mode describe example ||| betyda exempel förklara olik allmängiltig typ instruktionsgrupper adresseringssätt beskriva exempel
describe analyze design simple assembly language program organize subroutine ||| beskriva analysera konstruera enkel assemblerprogram organiserad subrutiner
student be able ||| betyda exempel
structure program use subroutine stack management ||| strukturera program hjälp subrutiner stackhantering
write small routine include software-controlled interrupt-driven input output delay ||| skriva liten rutin innefatta programstyrd avbrottsstyrd in utmatning fördröjning
schedule teaching consist lecture demonstration supervised coding simulation exercise ||| schemalägga undervisning bestå föreläsning demonstration handleda simulering kodnings-övningar
also supervise laboratory session student require prepare ||| dessutom utföra handleda obligatorisk laboration där förkunskapskontroll genomföra laboration
course student design increasingly complex digital building block digital computer system ||| kurs konstruera student stor stor digital byggblock ingående digital system datorsystem
theory present lecture demonstration ||| teori inhämta föreläsning demonstration
student construct building block test design help simulator exercise ||| student konstruera byggblock testa konstruktion hjälp simulator simuleringsövningar
building block subsequently realize hardware lab session ||| därefter implementera student byggblock hårdvara laboration
realization complete link building block computer programming ||| konstruktionsarbetet avsluta sammankoppla byggblocken dator programmera
admit program ||| anta högskoleingenjörsutbildningen
course be introduction software development language c ||| kurs introduktion programutveckling språk
course teach how implement solution form computer program c language define problem ||| kurs lära implementera lösning form datorprogram språk definiera problem
course cover identifier variable type expression operator statement function program structure character string pointer array dynamic memory management list file management standard library ||| kurs omfatta identifierare variabel typ uttryck operator sats funktion programstruktur tecken sträng pekare fält sammansatt typer,dynamisk minneshantering lista filhantering lite standardbibliotek
course begin introduction development environment ||| kurs inleda introduktion utvecklingsmiljö
credit point compulsory assignment credit point ||| skriftlig tentamen hp obligatorisk inlämningsuppgift hp
final grade base solely exam result include bonus point ||| slutbetyget basera enbart tentamensresultat eventuell bonuspoäng
analyze propose structure software-based solution textually describe problem ||| analysera föreslå struktur programbaserad lösning textuellt beskriva problem
implement solution language problem ||| implementera lösning språk problem
range line c code ||| omfattning upp ca rad c-kod
use follow concept when implement solution problem ||| beskriva använda följande begrepp implementering lösning problem
variable value type ||| variabel värde typ
expression statement ||| uttryck sats
structure ||| styra sats
function ||| funktion
string usage ||| tecken stränghantering
array pointer record ||| fält pekare post
dynamic memory management list ||| dynamisk minneshantering lista
io-handling stream basic level ||| io-hantering ström grundläggande nivå
file management basic level ||| filhantering grundläggande nivå
||| standardbibliotek
use general development environment ||| använda generell utvecklingsmiljö
use iterative software development methodology ||| använda iterativ programutvecklingsmetodik
follow give code standard ||| följa given kodningsstandard
use functional abstraction fundamental datum abstraction ||| använda funktionell abstraktion grundläggande dataabstraktion
software development assembly language testing troubleshooting ||| programutveckling assemblerspråk test felsökning
structure assembler basic code generation ||| strukturera assemblerprogrammering grund kodgenerering
first level system programming ie how computer program boot power on handling different type exception such internal error event interrupt ||| en nivå systemprogrammering dvs. hur dator programmera för start spänningstillslag hantering olik typ undantag så som intern fel händelse avbrott
program device parallel input output time management programming timer ||| programmering krets parallell in utmatning tidshantering programmering räknarkretsar
basics computer communication programming device serial communication ||| grund datorkommunikation programmering krets seriekommunikation
moreover simple time-sharing system assembly language special emphasis use peripheral circuit be implement ||| dessutom implementera enkel tidsdelningssystem assemblerspråk speciell tonvikt användning periferikretsar
write simple assembly language program use select architecture' instruction set ||| skriva enkel assemblerprogram användande välja arkitektur instruktionsuppsättning
write simple machine orient c program use programming language' datum type control structure ||| skriva enkel maskinorienterade c-program användande programspråk datatyper styrstrukturer
describe assembler equivalent typical programming structure ||| beskriva motsvarighet assembler typisk programstrukturer
apply tool course develop program ||| utnyttja kurs använda verktyg programutveckling adekvat sätt
contribute construction programming simple embedded system give component ||| medverka konstruktion programmering enkel inbyggd system given komponent
construct system generate various type exceptional event internal exception interrupt restart ||| konstruera system innefatta olik typ undantag intern undantag avbrott återstart
describe illustrate few basic type peripheral use ||| beskriva exemplifiera olik typ digital kringkomponenter användning
schedule teaching comprise lecture demonstration supervise simulation code exercise ||| schemalägga undervisning bestå föreläsning demonstration handleda simulering kodningsövningar
also supervise mandatory laboratory ||| dessutom utföra handleda obligatorisk laboration
course student design progressively bigger bigger building block software c assembler ||| kurs konstruera elev stor stor programblock assembler
theory acquire lecture demonstration ||| teori inhämta föreläsning demonstration
student design block then carry test aid simulator simulation exercise ||| elev konstruera program testa hjälp simulator simuleringsövningar självstudium
preparation laboratory exercise student finally adapt software order enable hardware verification function ||| laboration anpassa elev program så funktion dessutom verifiera hårdvara
approve plan report ||| godkänna planeringsrapport
project report ||| godkänna projektrapport
approve presentation defense thesis ||| godkänna presentation försvar examensarbete examensarbetsredovisningen
grading pass/fail ||| betygsskala
acquire apply advanced knowledge field engineering program include deeper insight current development ||| inhämta tillämpa fördjupa kunskap utbildningsprogram teknikområde inkludera fördjupa insikt aktuell utvecklingsarbete
comprehensive view independently creatively formulate handle issue analyze evaluate different technical solution ||| helhetssyn självständig kreativ identifiera formulera hantera frågeställning analysera utvärdera olik teknisk lösning
plan use appropriate method perform task give constraint ||| planera adekvat metod genomföra uppgift given ram
critically systematically use knowledge model simulate predict evaluate event basis relevant information ||| kritisk systematisk använda kunskap modellera simulera förutsäga utvärdera skeende utgångspunkt relevant information
framework project be able identify issue regard role technology society such environmental ethical aspect ||| ram specifik examensarbete identifiera frågeställning avse teknik roll samhälle såsom miljömässig etisk aspekt
orally write explain discuss information problem solution ||| muntlig skriftlig redogöra diskutera information problem lösning
learning objective degree project base objective formulate local guideline ||| lärandemål examensarbete utgå mål högskoleingenjörsexamen formulera lokal examensordning dnr
overall goal project be student demonstrate knowledge ability require work independently engineer ||| övergripande mål examensarbete student visa sån kunskap förmåga krävas självständig arbeta högskoleingenjör
work preferably carry group student also perform individually ||| examensarbete genomföra företrädesvis grupp student även genomföra enskild
further information see examensarbete högskoleingenjörsprogram vid chalmers tekniska högskola ||| se även föreskrift examensarbete högskoleingenjörsprogram chalmers teknisk högskola
degree project approve examiner work begin ||| examensarbete godkänna handledare arbete påbörja
technology node independent performance model power speed present give student generic tool estimate cost performance property circuit present future cmo technology ||| teknologioberoende modell effektförbrukning signalfördröjning presentera ge student generisk verktyg beräkna sån prestandaegenskaper krets dag morgondag cmos-teknologier
introduction cmo integrate circuit design basic building block technology platform design tool ||| introduktion integrera kretskonstruktion grundläggande byggblock teknologiplattformar konstruktionsverktyg
introduction circuit design flow schematic capture circuit simulation layout rule checking layout-vs-schematic verification ||| introduktion kretskonstruktionsflödet schemainmatning kretssimulering layout regelkontroller verifiering layout-vs-schema
hands-on design skill training use industrial electronic design automation eda tool ||| praktisk färdighetsträning användande electronic automation verktyg industriell snitt
mosfet digital switch ||| mos-transistorn digital switch
two-port static dynamic model ||| tvåporten statisk dynamisk modell
inverter basic digital building block ||| inverteraren grundläggande digital byggblocket
static property voltage transfer characteristic switch voltage noise margin ||| statisk egenskap överföringskarakteristik omslagsspänning störmarginaler
dynamic property rc delay model buffer sizing process corner ||| dynamisk egenskap rc-fördröjningsmodellen buffertdimensionering processhörn
switching power static leakage power ||| dynamisk effektförbrukning omslag statisk läckströmmar
logic gate ||| cmos-logik
designing logic gate pull-up pull-down network ||| konstruktion logisk grind pull-up pull-down block
two-port dynamic switching model ||| tvåporten dynamisk switchmodell
input load capacitance output drive capability ||| ingångskapacitans drivförmåga
technology independent delay measure ||| teknologioberoende fördröjningsmått
definition logical effort parasitic delay electrical effort fanout ||| definition logical effort parasitfördröjning electrical effort fanout
critical path delay ||| kritisk väg
size gate minimum path delay ||| optimering grind drivförmåga minimal vägfördröjning
use standard-cell layout template ||| grundläggande kretslayout standardcellmallar
adder design demonstrator ||| adderaren demonstrator
carry carry look-ahead prefix-tree adder ||| ripple carry look-ahead prefixträdsadderare
interconnect wire delay ||| ledning ledningsfördröjningar
two-port wire model ||| rc-tvåporten ledningsmodell
elmore's delay model ||| fördröjningsmodell
repeater ||| repeterare
latches flip-flop ||| latchar vippa
hold time requirement ||| setup- hålltidskrav
metastability ||| metastabilitet
dynamic power consumption ||| statisk dynamisk effektförbrukning
power clock distribution ||| kraftförsörjning klockdistribution
power gate ||| klockstyrning
clock gating ||| effektstyrning
compulsory laboratory exercise compulsory weekly home assignment hand-in problem final write examination ||| obligatorisk laboration obligatorisk inlämningsuppgifter ca vecka skriftlig tentamen
pass course point write examination require ||| godkänna krävas % skriftlig tentamen
hand-in problem give bonus point be use reach grade ||| inlämningsuppgifterna ge bonuspoäng använda uppnå betyg
bonus point be use pass course achieve grade ||| bonuspoäng inte använda uppnå godkänna betyg
design static cmo logic gate pull-up pull-down network implement standard cell ||| konstruera statisk cmos-grindar pull-up-nät pull-down-nät implementera standardceller
simple mos transistor model estimate static dynamic property cmo inverter use property model more complex gate ||| enkel mos-transistor-modeller uppskatta statisk dynamisk egenskap cmos inverterare använda egenskap modellera komplex grind
derive logical-effort normalized-delay parameter circuit diagram layout use parameter estimate trade performance measure such critical-path delay power dissipation present future cmo technology ||| härleda parameter normalisera fördröjning " logical effort kretsdiagram layout använda parameter uppskatta avväga prestandamått fördröjning kritisk väg effektförbrukning nutida framtida cmos-teknologier
find critical path more complex combinatorial circuit such adder determine minimise delay ||| finna kritisk väg mycket komplex kombinatorisk krets adderare bestämma minimera fördröjning
analyse wire-delay-dominated case such clock distribution global interconnect suggest suitable buffer scheme minimize delay delay spread ||| analysera ledningsfördröjningsdominerade fall klockdistribution global ledningdragning föreslå lämplig buffringsmetodier minimera fördröjning fördröjningsskillnader
design simple sequential system meet set-up hold time constraint timing circuit include effect metastability synchronisation ||| designa enkel sekventiell system uppfylla set-up- hålltidskrav klockad krets effekt metastabilitet synkronisering
use industrial-type design automation tool design implement verify basic cmo circuit element follow design flow support such tool ||| använda automatisera konstruktionsverktyg industriell snitt konstruera grundläggande kretselement i_enlighet_med:12 konstruktionsflöde sån verktyg stödja
course be organize bottom-up sister course top-down organize introduction electronic system design ||| kurs organiserad " bottom-up systerkurs " top-down organiserad parallell kurs introduktion elektroniksystemkonstruktion "
laboratory session be associate pre-lab home assignment conclude discussion ||| laborationspass förknippa förstudieuppgift avsluta diskussion
basic knowledge electric circuit theory analog digital electronics logic design computer organization ||| grundläggande kunskap elektrisk kretsteori analog digital elektronik samt digitalteknik datorteknik
ability perform engineering calculation ||| förmåga utföra ingenjörsmässig beräkning
genetic information be store dna molecule linear sequence basis ||| genetisk information lagra dna-molekyl linjär sekvens bas
course gene expression sequence translate sequence amino acid protein ||| när gen uttrycka översätta gensekvens sekvens aminosyra protein
sequence amino acid turn determine three-dimensional shape biological function protein ||| sekvens aminosyra bestämma tur protein tredimensionell form biologisk funktion
dna sequencing technology dramatically improve recently face vast amount datum basic science as well area such clinical medicine ||| teknik dna-sekvensering förbättra dramatisk hantera stor datamängd grundforskning område klinisk medicin
analysis protein sequence therefore play essential role come year ||| analys dna rna- proteinsekvenser därför spela viktig roll kommande år
aim such analysis include genome analysis structural functional prediction elucidation molecular basis human disease understand fundamental biological system reconstruction evolutionary history ||| mål sån analys omfatta genomanalys strukturell funktionell förutsägelse klarlägga molekylär grund mänsklig sjukdom förståelse grundläggande biologisk system rekonstruktion evolutionär historia
course illustrate how bioinformatic solution apply address biological problem theoretical principle solution discuss ||| kurs belysa hur bioinformatiklösningar tillämpa biologisk problem teoretisk princip lösning diskutera
course cover basic method use sequence analysis such pairwise multiple alignment search database sequence similarity profile pattern matching hide model bioinformatic gene prediction method principle molecular phylogeny ||| kurs behandla grundläggande metod använda sekvensanalys t.ex. parvis multipel anpassning sökning databas sekvenslikhet profil mönstermatchning dölja markov-modeller rna-bioinformatik genprognosmetoder princip molekylär fylogeni
course include modern high-throughput sequencing technique application as well molecular biology database different system such database ||| kurs innehålla modern high-throughput sekvenseringstekniker tillämpning molekylärbiologiska databas olik system söka sån databas
course consider theoretical principle as well how existing program use bioinformatician ||| kurs behandla teoretisk princip befintlig program använda bioinformatiker
complete course student expect be able ||| slutföra kurs förvänta student
implement solution basic bioinformatic problem ||| implementera lösning grundläggande bioinformatiska problem
discuss use bioinformatic address range biological question ||| diskutera användning bioinformatik samband rad biologisk frågeställning
describe how bioinformatic method be use relate sequence structure function ||| beskriva hur bioinformatiska metod använda relatera sekvens struktur funktion
discuss technology modern high-throughput dna sequencing application ||| diskutera teknik modern high-throughput dna-sekvensering tillämpning
use describe central bioinformatic datum information resource ||| använda beskriva central bioinformatikdata informationsresurser
describe principle algorithm pairwise multiple alignment sequence database search ||| beskriva princip algoritm parvis multipel sekvensanpassning sekvensdatabassökning
perform pattern matching biomolecular sequence ||| utföra mönstermatchning biomolekylära sekvens
describe how evolutionary relationship be infer sequence phylogenetic ||| beskriva hur evolutionär relation utläsa sekvens fylogeni
describe most important principle gene prediction method ||| beskriva viktig princip genprediktionsmetoder
describe basic principle hidden model application sequence analysis ||| beskriva grundläggande princip dölja markov-modeller tillämpning sekvensanalys
lecture computer exercise ||| föreläsning datorövningar
basic course molecular biology statistics ||| grundläggande kurs molekylärbiologi statistik
none ||| speciell förkunskaper krävas fördel student ha viss datorvana t.ex. använda ordbehandlingsprogram
avoid unnecessary complexity often choose study computation simplify powerful model ||| undvika onödig komplikation välja ofta studera beräkning förenkla kraftfull modell
course several such model study imperative functional ||| kurs behandla flera sån modell imperativa " funktionell "
more model be use explore limit computation problem be solve confines give model program run arbitrary program model certain way ||| flera modell använda utforska gräns beräkna problem inte lösa viss modell ram program köra godtycklig program modellera viss sätt
course also include discussion hypothesis state roughly function be computable certain intuitive sense only define several model computation ||| kurs innehålla också diskussion hypotes förmodan funktion beräkningsbar viss intuitiv sätt endast definiera flera beräkningsmodeller
completion course student be able ||| godkänna kurs student
define notion computable function ||| definiera begrepp beräkningsbar funktion
explain church-turing thesis ||| förklara church-turings hypotes
explain relationship inductively define set primitive recursion proof structural induction ||| förklara samband induktiv definiera mängd primitiv rekursion bevismetoden strukturell induktion
prove set be countable uncountable instance use diagonalisation ||| bevisa mängd uppräkneliga ouppräknelig exempel använda diagonalisering
encode inductively define set way member set use input output program more model computation ||| koda induktiv definiera mängd sån sätt element mängd använda indata utdata program flera beräkningsmodeller
implement program — particular interpreter correctly more model computation ||| implementera program i_synnerhet:04 interpretatorer korrekt flera beräkningsmodeller
prove function be not computable model computation ||| bevisa funktion inte beräkningsbara beräkningsmodeller
analyse program model computation ||| analysera program beräkningsmodeller
manipulate analyse model computation ||| manipulera analysera beräkningsmodeller
lecture exercise session ||| föreläsning övning
discrete mathematics instance tmv200 tmv210 ||| hp diskret matematik exempel
functional programming instance tda452 tda555 ||| hp funktionell programmering exempel
programming language technology equivalent ||| programspråk motsvarande
topic course be theory practice optimization problem discrete structure ||| kurs behandla optimeringsproblem diskret struktur teori praktik
have strong connection optimization theory linear programming algorithm complexity ||| finnas stark koppling optimeringsteori linjär optimering datavetenskap algoritm komplexitet operationsanalys
problem kind arise many different context include transportation telecommunications industrial planning finance bioinformatic hardware design cryptology ||| optimeringsproblem uppstå många olik sammanhang exempelvis transportlogistik telekommunikation industriell planering ekonomi bioinformatik hårdvarudesign kryptologi
characteristic property problem be be difficult solve ||| karaktäristisk egenskap sån problem svår lösa
course intend develop skill model real problem use mathematical algorithmic tool solve optimally heuristically ||| kurs syfta utveckla förmåga modellera verklig problem använda matematisk algoritmiska verktyg lösa optimal heuristisk
identify optimization problem various application domain ||| identifiera optimeringsproblem olik tillämpningsområde
formulate exact mathematical model capture essential real problem be still manageable computational method ||| formulera exakt matematisk modell representera väsentlig verklig problem fortfarande hanterbarbara beräkningsmetod
assess problem class give problem belong ||| bedöma problemklass given problem tillhöra
apply linear programming related generic method additional heuristic computational problem ||| tillämpa linjär optimering relatera generisk metod ytterlig heuristik beräkningsproblem
explain geometry linear programming ||| förklara geometrisk egenskap linjär optimering
dualize optimization problem use dual form obtain bound ||| duala optimeringsproblem användning duala form bestämma gräns
work scientific literature field ||| arbeta vetenskaplig litteratur område
lecture homework assignment ||| föreläsning inlämningsuppgifter
course discuss theory application algorithm machine learning inference perspective ||| kurs diskutera teori tillämpning algoritm maskininlärning slutledning ai perspektiv
context consider learn draw conclusion give datum experience result model generalise datum ||| sammanhang betrakta lärande slutledning given data erfarenhet resultera viss modell generalisera uppgift
inference be compute desire answer action base model ||| slutledning bestämma önska svar åtgärd basera modell
algorithm kind commonly use example classification task character recognition predict new customer be creditworthy etc. expert system example medical diagnosis ||| algoritm slag använda vanligen exempel klassificeringsuppgifter teckenigenkänning förutsäga ny kund kreditvärdig etc. expertsystem exempel medicinsk diagnostik
new commercially important area application be datum mining where algorithm be use automatically detect interesting information relation large commercial scientific database ||| ny kommersiell viktig område data mining där algoritm använda automatisk identifiera speciell intressant information speciell relation stor kommersiell vetenskaplig databas
course intend give good understanding crossdisciplinary area sufficient depth use evaluate available method understand scientific literature ||| kurs avse ge god förståelse tvärvetenskaplig område tillräcklig djup använda utvärdera tillgänglig metod följa aktuell vetenskaplig litteratur område
supervise learning bayes classifier fisher discriminant vector machine ||| övervaka lärande bayes-klassificerare fisher-diskriminantanalys perceptron-baserade metod support-vektormaskiner regression boosting
unsupervised learning clustering algorithm model method ||| oövervakad inlärning algoritm klustring em-algoritmen mixture-modeller kernel-metoder
graphical model model belief propagation ||| grafisk modell dölja markov-modeller metod propagera antagande belief propagation
apply sound mathematical foundation inference hypothesis empirical datum model scientific grounds ||| tillämpa sund matematisk princip vetenskaplig grund dra slutsats forma hypotes empirisk data modell
explain representative set available machine learning approach ||| förklara representativ uppsättning tillgänglig metod maskininlärning
evaluate method qualitatively quantitatively recognize strength limitation ||| utvärdera metod kvalitativ kvantitativ identifiera styrka svaghet
course provide advanced technique design analysis algorithm ||| kurs handla avancerad metod design analys algoritm
approximation algorithm analysis approximation scheme ||| approximationsalgoritmer analys
use linear programming particular approximation ||| användning linjär optimering i_synnerhet:07 approximation
network flow complex application ||| nätverksflöde viss tillämpning
randomize algorithm analysis appropriate random variable ||| randomiserad algoritm analys hjälp lämplig stokastisk variabel
helpful input structure tree structure input parameter ||| snabb algoritm använda trädstruktur liten parameter
know more depth important design analysis technique algorithm particular way problem ||| fördjupa kunskap viktig konstruktion analysmetoder algoritm i_synnerhet:14 metod lösa np-komplexa problem
extent be able apply such technique solve new problem arise various application ||| viss mån tillämpa metod lösa ny problem uppstå olik tillämpning
have practice recognize connection algorithmic problem reduce other ||| upptäcka samband olik algoritmiska problem reducera återföra
be able explain more complex algorithm proof written form ||| förklara komplex algoritm bevis skriftlig form
know select topic current research algorithm ||| medveten utvälja ämne aktuell forskning algoritm
lecture hand-in exercise ||| föreläsning inlämningsuppgifter
course tin092 algorithm equivalent require ||| kurs motsvarande
course laboration student build complete compiler simple imperative language ||| laboration kurs bestå skriva komplett kompilator liten imperativt språk
compiler project oral presentation ||| programmeringsprojekt muntlig redovisning
grade scale f ||| betygsskala
know basic principle run-time organization parameter passing memory management implement part compiler ||| känna grundläggande princip runtime-miljöer parameterskickande minneshantering implementera kompilator
design implement compilation scheme generate intermediate assembly code source program ||| implementera kompilatorscheman generera intermediärkod assembler källprogram
design implement extension simple imperative language know main issue compile object-oriented language ||| implementera utökning liten imperativ programmeringsspråk känna viktig aspekt kompilera objektorienterade programmeringsspråk
teaching consist lecture project as well individual supervision connection project ||| undervisning bestå föreläsning programmeringsprojekt individuell handledning samband projekt
project be central part involve implement complete compiler small imperative programming language ||| projekt huvuddel kurs bestå implementera komplett kompilator liten imperativt programmeringsspråk
lecture provide knowledge need laboration as well overview theoretical foundation possible extension compiler ||| föreläsning ge kunskap krävas genomföra projektetet äver översikt teoretisk grund möjlig utökning kompilator
general programming skill ||| allmän programmeringskunskap
datum structure ||| datastrukturer
formal language automata ||| formell språk ändlig automat
course dat151 programming language technology equivalent require ||| kurs technology motsvarande
formal method be generic term system design analysis implementation method be describe use mathematical rigor ||| formell metod samlingsnamn matematisk metod systemdesign analys implementation datorsystem
purpose be construct high confidence system accord specification ||| syfte konstruera system fungera enighet given specifikation
course introduce practically theoretically most important style formal method reasoning software model checking deductive verification ||| här kurs introducera praktisk teoretisk viktig tekniker formell metod använda resonera mjukvara modellkontroll model checking deduktiv verifikation
accordingly concentrate verification safety property ||| därför koncentrera kurs säkerhetsegenskaper
lecture cover follow topic ||| föreläsning ta upp följande ämne
theoretical foundation model checking ||| teoretisk grund modellkontroll
property language usage ||| språk uttrycka systemegenskaper användning
perform automate verification software model check tool ||| användning verktyg modellkontroll mjukvarusystem
deductive verification side use integrate tool formal specification verification program ||| deduktiv verifikation använda verktyg integrera formell specifikation verifikation javaprogram
tool partly develop support formal specification java modeling language translation logic ||| key delvis utvecklas universitet stödja formell specifikation översättning logik
interactive theorem prover be use formally verify statement specification program ||| interaktiv teorembevisare använda formell verifiera uttryck specifikation program
lecture cover follow topic ||| föreläsning ta upp följande ämne
||| java modelling
formal semantics ||| formell semantik system
predicate logic specification ||| predikatlogik specifikation javaprogram
translate ||| översättning jml dynamisk logik
verify proof obligation ||| verifikation beviskrav
judge potential limitation use logic base verification method assess improve software correctness ||| bedöma potential begränsning logikbaserade verifikationstekniker bedöma förbättra mjukvarukvalitet
judge express certain specification/modelling formalism ||| avgöra inte uttrycka given formalism specifikation modellering
judge be analyse certain logic proof method ||| avgöra inte analysera given logik bevismetod
express safety property concurrent program formal way ||| formell uttrycka säkerhetsegenskaper parallell program
describe basics verify safety property model checking ||| beskriva grund verifikation säkerhetsegenskaper hjälp modellkontroll model checking
use tool integrate automate model checking safety property ||| använda verktyg integrera automatisera modellkontroll säkerhetsegenskaper
write formal specification object-oriented system unit use concept method contract class invariant ||| skriva formell specifikation enhet objekt-orienterade program hjälp kontrakt klassinvarianter
describe how connection program formal specification represent program logic ||| beskriva hur relation program formell specifikation representera programlogik
verify functional property simple program verification tool ||| verifiera funktionell egenskap enkel javaprogram verifikationsverktyg
acknowledge socio-economical cost cause faulty software ||| känna socio-ekonomiska konsekvens felaktig mjukvara
judge communicate significance correctness software development ||| bedöma kommunicera betydelse vikt korrekthet mjukvaruutveckling
approach issue correctly function software means abstraction modeling rigorous reasoning ||| lös problem relatera utveckling välfungerande mjukvara abstraktion modellering rigorös resonemang
be lecture week introduce formal method general technical theoretical concept present method tool ||| kurs omfatta föreläsning vecka introducera formell metod generell bakomliggande teknisk teoretisk begrepp metod verktyg
lecture contain hands-on exercise ||| viss föreläsning innefatta även övning
student perform practical case study use tool lab assignment ||| student praktisk övning verktyg labuppgifter
be exercise class week ||| kurs omfatta föreläsning även praktisk övningstillfälle vecka
additionally study concurrency control method lock ||| feltolerans återställning metod checkpointing optimistisk pessimistisk återställning
resource allocation ||| resursallokering
distribute algorithm how design analyze distribute algorithm ||| distribuera algoritm design analys distribuera algoritm
networks energy efficient distribute design ||| sensornätverk energieffektiv distribuera lösning
denial service attack ||| denial service attack
get good understanding advance technology system architecture communication architecture propel growth distribute computing system ||| få god förståelse framsteg teknologi system kommunikationsarkitektur driva användning distribuera system
understand appreciate challenge opportunity face distribute system sensor network application designer ||| redogöra förklara utmaning möjlighet applikationsutvecklare ställa utveckling distribuera system sensornätverk
design program evaluate representative distribute system application ||| implementera utvärdera distribuera system applikation
aim course be explore powerful mechanism functional programming language offer solve real problem structure larger program ||| kurs mål utforska kraftfull mekanism funktionell programspråk erbjuda när gälla lösa verklig problem strukturera stor program
focus lie library design concept embedded language ||| fokus ligga design programbibliotek inbäddad språk
big advantage functional language be language construction give name thereby reuse use higher order function ||| stor fördel funktionell programspråk mången språkkonstruktionerna namnge därmed återanvända hög ordning funktion
functional program therefore often construct compose construction library ||| funktionell program därför ofta konstruera kombinera konstruktion funktionsbibliotek
method enable way construct program quickly high degree correctness ||| här metod göra möjlig snabb konstruera program hög grad korrekthet
be central idea course ||| central idé kurs
learn lot study standard library list function such map fold so on ||| lära hel del studera standardbibliotekens list-funktioner map fold osv
function generalise operate other datatype ||| funktion generalisera så fungera annan datatyper
realistic functional program also handle change state exception backtrack other non-functional behaviour ||| realistisk funktionell program också hantera tillståndsförändringar avbrott backtracking annan icke-funktionella beteende
look how model purely functional manner ||| jobba hur modellera ren funktionell
concept monad help here ||| matematisk begrepp monad hjälpa
arm knowledge construct specific library design construct program certain application domain ||| hjälp kunskap komma konstruera domänspecifika programbibliotek ämna lösa problem viss tillämpningsområde
type library say define domain specific language construction programmer use construct larger program mainly consist library function ||| här sort bibliotek säga definiera domänspecifikt språk konstruktion programmerare använda huvudsakligen bestå biblioteksfunktioner
study library parsing pretty printing graphic pseudo-parallel programming interaction ||| studera bibliotek inläsning parsning utskrift pretty printing grafik webbprogrammering interaktion
course also present recent research make contents course vary degree ||| kurs också presentera del aktuell forskning göra innehåll variera del år
programming language use course be ||| kurs använda huvudsakligen programmeringsspråk
design embedded specific language ||| inbäddad domänspecifika språk
explain exemplify abstract syntax semantics ||| förklara ge exempel abstrakt syntax semantik etc.
implement edsl combinator library ||| implementera edsl haskell kombinatorbibliotek
read understand extend program use advanced type system feature ||| läsa förstå utöka haskellprogram använda avancerad typsystemegenskaper
type class ||| typklasser
generalize algebraic datatype ||| generalisera algebraisk datatyper
functor monad monad transformer ||| funktorer monad monadtransformerare
use specification base development technique ||| använda specifikationsbaserade utvecklingstekniker
formulate test property program ||| formulera testa egenskap program uppfylla
reason correctness functional program ||| resonera funktionell program korrekthet
transform program basis such reasoning ||| transformera program basera sån resonemang
explain discuss above topic ||| förklara diskutera ämne beskriva ovan
be two-hour lecture week ||| 2-timmars förelåsningar vecka
lot help be provide ||| mycket hjälp erbjuda också
be eligible course student successfully complete year education aim degree equivalent ||| behörig kurs student klara år utbildning väg högskoleexamen datateknik motsvarande
course functional programming introduction discrete mathematics at least course dat151 programming language technology dat121 programming paradigm equivalent require ||| mycket specifik krävas kurs funktionell programmering introduktion diskret matematik minst kurs technology dat121 programming motsvarande
notion abstract syntax tree semantics interpreter compiler ||| koncept abstrakt syntaxträd semantik interpretator kompilator
algorithm complexity divide-and-conquer ||| algoritm komplexitet divide-and-conquer
induction proof simple logic equality reasoning ||| induktionsbevis logik likhetsbevis equality reasoning
be recommend require read follow course `` logic computer science theory formal language ||| rekommendera inte krav läsa följande kurs i_förväg:14 algorithms in computer theory formal languages
course aim provide overview cryptographic concept primitive protocol application ||| kurs syfte ge översikt kryptografisk begrepp primitiver protokoll applikation
basic goal cryptography confidentiality authentication non-repudiation ||| kurs innehålla grundläggande begrepp kryptografi sekretess autentisering oavvislighet
symmetric key cryptography block stream cipher design principle example mode operation message authentication code ||| kryptering symmetrisk nyckel blocka strömchiffer konstruktionsprinciper exempel meddelandeautentiseringskoder
public key cryptography asymmetric cipher signature ||| kryptering öppen nyckel asymmetrisk chiffer signatur
attack model security notion ||| attackmodeller säkerhetskoncept
protocol key management authentication other service ||| protokoll nyckelhantering autentisering annan tjänst
summarize main goal cryptography illustrate number example how cryptographic service be integrate current application software hardware ||| sammanfatta viktig mål kryptografi illustrera antal exempel hur kryptografisk tjänst integrera aktuell tillämpning mjukvara hårdvara
describe goal design principle common structure secret key primitive such block stream cipher message authentication code ||| beskriva mål konstruktionsprinciper gemensam struktur skapa hemlig nyckel t.ex. blocka ström-chiffer meddelandeautentiseringskoder
identify analyse explain various form attack base improper usage primitive mode protocol ||| identifiera analysera förklara olik form attack basera felaktig användning primitiver tillstånd protokoll
explain how basic public key primitive define base difficulty mathematical problem such discrete logarithm problem factoring analyse variant system ||| förklara hur grundläggande primitiver öppen nyckar definiera svårlösliga matematisk problem t.ex. diskret logaritm faktorisering samt analysera variant system
explain various role hash function part other cryptographic primitive protocol requirement place hash function ||| förklara hashfunktioners olik användningsområde annan kryptografisk primitiver protokoll krav ställa hashfunktioner
exemplify when various notion security such information theoretic computational provable practical security be applicable describe security guarantee provide ||| exemplifiera när olik säkerhetskoncept såsom informationsteoretiska beräkningsbara bevisbar praktisk säkerhet tillämplig beskriva säkerhetsgarantier erbjuda
explain basic key management technique secret key public key cryptography ||| förklara grundläggande tekniker kryptering hemlig öppen nyckel
datum structure ||| följa kurs krävas kunskap datastrukturer diskret matematik motsvarande inledande kurs ämne programmeringskunskaper exempelvis
course aim provide overview cryptographic concept primitive protocol application ||| kurs syfte ge översikt kryptografisk begrepp primitiver protokoll applikation
basic goal cryptography confidentiality authentication non-repudiation ||| kurs innehålla grundläggande begrepp kryptografi sekretess autentisering oavvislighet
symmetric key cryptography block stream cipher design principle example mode operation message authentication code ||| kryptering symmetrisk nyckel blocka strömchiffer konstruktionsprinciper exempel meddelandeautentiseringskoder
public key cryptography asymmetric cipher signature ||| kryptering öppen nyckel asymmetrisk chiffer signatur
attack model security notion ||| attackmodeller säkerhetskoncept
protocol key management authentication other service ||| protokoll nyckelhantering autentisering annan tjänst
summarize main goal cryptography illustrate number example how cryptographic service be integrate current application software hardware ||| sammanfatta viktig mål kryptografi illustrera antal exempel hur kryptografisk tjänst integrera aktuell tillämpning mjukvara hårdvara
describe goal design principle common structure secret key primitive such block stream cipher message authentication code ||| beskriva mål konstruktionsprinciper gemensam struktur skapa hemlig nyckel t.ex. blocka ström-chiffer meddelandeautentiseringskoder
identify analyse explain various form attack base improper usage primitive mode protocol ||| identifiera analysera förklara olik form attack basera felaktig användning primitiver tillstånd protokoll
explain how basic public key primitive define base difficulty mathematical problem such discrete logarithm problem factoring analyse variant system ||| förklara hur grundläggande primitiver öppen nyckar definiera svårlösliga matematisk problem t.ex. diskret logaritm faktorisering samt analysera variant system
explain various role hash function part other cryptographic primitive protocol requirement place hash function ||| förklara hashfunktioners olik användningsområde annan kryptografisk primitiver protokoll krav ställa hashfunktioner
exemplify when various notion security such information theoretic computational provable practical security be applicable describe security guarantee provide ||| exemplifiera när olik säkerhetskoncept såsom informationsteoretiska beräkningsbara bevisbar praktisk säkerhet tillämplig beskriva säkerhetsgarantier erbjuda
explain basic key management technique secret key public key cryptography ||| förklara grundläggande tekniker kryptering hemlig öppen nyckel
datum structure ||| följa kurs krävas kunskap datastrukturer diskret matematik motsvarande inledande kurs ämne programmeringskunskaper exempelvis
course provide knowledge principle use create image computer algorithm ||| kurs grundkurs ämne datorgrafik ge kunskap algoritm tekniker princip använda skapa datorgenererde bild
primary focus be real-time rendering photo realistic render ||| primär fokus ligga realtidsrendering fotorealistisk rendering
course be organize lecture exercise ||| kurs organiserad föreläsning övning
strict requirement however lecture tutorial assume student have ||| ingen strikt krav nivå föreläsning laboration utgå elev ha
knowledge correspond course algorithm datum structure ||| kunskap motsvarande kurs algoritm datastrukturer
programming skill imperative high-level language e.g. ||| färdighet programmering imperativt högnivåspråk t_ex
understanding vector analysis dimension dot product cross product matrix multiplication ||| viss förståelse vektoranalys dimension dotprodukt kryssprodukt matrismultiplikation
typically student successfully complete education comparable bachelor degree equivalent ||| typisk student ha avsluta utbildning motsvarande kandidatexamen computer liknande
project course design give knowledge experience professional development software ||| projektkursen avse ge kunskap övning professionell utveckling mjukvara
course aim ||| kurs syfta
give knowledge practice in methodology technical development project particular software project ||| ge kunskap träning arbetsmetodik teknisk utvecklingsprojekt speciell mjukvaruprojekt
give experience phase development include problem identification problem formulation information retrieval usage analysis system analysis debriefing evaluation etc. ||| ge erfarenhet fas utvecklingsarbete bl.a. problemidentifiering problemformulering informationssökning användaranalys systemanalys avrapportering utvärdering etc.
train problem solve skill ||| träna problemlösningsförmågan
train ability cooperation communication ||| träna samarbete kommunikationsförmågan
course present simple test drive object orient process ||| kurs presentera enkel testdriven objektorienterad process
concept as iterative development object orient analysis design domain designmodel domain driven design be introduce ||| begrepp iterativ utveckling objektorienterad analys design domän designmodell driven design introducera
aspect design discuss testability dependency partitioning layering more ||| olik aspekt gås testbarhet beroende partitionering skiktning m.fl.
examination consist oral presentation deliver source code other artifact ||| examination ske muntlig presentation projekt samt inlämning källkod övrig artifakter
grade f ||| betygsskala
document project form basic requirement specification basic design document ||| dokumentera arbete sån projekt form t.ex. grundläggande kravspecifikation enkel designdokument
few lecture obligatory seminar few workshop ||| liten antal föreläsning obligatorisk seminarium "
project include weekly obligatory supervisor meeting ||| projekt ingå obligatorisk veckovis handledarmöten muntlig slutpresentation
concurrent programming play vital role system where many event appear occur simultaneously ||| parallell programmering spela viktig roll system där många händelse ske till_synes:13 samtidig
general concept parallelism interference synchronization critical region mutual exclusion deadlock fairness livelock ||| allmän begrepp parallellism interferens synkronisering kritisk region ömsesidig uteslutning deadlock rättvisa livelock
synchronization use shared variable busy wait ||| synkronisering hjälp delad variabel busy waiting
semaphore ||| semafor
monitor ||| monitor
synchronous message passing extend rendezvous ||| synkron meddelandeskickning utöka rendezvous
asynchronous message passing ||| asynkron meddelandeskickning erlang
asynchronous coordination ||| asynkron koordinering linda
grade course then determine consider overall performance lab exam combine ||| betyg kurs bestämma sedan betrakta övergripande resultat labbe tenta tillsammans
demonstrate critical knowledge issue problem arise shared-memory message-passing concurrent system ||| förstå fråga problem uppstå parallell system delad minne meddelandeskickning
identify concurrent synchronization problem example share update dine philosopher producer-consumer resource allocation time-out ||| identifiera synkronisering problem parallell system t.ex. shared update dining philosophers producer-consumer resource allocation time-outs
adapt common pattern solve problem example lock client-server pipeline replicate worker barrier synchronization pass baton alarm ||| anpassa gemensam mönster lösa problem t.ex. lock client-server pipeline replicated workers barrier synchronization passing
design argue correctness clarity efficiency solution ||| skapa lösning argumentera korrekthet tydlighet effektivitet
apply practical knowledge programming construct technique offer modern concurrent programming language ||| tillämpa praktisk kunskap programmering konstruktion tekniker finnas tillgänglig modern parallell programmeringsspråk
implement such solution expressive programming language ||| implementera sån lösning uttrycksfull programspråk
solid background programming ||| grundläggande programmeringskunskaper
standard algorithm structure ||| standardalgoritmer datastrukturer resurskrav
standard algorithm library ||| standardbibliotek datastrukturer algoritm
laborations write exam ||| skriftlig examen laboration
make motivated choice different datum structure different application ||| uppskatta resurskrav olik implementationer datatyper därmed göra motiverad val tillgänglig alternativ
lecture exercise class laboration ||| föreläsning övning laboration
course introduce functional programming language related concept student already have knowledge programming ||| här kurs introducera funktionell programmeringsspråk relatera koncept student redan ha del kunskap programmering
primary goal be enable student write realistic small medium-size program introduce fundamental concept computer science ||| främst mål göra möjlig student skriva realistisk liten mellanstor program samtidig introducera grundläggande koncept datavetenskap
course student learn functional programming haskell programming language ||| här kurs komma student lära funktionell programmering programmeringsspråk
concrete topic encounter course include ||| exempel ämne bemöta kurs
function first-class value ||| funktion förstaklass-värden
algebraic abstract datum type ||| algebraisk abstrakt datatyper
polymorphism class ||| polymorfism klass
testing functional program ||| testning funktionell program
lazy evaluation infinite object ||| lat evaluering oändlig objekt
monad ||| monad
write exam compulsory laboratory exercise ||| skriftlig examination obligatorisk labbe
write small medium-sized functional program variety application ||| skriva liten mellanstor funktionell program olik tillämpning
exploit variety programming technique typical functional programming such ||| utnyttja olik programmeringstekniker vanlig funktionell programmering
use recursion model recursive datatype abstraction reuse help higher order function monad ||| användande rekursion modellering rekursiv datatyper abstraktion kodåteranvändning hjälp hög ordning funktion monad
appreciate strength possible weakness functional programming paradigm ||| värdera styrka möjlig svaghet funktionell programmeringsparadigmet
previous programming experience basic knowledge datum structure algorithm also assume ||| kurs förutsätta tidigare programmeringserfarenhet grundläggande kunskap datastrukturer algoritm
read research article be valuable training scientist researcher ||| läsa vetenskaplig artikel värdefull utbildning vetenskapsman forskare
demonstrate how present idea method how critically evaluate ||| kurs använda därför forskningsartiklar viktig referensmaterial visa hur presentera idé metod hur kritisk värdera
course examine individual programming assignment write assignment oral presentation ||| kurs examinera individuell inlämningsuppgifter programmering skriftlig inlämningsuppgifter muntlig presentation
knowledge understanding ||| kunskap förståelse
describe bioinformatic problem computational approach solve ||| beskriva bioinformatikproblem beräkningsmetod lösa
skill ability ||| färdighet förmåga
implement computational solution problem bioinformatic ||| implementera beräkningsproblemlösningar bioinformatik
judgement approach ||| värderingsförmåga förhållningssätt
summarise problem method describe research article ||| sammanfatta problem bioinformatikmetoder beskriva forskningslitteraturen
critically discuss different method address same task ||| kritisk diskutera olik bioinformatiska metod behandla uppgift
identify situation where method apply different application area ||| identifiera situation där bioinformatiska metod tillämpa olik område
furthermore student successfully complete course programming ||| krävas också programmeringskurs kurs diskret matematik
today object-oriented view have very strong position area program development ||| objektorienterade synsätt ha idag mycket stark ställning när gälla programutveckling
program construct accord view object-oriented program consist number co-operating part call object ||| program uppbygga synsätt s.k. objektorienterade program bestå antal samverka del kalla objekt
object encapsulate datum offer method read update datum ||| objekt kapsla in data erbjuda metod bearbeta avläsa data
object describe so call class ||| objekt beskriva s.k. klass
aim course be teach principle object-oriented view how object-oriented program construct ||| kurs syfte lära ut grundläggande princip tekniker hur konstruera imperativa objektorienterade program
programming language be use ||| kurs använda programspråk
follow item discuss ||| följande moment behandla
basic object-oriented concept such class object method instance vairable ||| grundläggande objektorienterade begrepp klass objekt metod instansvariabel
inheritance polymorphism dynamic binding ||| gränssnitt polymorfism dynamisk bindning
write exam ||| skriftlig salstentamen
basic eligibility ||| allmän behörighet
course discuss basic concept imperative object-oriented language realize ||| kurs behandla grundläggande begrepp imperativ objektorienterad programmering så realisera
addition basic language construct simple guideline programming course discuss use number class standard library ||| grundläggande språkkonstruktionerna enkel riktlinje programutformning diskutera använda antal klass standardbibliotek
aim be demonstrate how library make possible write program example ||| syfte därvid visa hur bibliotek ge möjlighet skriva program annan
offer graphical user interface ||| erbjuda grafisk användargränssnitt
manipulate sound image example signal image processing ||| manipulera ljud bild exempel signal- bildbehandling
fetch datum web further processing ||| hämta data webb vid bearbetning
handle large set datum use library class efficient datum structure ||| hantera stor datamängd använda färdig klass effektiv datastrukturer
application development target desktop platform smartphone ||| tillämpning utvecklas desktop-miljö mobiltelefon
write exam compulsory programming assignment ||| skriftlig tentamen obligatorisk laboration
explain basic concept imperative object-oriented programming in particular realize choose programming language ||| förklara grundläggande begrepp imperativ objektorienterad programmering speciell realisera programspråk använda kurs
describe standard algorithm e.g. search sort know how find standard library ||| beskriva standardalgoritmer exempel sortering sökning veta återfinna språk standardbibliotek
define class model simple phenomenon object-oriented style encapsulate datum be read update use public method ||| definiera klass modellera enkel fenomen objektorienterad anda inkapsla data avläsa uppdatera publik metod
define simple subroutine library use datum type control structure choose language ||| definiera enkel subrutinbibliotek utnyttjande använda programspråk datatyper styrstrukturer
understand give program consist several class aim debug extend improve behaviour program accord give specification ||| sätta in given program bestående flera klass syfte felsöka utvidga förbättra program beteende given anvisning
write simple event-driven program graphical user interface ||| skriva enkel händelsestyrda program grafisk gränssnitt
use search standard library datum structure ||| använda söka programbibliotek standardändamål exempelvis grafisk gränssnitt datastrukturer
identify need further knowledge programming computer science ||| identifiera behov ytterlig kunskap område programmering datavetenskap
course be introduction imperative programming software development ||| här kurs introduktion imperativ programmering programvaruutveckling
course use programming language ||| kurs använda programspråk
follow item discuss ||| följande moment behandla
variable expression statement priority method parameter passing recursion ||| variabel uttryck sats prioritet metod parameteröverföring rekursion
array reading input user ||| fält inläsning användare
simple type reference type type conversion ||| enkel typ referenstyper typomvandling
basic object-oriented concept such class object method instance variable ||| grundläggande objektorienterade begrepp klass objekt metod instansvariabler
different equality test canonical form class ||| olik test likhet kanonisk form klass
basic inheritance interface ||| grundläggande arv gränssnitt interfaces
standard class graphical user interface ||| standardklasser grafisk användargränssnitt
how construct simple graphic component ||| enkel konstruktion egen grafisk komponent
event listener ||| händelse lyssnare
error handling use so call exception ||| felhantering hjälp s.k. exceptions
search documentation standard class internet ||| sökning internet dokumentation standardklasser
class ||| klass
be able complete simple programming task ||| slutföra enkel programmeringsuppgifter
mean student know how ||| betyda student veta hur
programming task ||| läsa programmeringuppgifter
break top-level task smaller more manageable task ||| bryta ner programmeringsuppgiften liten lätt deluppgifter
complete top-level task complete smaller task ||| konstruera lösning ursprunglig uppgift lösa liten deluppgifter
write simple test help find solution validate final solution ||| skriva testprogram hjälpa programmering kontrollera kvalitet färdig lösning
explain use basic concept imperative object-oriented programming ||| förklara använda grundläggande begrepp imperativ objektorienterad programmering
mean student be able explain use ||| betyda student förklara använda
difference primitive reference type illustrate sketch memory cell value reference ||| skillnad primitiv typ referenstyper illustrera principskisser minnesceller värde referens
how uni multidimensional array be declare create use ||| hur en flerdimensionella fält deklarera skapa använda
difference static method variable instance method variable ||| skillnad statisk metod variabel instansmetoder variabel
difference method return value method have result type void ||| skillnad metod returnera värde metod resultattypen void
how parameter pass happen method call ||| hur parameteröverföring ske anrop metod
difference class object ||| skillnad klass objekt
concept subclass describe how such declare ||| begrepp subklass beskriva hur sån deklarera
interface be mean class implement interface ||| interface mena klass implementera interface
concept datum encapsulation information hiding ||| begrepp datainkapsling informationsdöljande
construct method make use programming language' datatype control structure ||| konstruera metod utnyttjande programspråk datatyper styrstrukturer
mean student know how ||| betyda student kunna
define static instance meothd use appropriate parameter result type ||| definiera statisk metod instansmetoder lämplig val parameter resultattyp
use control structure such if-statement structured manner ||| utnyttja styrstrukturer fora sats strukturera sätt
handle both uni multidimensional array ||| hantera en flerdimensionella fält
use standard class construction list ||| använda standardklasser konstruera lista
read input supply user ||| läsa indata mata in användare
present output user make simple modification output ||| presentera utdata användare utföra enkel redigering utdata
use exception signal deal potential error ||| utnyttja s.k. exceptions signalera ta hand eventuell fel
solve simple problem use recursion ||| lös enkel problem rekursion
independently construct imperative simple object-oriented program use library class simple programmer-defined class ||| självständig konstruera imperativa enkel objektorienterade program använda färdig standardklasser enkel egenhändig konstruerad klass
mean student know how ||| betyda student kunna
define class describe concrete concept such dice bank account etc. ||| definiera enkel klass beskriva konkret begrepp tärning bankkonto etc.
write program use standard class such etc. ||| skriva program där använda standardklasser integer m.fl.
document program use code standard name comment ||| dokumentera program kodningsstandard namngivning kommentering
test program ||| testa program
describe principle object-oriented programming apply programming context explain how realize particular object-oriented language ||| beskriva princip objektorienterad programmering använda programmeringsfasen förklara hur realisera specifik objektorienterat programspråk
software development be central software engineer ||| programvaruutveckling central civilingenjör informationsteknik
more in-depth treatment term implementation inheritance specification inheritance abstract class dynamic binding encapsulation information hiding ||| fördjupning begrepp implementationsarv specifikationsarv abstrakt klass polymorfism dynamisk bindning inkapsling information hiding
introduction ||| introduktion uml
fundamental design principle such dependency inversion principle open-closed substitution responsibility principle separation concern principle ||| fundamental designprinciper såsom separation concern demeter interface segregation principle
generic program component ||| generisk programenheter
canonical form class equal hashcode clone tostring serialization ||| kanonisk form klass equals hashcode clone tostring serialisering
contract base design precondition postcondition class invariant assertion ||| kontraktbaserad design förvillkor eftervillkor klassinvarianter assertions
mutable immutable object ||| muterbar icke-muterbara objekt
representation exposure ||| representationsexponering
inner class anonymous class ||| inre klass anonym klass
exception handling ||| undantagshantering
common design pattern such ||| vanlig designmönster såsom
refactoring ||| refactoring
framework constitution ||| collection-ramverk uppbyggnad
framework constitution ||| o-ramverk uppbyggnad
threads thread safety race condition deadlock critical region sychronization ||| tråd trådsäkerhet conditions deadlock kritisk region synkronisering
conduct form write examination laboration ||| ske form godkänna skriftlig tentamen godkänna laboration
describe principle object-oriented programming apply programming context explain how realize particular object-oriented language ||| beskriva princip objektorienterad programmering använda programmeringsfasen förklara hur realisera specifik objektorienterat programspråk
use class diagram plan document design accessible way ||| använda klassdiagram överskådlig sätt planera dokumentera egen programmeringsarbete
evaluate different feature programming large assess benefit risk respect different design goal make proper choice ||| resonera om utvärdera olik egenskap program bedöma fördel nackdel avseende olik utvecklingsmål t_ex underhåll återanvändning robusthet därpå göra lämplig val
implement generic program component ||| implementera generisk programenheter
use describe how application framework constitute ||| använda beskriva hur applikationsramverk uppbygga
describe different criterion principle good program design ||| beskriva olik kriterium princip god programdesign
account meaning synchronization thread safety implement thread-safe object ||| redogöra innebörd synkronisering trådsäkerhet samt implementera trådsäkra objekt
be introductory course programming use functional language haskell medium instruction ||| introduktionskurs programmering använda funktionell programmeringsspråk
primary goal be enable student write realistic small program real world application introduce fundamental concept computer science ||| primär syfte lära ut grundläggande datavetenskapliga begrepp samtidig student lära skriva realistisk liten program
secondary goal be provide orientation regard course come particularly datum structure algorithm digital circuit formal method programming language course offer insight career computing invite speaker ||| sekundär mål ge grund kommande kurs specifik datastrukturer algoritm digital krets formell metod kurs programspråk ge inblick karriärsmöjligheter data bjuda_in talare
value type function ||| värde typ funktion
datum structure list tuple user-defined type ||| sammansatt datastrukturer lista tupler användardefinierade typ
top-down program design ||| top-down programdesign
recursion recursive type ||| rekursion rekursiv typ
concept time complexity good bad algorithm ||| tidskomplexitet bra dålig algoritm
input-output ||| input-output
module abstraction interface specification ||| modul abstraktion interface specifikation
verification testing proof ||| verifiering tesning bevis
higher-order function bulk datum operation ||| hög ordning funktion data-centrisk programmering
write exam compulsory laboratory exercise ||| skriftlig tentamen obligatorisk laborationsuppgifter
write small functional program various application ||| skriva liten funktionell program olik tillämpning
use basic repertoire programming technique type functional language such model datatype use recursion higher order function ||| använda grundläggande repertoar programmeringstekniker typat funktionell språk såsom modellering datatyper rekursion användning hög ordning funktion
apply software testing technique use appropriate tool ||| genomföra testning liten program hjälp lämplig verktyg
reoccur be a identification error b analysis c removal ||| återkommande ämne identifikation programvarufel b analys rätta
contrast formal informal method testing terminology coverage unit test unit test framework debug control workflow localisation tool formal specification pre postcondition invariant formal verification logic tool support ||| kontrastera formell informell metod testning terminologi täckningsgrad enhetstester ramverk enhetstester felsökning kontroll arbetsflöde lokalisering verktyg formell specifikation pre post conditions invarianter formell verifikation logik verktyg
throughout course be concern imperative program general object-oriented program particular ||| kurs genomgående fokusera imperativa program generell särskilt objektorienterade program
course examine final individual write hall exam hec practical hand-in assignment hec ||| kurs examinera individuell skriftlig salstenta inlämningsuppgifter
laboration be usually do group student ||| inlämninguppgifterna göra normal grupp student
case practical hand-in assignment pass first attempt student grant second try ||| inlämningsuppgift inte godkänna en försök studentet få två försök
exam lab pass independently ||| tenta inlämningsuppgifterna godkänna oberoende
completion course student expect be able ||| genomgå kurs student
describe possibility limitation informal formal technique discovery analysis resolve program error ||| beskriva omfattning begränsning informell formell tekniker upptäcka analysera rätta programfel
characterise input program fail ||| karakterisera indata program gå fel
formally reason simple program guarantee correctness ||| resonera formell enkel program garantera korrekthet
be eligible course student successfully complete ||| kurs krävas student genomgå
year education aim bachelor degree equivalent ||| minst år utbildning program inriktning datavetenskap datateknik liknande
course discrete mathematics such tmv200 ||| kurs diskret matematik t.ex.
course object orient programming such tda545 ||| kurs objektorienterad programering t.ex.
why compute system become increasingly distribute ||| varför bli datorsystem allt mycket distribuera
how build reliable fault-tolerant distribute system ||| hur bygga pålitlig feltoleranta distribuera system
why internet scale billion user ||| hur ha internet skala flera miljard användare
how be modern distribute system such cloud smart grid connected car build ||| hur modern distribuera system t.ex. molntjänster smart elnät kommunicera bil uppbygga
be few question course distribute system address ||| fråga kurs behandla
goal course be understand design distribute system discuss underlie principle mechanism drive today' distribute system ||| mål kurs få förståelse design distribuera system underliggande princip mekanism dag distribuera system använda
lecture provide require fundamental lab give hands-on experience develop distribute system explore real-world challenge ||| föreläsning ge nödvändig fundamental kunskap laboration ge praktisk erfarenhet utveckling distribuera system erfarenhet arbeta verklighetsanknutna problem
begin course introduction basic concept distribute system challenge pose ||| kurs börja introduktion grundläggande koncept distribuera system utmaning stå
name ||| namngivning
||| ömsesidig uteslutning mutual exclusion val election
clock time ||| klocka tid
consistency replication ||| konsistens replikering
||| feltolerans distribuera system
selected application ||| utvälja representativ distribuera applikation
knowledge understanding ||| kunskap förståelse
describe application distribute system mechanism use provide service ||| beskriva tillämpning distribuera system mekanism använda utföra tjänst
analyze challenge requirement different approach have ||| god kunskap diskutera analysera problem krav olik designmetoder lösning stå
skill ability ||| praktisk färdighet
evaluate small-scale distribute system use fundamental mechanism introduce lecture ||| utveckla programmera utvärdera småskalig distribuera system hjälp fundamental mekanism introducera kurs
judgment approach ||| beskrivning- analysförmåga
describe analyze exist new method distribute system design ||| god förmåga beskriva analysera existerande ny metod design distribuera system speciell avseende system förmåga skala feltoleranta
addition course operate system concurrent programming equivalent require ||| dessutom krävas kurs operativsystem motsvarande
include ability ||| inkludera färdighet identifiera säkerhetsproblem applikation språknivå
be able demonstrate critical knowledge ||| student demonstrera kunskap
gain experience technical writing ||| dessutom student öka förmåga skriva teknisk material
course consist lecture group meeting project presentation ||| kurs bestå föreläsning gruppmöten projektpresentationer
algorithm course revolve central question appear naturally when want use computer compute problem ||| kurs kretsa naturlig frågeställning ställa då använda dator beräkna lösning problem
be problem computationally solvable ||| problem beräkningsmässig lösningsbart
how do ||| hur lösning utforma
how fast solution be ||| hur snabb problem lösa
course topic be follow ||| kurs ge kunskap
introduction ||| introduktion
be efficient algorithm ||| effektiv algoritm
tool analysis algorithm ||| verktyg analys algoritm
o-notation ||| o-notation
analyze loop recursive call ||| analysera loop rekursiv anrop
solve recurrence ||| lös rekursionekvationer
datum structure algorithm ||| datastrukturer algoritm
review basic datum structure ||| granskning grundläggande datastrukturer
combine datum structure ||| kombinera datastrukturer
merge-and-find ||| merge-and-find
greedy algorithm ||| girig algoritm
divide-and-conquer ||| divide-and-conquer
programming ||| dynamisk programmering
search tree ||| backtracking implicit sökträd
||| branch-and-bound
short introduction local search approximation algorithm ||| kort introduktion lokal sök-och approximationsalgoritmer
basic complexity theory ||| grundläggande komplexitetsteori
complexity class p npc reduction ||| komplexitetsklasserna reduktion
example np-complete problem ||| exempel np-fullständiga problem
cope hard problem ||| hantera svår problem
short introduction other design technique local search approximation algorithm randomize algorithm pre-processing network flow ||| kort introduktion annan designtekniker lokal sökning approximationsalgoritmer randomiserad algoritm förbehandling nätverksflöde
knowledge understanding ||| kunskap förståelse
describe algorithm quality explain algorithm write other understand how work why be correct fast where be useful ||| beskriva algoritm egenskap förklara algoritm skriftligen så förstå hur fungera varför korrekt snabb användbar
recognize non-trivial computational problem need solve algorithm appear various real-world computer application formalize ||| inse icke-triviala beräkningsproblem lösa hjälp algoritm dyka upp olik verklig datortillämpningar formalisera
intractability recognize intractable problem other class problem ||| intractability känna igen intractable annan klass problem
prove correctness algorithm ||| bevisa korrekthet algoritm
skill ability ||| färdighet förmåga
design apply main design technique efficient algorithm instance greedy dynamic programming divide-and-conquer backtrack heuristic problem be similar textbook example new ||| design tillämpa viktig designteknikerna effektiv algoritm t.ex. girig dynamisk programmering söndra härska backtracking heuristisk problem likna läroboksexemplen ny
perform whole development cycle algorithm problem analysis choose modify combine suitable technique datum structure analysis correctness complexity fill implementation detail look possible improvement etc. ||| utföra hel utvecklingscykeln algoritm problemanalys välja modifiera kombinera lämplig tekniker datastrukturer analys korrekthet komplexitet fylla implementationsdetaljer hitta möjlig förbättring etc.
perform simple reduction problem explain completeness recognize various computationally hard problem tend appear over over again different application cope at least principle computationally hard problem use heuristic refinement exhaustive search approximative solution etc. ||| utföra enkel reduktion problem förklara fullständighet känna igen olik beräkningssvåra problem tendera dyka upp igen olik applikation klar princip beräkningsmässig svår problem hjälp heuristik förfining uttömmande sökning approximativ lösning etc.
implement algorithm properly evaluate theory experiment ||| implementera algoritm ordentlig utvärdera teori experiment
judgement approach ||| värderingsförmåga förhållningssätt
critically assess algorithmic idea demonstrate ability resist temptation create obvious seemingly plausible algorithm often turn out be incorrect ||| kritisk bedöma algoritmiska idé visa förmåga motstå frestelse skapa uppenbar till_synes:15 rimlig algoritm ofta visa felaktig
analyse explain why time efficiency algorithm be crucial express time complexity rigorous scientifically sound manner analyze time complexity algorithm sum operation nested loop solve standard recurrence etc. i.e. perform objective evaluation performance be able compare other algorithm performance ||| analysera förklara varför tidseffektivitet algoritm avgörande uttrycka tidskomplexitet rigorös vetenskaplig korrekt sätt analysera tid komplexitet algoritm summera operation nästlade loop lösa vanlig rekursionsekvationer etc. säga göra objektiv bedömning prestanda jämföra annan algoritm
however be aware be course programming ||| vara dock medveten inte kurs programmering
main focus be design algorithm give problem specification analysis efficiency algorithm ||| fokus ligga design algoritm given problemformulering analys effektivitet algoritm
be so speak analytical work have be do write line code want solve new problem help computer ||| vara så säga analytisk arbete göra skriva kod lösa ny problem hjälp dator
artificial intelligence study how computer accomplish task traditionally think require human intelligence ||| artificiell intelligens studera hur dator utföra uppgift traditionell anse kräva mänsklig intelligens
aim course be give deepen understanding possibility limitation method ||| syfte kurs ge fördjupa förståelse möjlighet begränsning ai-metoder
follow topic cover course ||| följande ämne ingå kurs
overview ||| översikt ai
introduction ||| introduktion ai
history philosophical foundation ethical issue ||| historisk filosofisk etisk fråga ai
application area where technique be use such language technology bioinformatic robotic etc. ||| applikationsområden där ai-tekniker använda språkteknologi bioinformatik robotik etc.
technology methodology ||| ai-tekniker metodologi
uninformed informed search ||| oinformerad informera sökning
logic deduction ||| logik deduktion
probability theory ||| probabilistisk slutledning
automate planning ||| automatisk planering
course examine individual write examination hec programming project hec perform group ||| kurs examinera individuell skriftlig inlämningsuppgift hp ai-projekt hp genomföra grupp
project consist part programming project cover technique present lecture write report programming project write essay cover historical philosophical ethical issue present end course ||| ai-projektet bestå del programmeringsprojekt täcka ai-tekniker presentera föreläsning skriftlig rapport programmeringsprojektet skriftlig essä omfatta historisk filosofisk etisk frågeställning presentera slut kurs
final program write report participation supervision final presentation be all important assessment project ||| slutlig program skriftlig rapport deltagande handledning slutlig presentation viktig bedömning projekt
accept course student furthermore participate actively supervise read comment report other group course ||| godkänna kurs student också delta aktiv handledning läsa kommentera rapport kurs grupp
complete course student expect ||| klara_av kurs förvänta student ha förmåga
knowledge understanding ||| kunskap förståelse
exemplify describe choose application area benefit use technology methodology ||| exemplifiera beskriva utvälja applikationsområden tjäna använda ai-tekniker metod
state describe most important technology methodology use different subfield such search automatic reasoning planning natural language processing include fundamental algorithm area how be use ||| redogöra beskriva viktig tekniker metod använda olik ai-delområden såsom maskininlärning språkteknologi automatisk slutledning planering medvetenhet grundläggande ai-algoritmer område hur använda
define explain discuss fundamental algorithm at least subarea gain supervised group project ||| definiera förklara diskutera åtminstone ai-delområde förvärva handleda projektarbete grupp
design program document evaluate ai-based software system have acceptable performance ||| designa implementera dokumentera utvärdera ai-baserad mjukvarutillämpning så ha acceptabel prestanda
skill ability ||| färdighet förmåga
interpret analyze research literature apply solve ai-related problem ||| tolka analysera forskningslitteratur tillämpa lösa ai-relaterade problem
apply knowledge gain course new problem domain ||| tillämpa kunskap förvärva kurs ny problem ai-domänen
write scientific report ||| skriva vetenskaplig rapport
judgement approach ||| värderingsförmåga förhållningssätt
judge achieve technology be possible ||| bedöma uppnå ai-tekniker inte möjlig
judge when be feasible use technology when be useful ||| bedöma när möjlig använda ai-tekniker när inte meningsfull
summarize relate different ethical argument favor ||| sammanfatta relatera olik etisk argument
course be project-oriented divide part ||| kurs projektinriktad uppdela del
smaller part be theoretical consist lecture exercise cover most important topic ||| liten del teoretisk bestå föreläsning uppgift täcka viktig ai-ämnena
larger part course consist project work group complete programming project write essay read comment work other group course ||| stor del kurs bestå arbete projektgrupp slutföra programmeringsprojekt skriva essä läsa kommentera arbete en annan grupp kurs
student form project group group assign supervisor program project essay subject ||| student bilda projektgrupp grupp tilldela handledare programmeringsprojekt essä-ämnen
eligible course student successfully complete year hecr study subject computer science equivalent ||| tillträde kurs student klara_av år hp studie ämne datavetenskap motsvarande
furthermore student successfully complete follow course ||| dessutom student få godkänna följande kurs
advanced programming dit950 tda550 dit260 tda342 dat121 equivalent ||| advanced programming liknande
datum structure dit960 dat036 tda416 equivalent ||| data structures liknande
algorithm dit600 tin092 equivalent ||| algorithms liknande
be advanced course assume academic maturity willingness explore independently ||| avancerad kurs förutsätta student ha akademisk mognad vilja utforska självständig
automata theory e.g. dit321 tmv027 ||| automatteori t.ex.
logic computer science e.g. dat060 ||| logik datavetenskap t.ex.
machine learning e.g. dit380 tda231 ||| maskininlärning t.ex.
program language technology e.g. dat151 dit230 ||| programspråksteknik t.ex.
course program first study period ||| program kurs läsperiod
course present theory finite automata regular expression context-free grammar ||| kurs presentera teori ändlig automat reguljär uttryck kontext-fria språk
also include short introduction machine ||| kurs ge också kort introduktion turing-maskiner
mathematical theory be quite elegant simple ||| teori elegant enkel
context-free grammar have important application parsing analysis programming natural language ||| kontext-fria grammatiker ha viktig tillämpning parsning analys konstgjord språk t.ex. programmeringsspråk naturlig språk
first chapter introduction ||| en kapitel introduction
formal proof ||| formell bevis
finite automata regular expression algorithm connect notion ||| ändlig automat reguljär uttryck algoritm röra
context-free grammar ||| kontext-fria språk
pump lemma property regular context-free language ||| pumplemmat egenskap reguljär kontext-fria språk
short introduction push-down machine ||| kort introduktion push-down automat turing-maskiner
course examine individual weekly assignment course individual write exam give examination hall end course ||| kurs examinera individuell veckovis hemuppgift individuell skriftlig tentamen tentasal slut kurs
final degree course base performance weekly assignment exam ||| slutlig betyg basera hemuppgift tenta
knowledge understanding ||| kunskap förståelse
explain manipulate different concept automata theory formal language such formal proof non- deterministic automata regular expression regular language context-free grammar context-free language machine ||| förklara manipulera olik begrepp automatateori formell språk formell bevis automat reguljär uttryck reguljär språk kontext-fria grammatiker kontext-fria språk turing-maskiner
explain power limitation regular language context-free language ||| förklara styrka begränsning reguljär språk kontext-fria språk
skill ability ||| färdighet förmåga
prove property language grammar automata rigorously formal mathematical method ||| bevisa egenskap språk grammatiker automat rigorös matematisk metod
design automata regular expression context-free grammar accept generate certain language ||| utforma automat reguljär uttryck kontext-fria grammatiker acceptera generera viss språk
describe language accept automaton generate regular expression context-free grammar ||| beskriva språk acceptera viss automat generera viss reguljär uttryck grammatik
transform equivalent deterministic non-deterministic finite automata regular expression ||| översätta deterministisk ickedeterministiska ändlig automat reguljär uttryck
simplify automata context-free grammar ||| förenkla automat grammatiker
determine certain word belong regular context-free language ||| avgöra ord höra viss reguljär kontext-fritt språk
machine perform simple task ||| utforma turing-maskiner enkel uppgift
judgement approach ||| värderingsförmåga förhållningssätt
differentiate manipulate formal description language automata grammar focus regular context-free language finite automata regular expression ||| manipulera formell beskrivning språk automat grammatiker fokus reguljär kontext-fria språk ändlig automat reguljär uttryck
programming ||| kunskap diskret matematik programmering
